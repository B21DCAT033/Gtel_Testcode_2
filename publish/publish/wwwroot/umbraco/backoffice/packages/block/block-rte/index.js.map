{"version":3,"file":"index.js","sources":["../../../../src/packages/block/block-rte/context/block-rte-manager.context-token.ts","../../../../src/packages/block/block-rte/context/block-rte-entries.context-token.ts","../../../../src/packages/block/block-rte/context/block-rte-entry.context.ts","../../../../src/packages/block/block-rte/components/ref-rte-block/ref-rte-block.element.ts","../../../../src/packages/block/block-rte/components/block-rte-entry/block-rte-entry.element.ts","../../../../src/packages/block/block-rte/components/block-rte-entry/block-rte-entry-inline.element.ts","../../../../src/packages/block/block-rte/context/block-rte-entries.context.ts","../../../../src/packages/block/block-rte/context/block-rte-entry.context-token.ts","../../../../src/packages/block/block-rte/context/block-rte-manager.context.ts"],"sourcesContent":["import type { UmbBlockRteManagerContext } from './block-rte-manager.context.js';\r\nimport { UmbContextToken } from '@umbraco-cms/backoffice/context-api';\r\n\r\n// TODO: Make discriminator method for this:\r\nexport const UMB_BLOCK_RTE_MANAGER_CONTEXT = new UmbContextToken<UmbBlockRteManagerContext, UmbBlockRteManagerContext>(\r\n\t'UmbBlockManagerContext',\r\n);\r\n","import type { UmbBlockRteEntriesContext } from './block-rte-entries.context.js';\r\nimport { UmbContextToken } from '@umbraco-cms/backoffice/context-api';\r\n\r\n// TODO: Make discriminator method for this:\r\nexport const UMB_BLOCK_RTE_ENTRIES_CONTEXT = new UmbContextToken<UmbBlockRteEntriesContext>('UmbBlockEntriesContext');\r\n","import type { UmbBlockRteLayoutModel, UmbBlockRteTypeModel } from '../types.js';\r\nimport { UMB_BLOCK_RTE_MANAGER_CONTEXT } from './block-rte-manager.context-token.js';\r\nimport { UMB_BLOCK_RTE_ENTRIES_CONTEXT } from './block-rte-entries.context-token.js';\r\nimport { UmbBlockEntryContext } from '@umbraco-cms/backoffice/block';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { mergeObservables, observeMultiple } from '@umbraco-cms/backoffice/observable-api';\r\nexport class UmbBlockRteEntryContext extends UmbBlockEntryContext<\r\n\ttypeof UMB_BLOCK_RTE_MANAGER_CONTEXT,\r\n\ttypeof UMB_BLOCK_RTE_MANAGER_CONTEXT.TYPE,\r\n\ttypeof UMB_BLOCK_RTE_ENTRIES_CONTEXT,\r\n\ttypeof UMB_BLOCK_RTE_ENTRIES_CONTEXT.TYPE,\r\n\tUmbBlockRteTypeModel,\r\n\tUmbBlockRteLayoutModel\r\n> {\r\n\treadonly displayInline = this._layout.asObservablePart((x) => (x ? (x.displayInline ?? false) : undefined));\r\n\treadonly displayInlineConfig = this._blockType.asObservablePart((x) => (x ? (x.displayInline ?? false) : undefined));\r\n\r\n\treadonly forceHideContentEditorInOverlay = this._blockType.asObservablePart((x) =>\r\n\t\tx ? (x.forceHideContentEditorInOverlay ?? false) : undefined,\r\n\t);\r\n\r\n\treadonly showContentEdit = mergeObservables(\r\n\t\t[this._contentStructureHasProperties, this.forceHideContentEditorInOverlay],\r\n\t\t([a, b]): boolean => {\r\n\t\t\treturn a === true && b === false;\r\n\t\t},\r\n\t);\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host, UMB_BLOCK_RTE_MANAGER_CONTEXT, UMB_BLOCK_RTE_ENTRIES_CONTEXT);\r\n\t}\r\n\r\n\t_gotManager() {}\r\n\r\n\t_gotEntries() {\r\n\t\t// Secure displayInline fits configuration:\r\n\t\tthis.observe(\r\n\t\t\tobserveMultiple([this.displayInline, this.displayInlineConfig]),\r\n\t\t\t([displayInline, displayInlineConfig]) => {\r\n\t\t\t\tif (displayInlineConfig !== undefined && displayInline !== undefined && displayInlineConfig !== displayInline) {\r\n\t\t\t\t\tconst layoutValue = this._layout.getValue();\r\n\t\t\t\t\tif (!layoutValue) return;\r\n\t\t\t\t\tthis._layout.setValue({\r\n\t\t\t\t\t\t...layoutValue,\r\n\t\t\t\t\t\tdisplayInline: displayInlineConfig,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'displayInlineCorrection',\r\n\t\t);\r\n\t}\r\n\r\n\t_gotContentType() {}\r\n}\r\n","import { UMB_BLOCK_ENTRY_CONTEXT, type UmbBlockDataType } from '@umbraco-cms/backoffice/block';\r\nimport { css, customElement, html, property, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\n\r\n/**\r\n * @element umb-ref-rte-block\r\n */\r\n@customElement('umb-ref-rte-block')\r\nexport class UmbRefRteBlockElement extends UmbLitElement {\r\n\t//\r\n\t@property({ type: String })\r\n\tlabel?: string;\r\n\r\n\t@property({ type: String })\r\n\ticon?: string;\r\n\r\n\t@property({ type: Boolean, reflect: true })\r\n\tunpublished?: boolean;\r\n\r\n\t@property({ attribute: false })\r\n\tcontent?: UmbBlockDataType;\r\n\r\n\t@state()\r\n\t_workspaceEditPath?: string;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.consumeContext(UMB_BLOCK_ENTRY_CONTEXT, (context) => {\r\n\t\t\tthis.observe(\r\n\t\t\t\tcontext.workspaceEditContentPath,\r\n\t\t\t\t(workspaceEditPath) => {\r\n\t\t\t\t\tthis._workspaceEditPath = workspaceEditPath;\r\n\t\t\t\t},\r\n\t\t\t\t'observeWorkspaceEditPath',\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`<uui-ref-node standalone href=${this._workspaceEditPath ?? '#'}>\r\n\t\t\t<umb-icon slot=\"icon\" .name=${this.icon}></umb-icon>\r\n\t\t\t<umb-ufm-render slot=\"name\" inline .markdown=${this.label} .value=${this.content}></umb-ufm-render>\r\n\t\t</uui-ref-node>`;\r\n\t}\r\n\r\n\tstatic override readonly styles = [\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t}\r\n\t\t\tuui-ref-node {\r\n\t\t\t\tmin-height: var(--uui-size-16);\r\n\t\t\t}\r\n\t\t\t:host([unpublished]) umb-icon,\r\n\t\t\t:host([unpublished]) umb-ufm-render {\r\n\t\t\t\topacity: 0.6;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbRefRteBlockElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-ref-rte-block': UmbRefRteBlockElement;\r\n\t}\r\n}\r\n","import type { UmbBlockRteLayoutModel } from '../../types.js';\r\nimport { UMB_BLOCK_RTE } from '../../constants.js';\r\nimport { UmbBlockRteEntryContext } from '../../context/block-rte-entry.context.js';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { html, css, property, state, customElement, nothing } from '@umbraco-cms/backoffice/external/lit';\r\nimport type { UmbPropertyEditorUiElement } from '@umbraco-cms/backoffice/property-editor';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport type {\r\n\tManifestBlockEditorCustomView,\r\n\tUmbBlockEditorCustomViewProperties,\r\n} from '@umbraco-cms/backoffice/block-custom-view';\r\nimport { stringOrStringArrayContains } from '@umbraco-cms/backoffice/utils';\r\n\r\nimport '../ref-rte-block/index.js';\r\nimport { UmbObserveValidationStateController } from '@umbraco-cms/backoffice/validation';\r\nimport { UmbDataPathBlockElementDataQuery } from '@umbraco-cms/backoffice/block';\r\nimport type { UmbExtensionElementInitializer } from '@umbraco-cms/backoffice/extension-api';\r\n\r\n/**\r\n * @class UmbBlockRteEntryElement\r\n */\r\n@customElement('umb-rte-block')\r\nexport class UmbBlockRteEntryElement extends UmbLitElement implements UmbPropertyEditorUiElement {\r\n\t@property({ type: String, attribute: 'data-content-key', reflect: true })\r\n\tpublic get contentKey(): string | undefined {\r\n\t\treturn this._contentKey;\r\n\t}\r\n\tpublic set contentKey(value: string | undefined) {\r\n\t\tif (!value) return;\r\n\t\tthis._contentKey = value;\r\n\t\tthis.#context.setContentKey(value);\r\n\r\n\t\tnew UmbObserveValidationStateController(\r\n\t\t\tthis,\r\n\t\t\t`$.contentData[${UmbDataPathBlockElementDataQuery({ key: value })}]`,\r\n\t\t\t(hasMessages) => {\r\n\t\t\t\tthis._contentInvalid = hasMessages;\r\n\t\t\t\tthis._blockViewProps.contentInvalid = hasMessages;\r\n\t\t\t},\r\n\t\t\t'observeMessagesForContent',\r\n\t\t);\r\n\t}\r\n\tprivate _contentKey?: string | undefined;\r\n\r\n\t#context = new UmbBlockRteEntryContext(this);\r\n\r\n\t@state()\r\n\t_showContentEdit = false;\r\n\r\n\t@state()\r\n\t_hasSettings = false;\r\n\r\n\t@state()\r\n\t_label = '';\r\n\r\n\t@state()\r\n\t_icon?: string;\r\n\r\n\t@state()\r\n\t_exposed?: boolean;\r\n\r\n\t@state()\r\n\t_workspaceEditContentPath?: string;\r\n\r\n\t@state()\r\n\t_workspaceEditSettingsPath?: string;\r\n\r\n\t@state()\r\n\t_contentTypeAlias?: string;\r\n\r\n\t@state()\r\n\t_contentTypeName?: string;\r\n\r\n\t@state()\r\n\t_blockViewProps: UmbBlockEditorCustomViewProperties<UmbBlockRteLayoutModel> = {\r\n\t\tcontentKey: undefined!,\r\n\t\tconfig: { showContentEdit: false, showSettingsEdit: false },\r\n\t}; // Set to undefined cause it will be set before we render.\r\n\r\n\t// 'content-invalid' attribute is used for styling purpose.\r\n\t@property({ type: Boolean, attribute: 'content-invalid', reflect: true })\r\n\t_contentInvalid?: boolean;\r\n\r\n\t// 'settings-invalid' attribute is used for styling purpose.\r\n\t@property({ type: Boolean, attribute: 'settings-invalid', reflect: true })\r\n\t_settingsInvalid?: boolean;\r\n\r\n\t#updateBlockViewProps(incoming: Partial<UmbBlockEditorCustomViewProperties<UmbBlockRteLayoutModel>>) {\r\n\t\tthis._blockViewProps = { ...this._blockViewProps, ...incoming };\r\n\t\tthis.requestUpdate('_blockViewProps');\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\t// We do not have index for RTE Blocks at the moment.\r\n\t\tthis.#context.setIndex(0);\r\n\r\n\t\tthis.observe(\r\n\t\t\tthis.#context.showContentEdit,\r\n\t\t\t(showContentEdit) => {\r\n\t\t\t\tthis._showContentEdit = showContentEdit;\r\n\t\t\t\tthis.#updateBlockViewProps({ config: { ...this._blockViewProps.config!, showContentEdit } });\r\n\t\t\t},\r\n\t\t\tnull,\r\n\t\t);\r\n\t\tthis.observe(\r\n\t\t\tthis.#context.settingsElementTypeKey,\r\n\t\t\t(key) => {\r\n\t\t\t\tthis._hasSettings = !!key;\r\n\t\t\t\tthis.#updateBlockViewProps({ config: { ...this._blockViewProps.config!, showSettingsEdit: !!key } });\r\n\t\t\t},\r\n\t\t\tnull,\r\n\t\t);\r\n\t\tthis.observe(\r\n\t\t\tthis.#context.contentElementTypeAlias,\r\n\t\t\t(alias) => {\r\n\t\t\t\tthis._contentTypeAlias = alias;\r\n\t\t\t},\r\n\t\t\tnull,\r\n\t\t);\r\n\t\tthis.observe(\r\n\t\t\tthis.#context.contentElementTypeName,\r\n\t\t\t(contentElementTypeName) => {\r\n\t\t\t\tthis._contentTypeName = contentElementTypeName;\r\n\t\t\t},\r\n\t\t\tnull,\r\n\t\t);\r\n\t\tthis.observe(\r\n\t\t\tthis.#context.blockType,\r\n\t\t\t(blockType) => {\r\n\t\t\t\tthis.#updateBlockViewProps({ blockType });\r\n\t\t\t},\r\n\t\t\tnull,\r\n\t\t);\r\n\t\t// TODO: Implement index.\r\n\t\tthis.observe(\r\n\t\t\tthis.#context.label,\r\n\t\t\t(label) => {\r\n\t\t\t\tthis.#updateBlockViewProps({ label });\r\n\t\t\t\tthis._label = label;\r\n\t\t\t},\r\n\t\t\tnull,\r\n\t\t);\r\n\t\tthis.observe(\r\n\t\t\tthis.#context.contentElementTypeIcon,\r\n\t\t\t(icon) => {\r\n\t\t\t\tthis.#updateBlockViewProps({ icon });\r\n\t\t\t\tthis._icon = icon;\r\n\t\t\t},\r\n\t\t\tnull,\r\n\t\t);\r\n\t\tthis.observe(\r\n\t\t\tthis.#context.hasExpose,\r\n\t\t\t(exposed) => {\r\n\t\t\t\tthis.#updateBlockViewProps({ unpublished: !exposed });\r\n\t\t\t\tthis._exposed = exposed;\r\n\t\t\t},\r\n\t\t\tnull,\r\n\t\t);\r\n\t\t// Data props:\r\n\t\tthis.observe(\r\n\t\t\tthis.#context.layout,\r\n\t\t\t(layout) => {\r\n\t\t\t\tthis.#updateBlockViewProps({ layout });\r\n\t\t\t},\r\n\t\t\tnull,\r\n\t\t);\r\n\r\n\t\tthis.#observeData();\r\n\r\n\t\tthis.observe(\r\n\t\t\tthis.#context.settingsKey,\r\n\t\t\t(settingsKey) => {\r\n\t\t\t\tthis.removeUmbControllerByAlias('observeMessagesForSettings');\r\n\t\t\t\tif (settingsKey) {\r\n\t\t\t\t\t// Observe settings validation state:\r\n\t\t\t\t\tnew UmbObserveValidationStateController(\r\n\t\t\t\t\t\tthis,\r\n\t\t\t\t\t\t`$.settingsData[${UmbDataPathBlockElementDataQuery({ key: settingsKey })}]`,\r\n\t\t\t\t\t\t(hasMessages) => {\r\n\t\t\t\t\t\t\tthis._settingsInvalid = hasMessages;\r\n\t\t\t\t\t\t\tthis._blockViewProps.settingsInvalid = hasMessages;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'observeMessagesForSettings',\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tnull,\r\n\t\t);\r\n\r\n\t\tthis.observe(\r\n\t\t\tthis.#context.workspaceEditContentPath,\r\n\t\t\t(path) => {\r\n\t\t\t\tthis._workspaceEditContentPath = path;\r\n\t\t\t\tthis.#updateBlockViewProps({ config: { ...this._blockViewProps.config!, editContentPath: path } });\r\n\t\t\t},\r\n\t\t\tnull,\r\n\t\t);\r\n\t\tthis.observe(\r\n\t\t\tthis.#context.workspaceEditSettingsPath,\r\n\t\t\t(path) => {\r\n\t\t\t\tthis._workspaceEditSettingsPath = path;\r\n\t\t\t\tthis.#updateBlockViewProps({ config: { ...this._blockViewProps.config!, editSettingsPath: path } });\r\n\t\t\t},\r\n\t\t\tnull,\r\n\t\t);\r\n\t}\r\n\r\n\tasync #observeData() {\r\n\t\tthis.observe(\r\n\t\t\tawait this.#context.contentValues(),\r\n\t\t\t(content) => {\r\n\t\t\t\tthis.#updateBlockViewProps({ content });\r\n\t\t\t},\r\n\t\t\tnull,\r\n\t\t);\r\n\t\tthis.observe(\r\n\t\t\tawait this.#context.settingsValues(),\r\n\t\t\t(settings) => {\r\n\t\t\t\tthis.#updateBlockViewProps({ settings });\r\n\t\t\t},\r\n\t\t\tnull,\r\n\t\t);\r\n\t}\r\n\r\n\toverride connectedCallback() {\r\n\t\tsuper.connectedCallback();\r\n\t\tthis.setAttribute('contenteditable', 'false');\r\n\t}\r\n\r\n\treadonly #filterBlockCustomViews = (manifest: ManifestBlockEditorCustomView) => {\r\n\t\tconst elementTypeAlias = this._contentTypeAlias ?? '';\r\n\t\tconst isForBlockEditor =\r\n\t\t\t!manifest.forBlockEditor || stringOrStringArrayContains(manifest.forBlockEditor, UMB_BLOCK_RTE);\r\n\t\tconst isForContentTypeAlias =\r\n\t\t\t!manifest.forContentTypeAlias || stringOrStringArrayContains(manifest.forContentTypeAlias, elementTypeAlias);\r\n\t\treturn isForBlockEditor && isForContentTypeAlias;\r\n\t};\r\n\r\n\t#expose = () => {\r\n\t\tthis.#context.expose();\r\n\t};\r\n\r\n\t#extensionSlotRenderMethod = (ext: UmbExtensionElementInitializer<ManifestBlockEditorCustomView>) => {\r\n\t\tif (this._exposed) {\r\n\t\t\treturn ext.component;\r\n\t\t} else {\r\n\t\t\treturn html`<div>\r\n\t\t\t\t${ext.component}\r\n\t\t\t\t<umb-block-overlay-expose-button\r\n\t\t\t\t\t.contentTypeName=${this._contentTypeName}\r\n\t\t\t\t\t@click=${this.#expose}></umb-block-overlay-expose-button>\r\n\t\t\t</div>`;\r\n\t\t}\r\n\t};\r\n\r\n\t#renderBlock() {\r\n\t\treturn this.contentKey && this._contentTypeAlias\r\n\t\t\t? html`\r\n\t\t\t\t\t<div class=\"uui-text uui-font\">\r\n\t\t\t\t\t\t<umb-extension-slot\r\n\t\t\t\t\t\t\ttype=\"blockEditorCustomView\"\r\n\t\t\t\t\t\t\tdefault-element=\"umb-ref-rte-block\"\r\n\t\t\t\t\t\t\t.renderMethod=${this.#extensionSlotRenderMethod}\r\n\t\t\t\t\t\t\t.props=${this._blockViewProps}\r\n\t\t\t\t\t\t\t.filter=${this.#filterBlockCustomViews}\r\n\t\t\t\t\t\t\tsingle>\r\n\t\t\t\t\t\t\t${this.#renderRefBlock()}\r\n\t\t\t\t\t\t</umb-extension-slot>\r\n\t\t\t\t\t\t<uui-action-bar> ${this.#renderEditAction()} ${this.#renderEditSettingsAction()} </uui-action-bar>\r\n\t\t\t\t\t\t${!this._showContentEdit && this._contentInvalid\r\n\t\t\t\t\t\t\t? html`<uui-badge attention color=\"danger\" label=\"Invalid content\">!</uui-badge>`\r\n\t\t\t\t\t\t\t: nothing}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t`\r\n\t\t\t: nothing;\r\n\t}\r\n\r\n\t#renderRefBlock() {\r\n\t\treturn html`<umb-ref-rte-block\r\n\t\t\t.label=${this._label}\r\n\t\t\t.icon=${this._icon}\r\n\t\t\t.unpublished=${!this._exposed}\r\n\t\t\t.content=${this._blockViewProps.content}\r\n\t\t\t.settings=${this._blockViewProps.settings}></umb-ref-rte-block>`;\r\n\t}\r\n\r\n\t#renderEditAction() {\r\n\t\treturn this._showContentEdit && this._workspaceEditContentPath\r\n\t\t\t? html`<uui-button\r\n\t\t\t\t\tlabel=\"edit\"\r\n\t\t\t\t\tlook=\"secondary\"\r\n\t\t\t\t\tcolor=${this._contentInvalid ? 'danger' : ''}\r\n\t\t\t\t\thref=${this._workspaceEditContentPath}>\r\n\t\t\t\t\t<uui-icon name=${this._exposed === false ? 'icon-add' : 'icon-edit'}></uui-icon>\r\n\t\t\t\t\t${this._contentInvalid\r\n\t\t\t\t\t\t? html`<uui-badge attention color=\"danger\" label=\"Invalid content\">!</uui-badge>`\r\n\t\t\t\t\t\t: nothing}\r\n\t\t\t\t</uui-button>`\r\n\t\t\t: this._showContentEdit === false && this._exposed === false\r\n\t\t\t\t? html`<uui-button\r\n\t\t\t\t\t\t@click=${this.#expose}\r\n\t\t\t\t\t\tlabel=${this.localize.term('blockEditor_createThisFor', this._contentTypeName)}\r\n\t\t\t\t\t\tlook=\"secondary\">\r\n\t\t\t\t\t\t<uui-icon name=\"icon-add\"></uui-icon>\r\n\t\t\t\t\t</uui-button>`\r\n\t\t\t\t: nothing;\r\n\t}\r\n\r\n\t#renderEditSettingsAction() {\r\n\t\treturn html`\r\n\t\t\t${this._hasSettings && this._workspaceEditSettingsPath\r\n\t\t\t\t? html`<uui-button\r\n\t\t\t\t\t\tlabel=\"Edit settings\"\r\n\t\t\t\t\t\tlook=\"secondary\"\r\n\t\t\t\t\t\tcolor=${this._settingsInvalid ? 'danger' : ''}\r\n\t\t\t\t\t\thref=${this._workspaceEditSettingsPath}>\r\n\t\t\t\t\t\t<uui-icon name=\"icon-settings\"></uui-icon>\r\n\t\t\t\t\t\t${this._settingsInvalid\r\n\t\t\t\t\t\t\t? html`<uui-badge attention color=\"danger\" label=\"Invalid settings\">!</uui-badge>`\r\n\t\t\t\t\t\t\t: nothing}\r\n\t\t\t\t\t</uui-button>`\r\n\t\t\t\t: nothing}\r\n\t\t`;\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn this.#renderBlock();\r\n\t}\r\n\r\n\tstatic override readonly styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tposition: relative;\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\tuser-select: none;\r\n\t\t\t\tuser-drag: auto;\r\n\t\t\t\twhite-space: nowrap;\r\n\t\t\t}\r\n\t\t\t:host(.ProseMirror-selectednode) {\r\n\t\t\t\tumb-ref-rte-block {\r\n\t\t\t\t\tcursor: not-allowed;\r\n\t\t\t\t\toutline: 3px solid var(--uui-color-focus);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tuui-action-bar {\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\ttop: var(--uui-size-2);\r\n\t\t\t\tright: var(--uui-size-2);\r\n\t\t\t}\r\n\r\n\t\t\t:host([drag-placeholder]) {\r\n\t\t\t\topacity: 0.2;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbBlockRteEntryElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-rte-block': UmbBlockRteEntryElement;\r\n\t}\r\n}\r\n","import { UmbBlockRteEntryElement } from './block-rte-entry.element.js';\r\nimport { css, customElement } from '@umbraco-cms/backoffice/external/lit';\r\n\r\n/**\r\n * Implementation for the inline component, inherited code from the umb-rte-block element.\r\n * @element umb-rte-block-inline\r\n */\r\n@customElement('umb-rte-block-inline')\r\nexport class UmbBlockRteEntryInlineElement extends UmbBlockRteEntryElement {\r\n\tstatic override styles = [\r\n\t\t...UmbBlockRteEntryElement.styles,\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: inline-block;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbBlockRteEntryInlineElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-rte-block-inline': UmbBlockRteEntryInlineElement;\r\n\t}\r\n}\r\n","import type { UmbBlockDataModel } from '../../block/index.js';\r\nimport { UMB_BLOCK_CATALOGUE_MODAL, UmbBlockEntriesContext } from '../../block/index.js';\r\nimport type { UmbBlockRteLayoutModel, UmbBlockRteTypeModel, UmbBlockRteValueModel } from '../types.js';\r\nimport {\r\n\tUMB_BLOCK_RTE_WORKSPACE_MODAL,\r\n\ttype UmbBlockRteWorkspaceOriginData,\r\n} from '../workspace/block-rte-workspace.modal-token.js';\r\nimport { UMB_BLOCK_RTE_MANAGER_CONTEXT } from './block-rte-manager.context-token.js';\r\nimport { UmbBooleanState } from '@umbraco-cms/backoffice/observable-api';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { UmbModalRouteRegistrationController } from '@umbraco-cms/backoffice/router';\r\nimport { UMB_BLOCK_RTE_PROPERTY_EDITOR_SCHEMA_ALIAS } from '@umbraco-cms/backoffice/rte';\r\n\r\nexport class UmbBlockRteEntriesContext extends UmbBlockEntriesContext<\r\n\ttypeof UMB_BLOCK_RTE_MANAGER_CONTEXT,\r\n\ttypeof UMB_BLOCK_RTE_MANAGER_CONTEXT.TYPE,\r\n\tUmbBlockRteTypeModel,\r\n\tUmbBlockRteLayoutModel,\r\n\tUmbBlockRteWorkspaceOriginData\r\n> {\r\n\t//\r\n\r\n\t// We will just say its always allowed for RTE for now: [NL]\r\n\tpublic readonly canCreate = new UmbBooleanState(true).asObservable();\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host, UMB_BLOCK_RTE_MANAGER_CONTEXT);\r\n\r\n\t\tnew UmbModalRouteRegistrationController(this, UMB_BLOCK_CATALOGUE_MODAL)\r\n\t\t\t.addAdditionalPath('_catalogue/:view')\r\n\t\t\t.onSetup((routingInfo) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tblocks: this._manager?.getBlockTypes() ?? [],\r\n\t\t\t\t\t\tblockGroups: [],\r\n\t\t\t\t\t\topenClipboard: routingInfo.view === 'clipboard',\r\n\t\t\t\t\t\toriginData: {},\r\n\t\t\t\t\t\tcreateBlockInWorkspace: true,\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t})\r\n\t\t\t.onSubmit(async (value, data) => {\r\n\t\t\t\tif (value?.create && data) {\r\n\t\t\t\t\tconst created = await this.create(\r\n\t\t\t\t\t\tvalue.create.contentElementTypeKey,\r\n\t\t\t\t\t\t// We can parse an empty object, cause the rest will be filled in by others.\r\n\t\t\t\t\t\t{} as any,\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (created) {\r\n\t\t\t\t\t\tthis.insert(\r\n\t\t\t\t\t\t\tcreated.layout,\r\n\t\t\t\t\t\t\tcreated.content,\r\n\t\t\t\t\t\t\tcreated.settings,\r\n\t\t\t\t\t\t\tdata.originData as UmbBlockRteWorkspaceOriginData,\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthrow new Error('Failed to create block');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.observeRouteBuilder((routeBuilder) => {\r\n\t\t\t\tthis._catalogueRouteBuilderState.setValue(routeBuilder);\r\n\t\t\t});\r\n\r\n\t\tnew UmbModalRouteRegistrationController(this, UMB_BLOCK_RTE_WORKSPACE_MODAL)\r\n\t\t\t.addAdditionalPath('block')\r\n\t\t\t.onSetup(() => {\r\n\t\t\t\treturn { data: { entityType: 'block', preset: {}, baseDataPath: this._dataPath }, modal: { size: 'medium' } };\r\n\t\t\t})\r\n\t\t\t.observeRouteBuilder((routeBuilder) => {\r\n\t\t\t\tconst newPath = routeBuilder({});\r\n\t\t\t\tthis._workspacePath.setValue(newPath);\r\n\t\t\t});\r\n\t}\r\n\r\n\tprotected _gotBlockManager() {\r\n\t\tif (!this._manager) return;\r\n\r\n\t\tthis.observe(\r\n\t\t\tthis._manager.layouts,\r\n\t\t\t(layouts) => {\r\n\t\t\t\tthis._layoutEntries.setValue(layouts);\r\n\t\t\t},\r\n\t\t\t'observeParentLayouts',\r\n\t\t);\r\n\t\tthis.observe(\r\n\t\t\tthis.layoutEntries,\r\n\t\t\t(layouts) => {\r\n\t\t\t\tthis._manager?.setLayouts(layouts);\r\n\t\t\t},\r\n\t\t\t'observeThisLayouts',\r\n\t\t);\r\n\t}\r\n\r\n\tgetPathForCreateBlock() {\r\n\t\treturn this._catalogueRouteBuilderState.getValue()?.({ view: 'create' });\r\n\t}\r\n\r\n\tgetPathForClipboard() {\r\n\t\treturn this._catalogueRouteBuilderState.getValue()?.({ view: 'clipboard' });\r\n\t}\r\n\r\n\toverride async setLayouts(layouts: Array<UmbBlockRteLayoutModel>) {\r\n\t\tawait this._retrieveManager;\r\n\t\tthis._manager?.setLayouts(layouts);\r\n\t}\r\n\r\n\tasync create(\r\n\t\tcontentElementTypeKey: string,\r\n\t\tpartialLayoutEntry?: Omit<UmbBlockRteLayoutModel, 'contentKey'>,\r\n\t\toriginData?: UmbBlockRteWorkspaceOriginData,\r\n\t) {\r\n\t\tawait this._retrieveManager;\r\n\t\treturn await this._manager?.createWithPresets(contentElementTypeKey, partialLayoutEntry, originData);\r\n\t}\r\n\r\n\t// insert Block?\r\n\r\n\tasync insert(\r\n\t\tlayoutEntry: UmbBlockRteLayoutModel,\r\n\t\tcontent: UmbBlockDataModel,\r\n\t\tsettings: UmbBlockDataModel | undefined,\r\n\t\toriginData: UmbBlockRteWorkspaceOriginData,\r\n\t) {\r\n\t\tawait this._retrieveManager;\r\n\t\treturn this._manager?.insert(layoutEntry, content, settings, originData) ?? false;\r\n\t}\r\n\r\n\t// create Block?\r\n\toverride async delete(contentKey: string) {\r\n\t\tawait super.delete(contentKey);\r\n\t\tthis._manager?.deleteLayoutElement(contentKey);\r\n\t}\r\n\r\n\tprotected async _insertFromPropertyValue(value: UmbBlockRteValueModel, originData: UmbBlockRteWorkspaceOriginData) {\r\n\t\tconst layoutEntries = value.layout[UMB_BLOCK_RTE_PROPERTY_EDITOR_SCHEMA_ALIAS];\r\n\r\n\t\tif (!layoutEntries) {\r\n\t\t\tthrow new Error('No layout entries found');\r\n\t\t}\r\n\r\n\t\tawait Promise.all(\r\n\t\t\tlayoutEntries.map(async (layoutEntry) => {\r\n\t\t\t\tthis._insertBlockFromPropertyValue(layoutEntry, value, originData);\r\n\t\t\t\t// TODO: Missing some way to insert a Block HTML Element into the RTE at the current cursor point. (hopefully the responsibilit can be avoided here, but there is some connection missing at this point) [NL]\r\n\t\t\t}),\r\n\t\t);\r\n\r\n\t\treturn originData;\r\n\t}\r\n}\r\n","import type { UmbBlockRteEntryContext } from './block-rte-entry.context.js';\r\nimport { UmbContextToken } from '@umbraco-cms/backoffice/context-api';\r\n\r\n// TODO: Make discriminator method for this:\r\nexport const UMB_BLOCK_RTE_ENTRY_CONTEXT = new UmbContextToken<UmbBlockRteEntryContext>('UmbBlockEntryContext');\r\n","import type { UmbBlockRteWorkspaceOriginData } from '../workspace/block-rte-workspace.modal-token.js';\r\nimport type { UmbBlockRteLayoutModel, UmbBlockRteTypeModel } from '../types.js';\r\nimport type { UmbBlockDataModel } from '../../block/types.js';\r\nimport { UmbBlockManagerContext, type UmbBlockDataObjectModel } from '@umbraco-cms/backoffice/block';\r\n\r\nimport '../components/block-rte-entry/index.js';\r\n\r\n/**\r\n * A implementation of the Block Manager specifically for the Rich Text Editor.\r\n */\r\nexport class UmbBlockRteManagerContext<\r\n\tBlockLayoutType extends UmbBlockRteLayoutModel = UmbBlockRteLayoutModel,\r\n> extends UmbBlockManagerContext<UmbBlockRteTypeModel, BlockLayoutType> {\r\n\tremoveOneLayout(contentKey: string) {\r\n\t\tthis._layouts.removeOne(contentKey);\r\n\t}\r\n\tremoveManyLayouts(contentKeys: Array<string>) {\r\n\t\tthis._layouts.remove(contentKeys);\r\n\t}\r\n\r\n\t/**\r\n\t * @deprecated Use createWithPresets instead. Will be removed in v.17.\r\n\t */\r\n\tcreate(\r\n\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n\t\tcontentElementTypeKey: string,\r\n\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n\t\tpartialLayoutEntry?: Omit<BlockLayoutType, 'contentKey'>,\r\n\t\t// This property is used by some implementations, but not used in this. Do not remove. [NL]\r\n\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n\t\t_originData?: UmbBlockRteWorkspaceOriginData,\r\n\t) {\r\n\t\tthrow new Error('Method deparecated use createWithPresets');\r\n\t\treturn {} as UmbBlockDataObjectModel<BlockLayoutType>;\r\n\t}\r\n\tasync createWithPresets(\r\n\t\tcontentElementTypeKey: string,\r\n\t\tpartialLayoutEntry?: Omit<BlockLayoutType, 'contentKey'>,\r\n\t\t// This property is used by some implementations, but not used in this, do not remove. [NL]\r\n\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n\t\t_originData?: UmbBlockRteWorkspaceOriginData,\r\n\t) {\r\n\t\tconst data = await super._createBlockData(contentElementTypeKey, partialLayoutEntry);\r\n\r\n\t\t// Find block type.\r\n\t\tconst blockType = this.getBlockTypes().find((x) => x.contentElementTypeKey === contentElementTypeKey);\r\n\t\tif (!blockType) {\r\n\t\t\tthrow new Error(`Cannot create block, missing block type for ${contentElementTypeKey}`);\r\n\t\t}\r\n\r\n\t\tif (blockType.displayInline) {\r\n\t\t\tdata.layout.displayInline = true;\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tinsert(\r\n\t\tlayoutEntry: BlockLayoutType,\r\n\t\tcontent: UmbBlockDataModel,\r\n\t\tsettings: UmbBlockDataModel | undefined,\r\n\t\toriginData: UmbBlockRteWorkspaceOriginData,\r\n\t) {\r\n\t\tthis._layouts.appendOne(layoutEntry);\r\n\r\n\t\tthis.insertBlockData(layoutEntry, content, settings, originData);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * @param contentKey\r\n\t * @internal\r\n\t */\r\n\tpublic deleteLayoutElement(contentKey: string) {\r\n\t\tthis.removeBlockKey(contentKey);\r\n\t}\r\n}\r\n"],"names":["UMB_BLOCK_RTE_MANAGER_CONTEXT","UmbContextToken","UMB_BLOCK_RTE_ENTRIES_CONTEXT","UmbBlockRteEntryContext","UmbBlockEntryContext","host","x","mergeObservables","a","b","observeMultiple","displayInline","displayInlineConfig","layoutValue","UmbRefRteBlockElement","UmbLitElement","UMB_BLOCK_ENTRY_CONTEXT","context","workspaceEditPath","html","css","__decorateClass","property","state","customElement","_context","_UmbBlockRteEntryElement_instances","updateBlockViewProps_fn","observeData_fn","_filterBlockCustomViews","_expose","_extensionSlotRenderMethod","renderBlock_fn","renderRefBlock_fn","renderEditAction_fn","renderEditSettingsAction_fn","UmbBlockRteEntryElement","__privateAdd","manifest","elementTypeAlias","isForBlockEditor","stringOrStringArrayContains","UMB_BLOCK_RTE","isForContentTypeAlias","__privateGet","ext","showContentEdit","__privateMethod","key","alias","contentElementTypeName","blockType","label","icon","exposed","layout","settingsKey","UmbObserveValidationStateController","UmbDataPathBlockElementDataQuery","hasMessages","path","value","incoming","content","settings","nothing","UmbTextStyles","UmbBlockRteEntryInlineElement","UmbBlockRteEntriesContext","UmbBlockEntriesContext","UmbBooleanState","UmbModalRouteRegistrationController","UMB_BLOCK_CATALOGUE_MODAL","routingInfo","data","created","routeBuilder","UMB_BLOCK_RTE_WORKSPACE_MODAL","newPath","layouts","contentElementTypeKey","partialLayoutEntry","originData","layoutEntry","contentKey","layoutEntries","UMB_BLOCK_RTE_PROPERTY_EDITOR_SCHEMA_ALIAS","UMB_BLOCK_RTE_ENTRY_CONTEXT","UmbBlockRteManagerContext","UmbBlockManagerContext","contentKeys","_originData"],"mappings":"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"}