{"version":3,"file":"grid-block-to-block-grid-paste-translator-CaMZIJtM.js","sources":["../../../src/packages/block/block-grid/clipboard/grid-block/paste/grid-block-to-block-grid-paste-translator.ts"],"sourcesContent":["import { UMB_BLOCK_GRID_PROPERTY_EDITOR_SCHEMA_ALIAS } from '../../../property-editors/constants.js';\r\nimport type { UmbBlockGridValueModel } from '../../../types.js';\r\nimport type { UmbGridBlockClipboardEntryValueModel } from '../../types.js';\r\nimport { UmbControllerBase } from '@umbraco-cms/backoffice/class-api';\r\nimport type { UmbClipboardPastePropertyValueTranslator } from '@umbraco-cms/backoffice/clipboard';\r\n\r\nexport class UmbGridBlockToBlockGridClipboardPastePropertyValueTranslator\r\n\textends UmbControllerBase\r\n\timplements UmbClipboardPastePropertyValueTranslator<UmbGridBlockClipboardEntryValueModel, UmbBlockGridValueModel>\r\n{\r\n\t/**\r\n\t * Translates a grid block clipboard entry value to a block grid property value.\r\n\t * @param {UmbGridBlockClipboardEntryValueModel} value - The grid block clipboard entry value.\r\n\t * @returns {Promise<UmbBlockGridValueModel>}  {Promise<UmbBlockGridValueModel>}\r\n\t * @memberof UmbGridBlockToBlockGridClipboardPastePropertyValueTranslator\r\n\t */\r\n\tasync translate(value: UmbGridBlockClipboardEntryValueModel): Promise<UmbBlockGridValueModel> {\r\n\t\tif (!value) {\r\n\t\t\tthrow new Error('Value is missing.');\r\n\t\t}\r\n\r\n\t\tconst valueClone = structuredClone(value);\r\n\r\n\t\tconst blockGridPropertyValue: UmbBlockGridValueModel = {\r\n\t\t\tcontentData: valueClone.contentData,\r\n\t\t\tsettingsData: valueClone.settingsData,\r\n\t\t\texpose: [],\r\n\t\t\tlayout: {\r\n\t\t\t\t[UMB_BLOCK_GRID_PROPERTY_EDITOR_SCHEMA_ALIAS]: valueClone.layout,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\treturn blockGridPropertyValue;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the clipboard entry value is compatible with the config.\r\n\t * @param {UmbGridBlockClipboardEntryValueModel} value - The grid block clipboard entry value.\r\n\t * @param {*} config - The Property Editor config.\r\n\t * @returns {Promise<boolean>} {Promise<boolean>}\r\n\t * @memberof UmbGridBlockToBlockGridClipboardPastePropertyValueTranslator\r\n\t */\r\n\tasync isCompatibleValue(\r\n\t\tvalue: UmbGridBlockClipboardEntryValueModel,\r\n\t\t// TODO: Replace any with the correct type.\r\n\t\tconfig: Array<{ alias: string; value: [{ contentElementTypeKey: string }] }>,\r\n\t): Promise<boolean> {\r\n\t\tconst allowedBlockContentTypes =\r\n\t\t\tconfig.find((c) => c.alias === 'blocks')?.value.map((b) => b.contentElementTypeKey) ?? [];\r\n\t\tconst blockContentTypes = value.contentData.map((c) => c.contentTypeKey);\r\n\t\treturn blockContentTypes?.every((b) => allowedBlockContentTypes.includes(b)) ?? false;\r\n\t}\r\n}\r\n\r\nexport { UmbGridBlockToBlockGridClipboardPastePropertyValueTranslator as api };\r\n"],"names":["UmbGridBlockToBlockGridClipboardPastePropertyValueTranslator","UmbControllerBase","value","valueClone","UMB_BLOCK_GRID_PROPERTY_EDITOR_SCHEMA_ALIAS","config","allowedBlockContentTypes","c","b"],"mappings":";;AAMO,MAAMA,UACJC,EAET;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOC,MAAM,UAAUC,GAA8E;AAC7F,QAAI,CAACA;AACE,YAAA,IAAI,MAAM,mBAAmB;AAG9B,UAAAC,IAAa,gBAAgBD,CAAK;AAWjC,WATgD;AAAA,MACtD,aAAaC,EAAW;AAAA,MACxB,cAAcA,EAAW;AAAA,MACzB,QAAQ,CAAC;AAAA,MACT,QAAQ;AAAA,QACP,CAACC,CAA2C,GAAGD,EAAW;AAAA,MAAA;AAAA,IAE5D;AAAA,EAEO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUR,MAAM,kBACLD,GAEAG,GACmB;AACnB,UAAMC,IACLD,EAAO,KAAK,CAACE,MAAMA,EAAE,UAAU,QAAQ,GAAG,MAAM,IAAI,CAACC,MAAMA,EAAE,qBAAqB,KAAK,CAAC;AAElF,WADmBN,EAAM,YAAY,IAAI,CAACK,MAAMA,EAAE,cAAc,GAC7C,MAAM,CAACC,MAAMF,EAAyB,SAASE,CAAC,CAAC,KAAK;AAAA,EAAA;AAElF;"}