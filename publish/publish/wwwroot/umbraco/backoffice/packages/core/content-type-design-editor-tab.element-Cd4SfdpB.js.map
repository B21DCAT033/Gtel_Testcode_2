{"version":3,"file":"content-type-design-editor-tab.element-Cd4SfdpB.js","sources":["../../../src/packages/core/content-type/workspace/views/design/content-type-design-editor-property.context.ts","../../../src/packages/core/content-type/workspace/views/design/content-type-design-editor-property.element.ts","../../../src/packages/core/content-type/workspace/views/design/content-type-design-editor-properties.element.ts","../../../src/packages/core/content-type/workspace/views/design/content-type-design-editor-group.element.ts","../../../src/packages/core/content-type/workspace/views/design/content-type-design-editor-tab.element.ts"],"sourcesContent":["import { UMB_PROPERTY_TYPE_CONTEXT } from './content-type-design-editor-property.context-token.js';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { UmbContextBase } from '@umbraco-cms/backoffice/class-api';\r\nimport { UmbStringState } from '@umbraco-cms/backoffice/observable-api';\r\n\r\nexport class UmbPropertyTypeContext extends UmbContextBase<UmbPropertyTypeContext> {\r\n\t#alias = new UmbStringState(undefined);\r\n\tpublic readonly alias = this.#alias.asObservable();\r\n\t#label = new UmbStringState(undefined);\r\n\tpublic readonly label = this.#label.asObservable();\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host, UMB_PROPERTY_TYPE_CONTEXT);\r\n\t}\r\n\r\n\tpublic setAlias(alias: string | undefined): void {\r\n\t\tthis.#alias.setValue(alias);\r\n\t}\r\n\tpublic getAlias(): string | undefined {\r\n\t\treturn this.#alias.getValue();\r\n\t}\r\n\tpublic setLabel(label: string | undefined): void {\r\n\t\tthis.#label.setValue(label);\r\n\t}\r\n\tpublic getLabel(): string | undefined {\r\n\t\treturn this.#label.getValue();\r\n\t}\r\n\r\n\tpublic override destroy(): void {\r\n\t\tsuper.destroy();\r\n\t\tthis.#alias.destroy();\r\n\t\tthis.#label.destroy();\r\n\t}\r\n}\r\n","import type { UmbContentTypePropertyStructureHelper } from '../../../structure/index.js';\r\nimport type { UmbContentTypeModel, UmbPropertyTypeModel, UmbPropertyTypeScaffoldModel } from '../../../types.js';\r\nimport { UmbPropertyTypeContext } from './content-type-design-editor-property.context.js';\r\nimport { css, html, customElement, property, state, nothing } from '@umbraco-cms/backoffice/external/lit';\r\nimport { generateAlias } from '@umbraco-cms/backoffice/utils';\r\nimport { umbConfirmModal } from '@umbraco-cms/backoffice/modal';\r\nimport { UmbDataTypeDetailRepository } from '@umbraco-cms/backoffice/data-type';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport { UMB_EDIT_PROPERTY_TYPE_WORKSPACE_PATH_PATTERN } from '@umbraco-cms/backoffice/property-type';\r\nimport type { UUIInputElement, UUIInputLockElement, UUIInputEvent } from '@umbraco-cms/backoffice/external/uui';\r\n\r\n/**\r\n *  @element umb-content-type-design-editor-property\r\n *  @description - Element for displaying a property in an workspace.\r\n *  @slot editor - Slot for rendering the Property Editor\r\n */\r\n@customElement('umb-content-type-design-editor-property')\r\nexport class UmbContentTypeDesignEditorPropertyElement extends UmbLitElement {\r\n\t#context = new UmbPropertyTypeContext(this);\r\n\t#dataTypeDetailRepository = new UmbDataTypeDetailRepository(this);\r\n\t#dataTypeUnique?: string;\r\n\t#propertyUnique?: string;\r\n\r\n\t@property({ attribute: false })\r\n\tpublic set propertyStructureHelper(value: UmbContentTypePropertyStructureHelper<UmbContentTypeModel> | undefined) {\r\n\t\tif (value === this._propertyStructureHelper) return;\r\n\t\tthis._propertyStructureHelper = value;\r\n\t\tthis.#checkInherited();\r\n\t}\r\n\tpublic get propertyStructureHelper(): UmbContentTypePropertyStructureHelper<UmbContentTypeModel> | undefined {\r\n\t\treturn this._propertyStructureHelper;\r\n\t}\r\n\tprivate _propertyStructureHelper?: UmbContentTypePropertyStructureHelper<UmbContentTypeModel> | undefined;\r\n\r\n\t/**\r\n\t * Property, the data object for the property.\r\n\t * @type {UmbPropertyTypeModel | UmbPropertyTypeScaffoldModel | undefined}\r\n\t * @attr\r\n\t * @default\r\n\t */\r\n\t@property({ type: Object })\r\n\tpublic get property(): UmbPropertyTypeModel | UmbPropertyTypeScaffoldModel | undefined {\r\n\t\treturn this._property;\r\n\t}\r\n\tpublic set property(value: UmbPropertyTypeModel | UmbPropertyTypeScaffoldModel | undefined) {\r\n\t\tconst oldValue = this._property;\r\n\t\tif (value === oldValue) return;\r\n\t\tthis._property = value;\r\n\t\tthis.#context.setAlias(value?.alias);\r\n\t\tthis.#context.setLabel(value?.name);\r\n\t\tthis.#checkAliasAutoGenerate(this._property?.id);\r\n\t\tthis.#checkInherited();\r\n\t\tthis.#setDataType(this._property?.dataType?.unique);\r\n\t\tthis.requestUpdate('property', oldValue);\r\n\t}\r\n\tprivate _property?: UmbPropertyTypeModel | UmbPropertyTypeScaffoldModel | undefined;\r\n\r\n\t@property({ type: Boolean, reflect: true, attribute: 'sort-mode-active' })\r\n\tpublic sortModeActive = false;\r\n\r\n\t@property({ attribute: false })\r\n\tpublic editContentTypePath?: string;\r\n\r\n\t@property({ type: Boolean, reflect: true, attribute: '_inherited' })\r\n\tpublic _inherited?: boolean;\r\n\r\n\t@state()\r\n\tpublic _inheritedContentTypeId?: string;\r\n\r\n\t@state()\r\n\tpublic _inheritedContentTypeName?: string;\r\n\r\n\t@property({ type: String, reflect: false })\r\n\tprotected editPropertyTypePath?: string;\r\n\r\n\t@state()\r\n\tprivate _dataTypeName?: string;\r\n\r\n\t@state()\r\n\tprivate _aliasLocked = true;\r\n\r\n\t#autoGenerateAlias = true;\r\n\r\n\t#checkAliasAutoGenerate(unique: string | undefined) {\r\n\t\tif (unique === this.#propertyUnique) return;\r\n\t\tthis.#propertyUnique = unique;\r\n\r\n\t\tif (this.#context.getAlias()) {\r\n\t\t\tthis.#autoGenerateAlias = false;\r\n\t\t}\r\n\t}\r\n\r\n\tasync #checkInherited() {\r\n\t\tif (this._propertyStructureHelper && this._property) {\r\n\t\t\t// We can first match with something if we have a name [NL]\r\n\t\t\tthis.observe(\r\n\t\t\t\tawait this._propertyStructureHelper!.contentTypeOfProperty(this._property.id),\r\n\t\t\t\t(contentType) => {\r\n\t\t\t\t\tthis._inherited =\r\n\t\t\t\t\t\tthis._propertyStructureHelper?.getStructureManager()?.getOwnerContentTypeUnique() !== contentType?.unique;\r\n\t\t\t\t\tthis._inheritedContentTypeId = contentType?.unique;\r\n\t\t\t\t\tthis._inheritedContentTypeName = contentType?.name;\r\n\t\t\t\t},\r\n\t\t\t\t'observeIsOwnerProperty',\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t#partialUpdate(partialObject: UmbPropertyTypeModel) {\r\n\t\tif (!this._property || !this._propertyStructureHelper) return;\r\n\t\tthis._propertyStructureHelper.partialUpdateProperty(this._property.id, partialObject);\r\n\t}\r\n\r\n\t#singleValueUpdate<PropertyNameType extends keyof UmbPropertyTypeModel>(\r\n\t\tpropertyName: PropertyNameType,\r\n\t\tvalue: UmbPropertyTypeModel[PropertyNameType],\r\n\t) {\r\n\t\tif (!this._property || !this._propertyStructureHelper) return;\r\n\t\tconst partialObject: Partial<UmbPropertyTypeModel> = {};\r\n\t\tpartialObject[propertyName] = value === null ? undefined : value;\r\n\t\tthis._propertyStructureHelper.partialUpdateProperty(this._property.id, partialObject);\r\n\t}\r\n\r\n\t#onToggleAliasLock(event: CustomEvent) {\r\n\t\tif (!this.property?.alias && (event.target as UUIInputLockElement).locked) {\r\n\t\t\tthis.#autoGenerateAlias = true;\r\n\t\t} else {\r\n\t\t\tthis.#autoGenerateAlias = false;\r\n\t\t}\r\n\r\n\t\tthis._aliasLocked = !this._aliasLocked;\r\n\t\tif (!this._aliasLocked) {\r\n\t\t\t(event.target as UUIInputElement)?.focus();\r\n\t\t}\r\n\t}\r\n\r\n\tasync #setDataType(dataTypeUnique: string | undefined) {\r\n\t\tif (!dataTypeUnique) {\r\n\t\t\tthis._dataTypeName = undefined;\r\n\t\t\tthis.#dataTypeUnique = undefined;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (dataTypeUnique === this.#dataTypeUnique) return;\r\n\t\tthis.#dataTypeUnique = dataTypeUnique;\r\n\t\tthis.#dataTypeDetailRepository.requestByUnique(dataTypeUnique).then((x) => (this._dataTypeName = x?.data?.name));\r\n\t}\r\n\r\n\tasync #requestRemove(e: Event) {\r\n\t\te.preventDefault();\r\n\t\te.stopImmediatePropagation();\r\n\t\tif (!this._property || !this._property.id) return;\r\n\r\n\t\t// TODO: Do proper localization here: [NL]\r\n\t\tawait umbConfirmModal(this, {\r\n\t\t\theadline: `${this.localize.term('actions_delete')} property`,\r\n\t\t\tcontent: html`<umb-localize key=\"contentTypeEditor_confirmDeletePropertyMessage\" .args=${[this._property.name ?? this._property.id]}>Are you sure you want to delete the property <strong>${this._property.name ?? this._property.id}</strong></umb-localize></div>`,\r\n\t\t\tconfirmLabel: this.localize.term('actions_delete'),\r\n\t\t\tcolor: 'danger',\r\n\t\t});\r\n\r\n\t\tthis._propertyStructureHelper?.removeProperty(this._property.id);\r\n\t}\r\n\r\n\t#onAliasChanged(event: UUIInputEvent) {\r\n\t\tthis.#singleValueUpdate('alias', event.target.value.toString());\r\n\t}\r\n\r\n\t#onNameChanged(event: UUIInputEvent) {\r\n\t\tconst newName = event.target.value.toString();\r\n\t\tif (this.#autoGenerateAlias) {\r\n\t\t\tthis.#singleValueUpdate('alias', generateAlias(newName ?? ''));\r\n\t\t}\r\n\t\tthis.#singleValueUpdate('name', newName);\r\n\t}\r\n\r\n\toverride render() {\r\n\t\t// TODO: Only show alias on label if user has access to DocumentType within settings: [NL]\r\n\t\treturn this._inherited ? this.renderInheritedProperty() : this.renderEditableProperty();\r\n\t}\r\n\r\n\trenderInheritedProperty() {\r\n\t\tif (!this.property) return;\r\n\r\n\t\tif (this.sortModeActive) {\r\n\t\t\treturn this.renderSortableProperty();\r\n\t\t} else {\r\n\t\t\treturn html`\r\n\t\t\t\t<div id=\"header\">\r\n\t\t\t\t\t<b>${this.property.name}</b>\r\n\t\t\t\t\t<i>${this.property.alias}</i>\r\n\t\t\t\t\t<p>${this.property.description}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id=\"editor\">\r\n\t\t\t\t\t${this.renderPropertyTags()}\r\n\t\t\t\t\t${this._inherited\r\n\t\t\t\t\t\t? html`<uui-tag look=\"default\" class=\"inherited\">\r\n\t\t\t\t\t\t\t\t<uui-icon name=\"icon-merge\"></uui-icon>\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t>${this.localize.term('contentTypeEditor_inheritedFrom')}\r\n\t\t\t\t\t\t\t\t\t<a href=${this.editContentTypePath + 'edit/' + this._inheritedContentTypeId}>\r\n\t\t\t\t\t\t\t\t\t\t${this._inheritedContentTypeName ?? '??'}\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</uui-tag>`\r\n\t\t\t\t\t\t: nothing}\r\n\t\t\t\t</div>\r\n\t\t\t`;\r\n\t\t}\r\n\t}\r\n\r\n\trenderEditableProperty() {\r\n\t\tif (!this.property || !this.editPropertyTypePath) return;\r\n\r\n\t\tif (this.sortModeActive) {\r\n\t\t\treturn this.renderSortableProperty();\r\n\t\t} else {\r\n\t\t\treturn html`\r\n\t\t\t\t<div id=\"header\">\r\n\t\t\t\t\t<uui-input\r\n\t\t\t\t\t\tname=\"label\"\r\n\t\t\t\t\t\tid=\"label-input\"\r\n\t\t\t\t\t\tplaceholder=${this.localize.term('placeholders_label')}\r\n\t\t\t\t\t\tlabel=\"label\"\r\n\t\t\t\t\t\t.value=${this.property.name}\r\n\t\t\t\t\t\t@input=${this.#onNameChanged}></uui-input>\r\n\t\t\t\t\t${this.renderPropertyAlias()}\r\n\t\t\t\t\t<slot name=\"action-menu\"></slot>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<uui-textarea\r\n\t\t\t\t\t\t\tlabel=\"description\"\r\n\t\t\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\t\t\tid=\"description-input\"\r\n\t\t\t\t\t\t\tplaceholder=${this.localize.term('placeholders_enterDescription')}\r\n\t\t\t\t\t\t\t.value=${this.property.description}\r\n\t\t\t\t\t\t\t@input=${(e: CustomEvent) => {\r\n\t\t\t\t\t\t\t\tif (e.target) this.#singleValueUpdate('description', (e.target as HTMLInputElement).value);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tauto-height></uui-textarea>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<uui-button\r\n\t\t\t\t\tid=\"editor\"\r\n\t\t\t\t\tlook=\"secondary\"\r\n\t\t\t\t\tlabel=${this.localize.term('contentTypeEditor_editorSettings')}\r\n\t\t\t\t\thref=${this.editPropertyTypePath +\r\n\t\t\t\t\tUMB_EDIT_PROPERTY_TYPE_WORKSPACE_PATH_PATTERN.generateLocal({ unique: this.property.id })}>\r\n\t\t\t\t\t${this.renderPropertyTags()}\r\n\t\t\t\t\t<uui-action-bar>\r\n\t\t\t\t\t\t<uui-button label=\"${this.localize.term('actions_delete')}\" @click=\"${this.#requestRemove}\">\r\n\t\t\t\t\t\t\t<uui-icon name=\"delete\"></uui-icon>\r\n\t\t\t\t\t\t</uui-button>\r\n\t\t\t\t\t</uui-action-bar>\r\n\t\t\t\t</uui-button>\r\n\t\t\t`;\r\n\t\t}\r\n\t}\r\n\r\n\trenderSortableProperty() {\r\n\t\tif (!this.property) return;\r\n\t\treturn html`\r\n\t\t\t<div class=\"sortable\">\r\n\t\t\t\t<uui-icon name=\"icon-navigation\"></uui-icon>\r\n\t\t\t\t<span>${this.property.name}</span>\r\n\t\t\t\t<span style=\"color: var(--uui-color-disabled-contrast)\">(${this.property.alias})</span>\r\n\t\t\t</div>\r\n\t\t\t<uui-input\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\t?disabled=${this._inherited}\r\n\t\t\t\tlabel=\"sort order\"\r\n\t\t\t\t@change=${(e: UUIInputEvent) =>\r\n\t\t\t\t\tthis.#partialUpdate({ sortOrder: parseInt(e.target.value as string) ?? 0 } as UmbPropertyTypeModel)}\r\n\t\t\t\t.value=${this.property.sortOrder ?? 0}></uui-input>\r\n\t\t`;\r\n\t}\r\n\r\n\trenderPropertyAlias() {\r\n\t\tif (!this.property) return;\r\n\t\treturn html`\r\n\t\t\t<uui-input-lock\r\n\t\t\t\tname=\"alias\"\r\n\t\t\t\tid=\"alias-input\"\r\n\t\t\t\tlabel=${this.localize.term('placeholders_enterAlias')}\r\n\t\t\t\tplaceholder=${this.localize.term('placeholders_enterAlias')}\r\n\t\t\t\t.value=${this.property.alias}\r\n\t\t\t\t?locked=${this._aliasLocked}\r\n\t\t\t\t@input=${this.#onAliasChanged}\r\n\t\t\t\t@lock-change=${this.#onToggleAliasLock}>\r\n\t\t\t</uui-input-lock>\r\n\t\t`;\r\n\t}\r\n\r\n\trenderPropertyTags() {\r\n\t\treturn this.property\r\n\t\t\t? html`<div class=\"types\">\r\n\t\t\t\t\t${this.property.dataType?.unique ? html`<uui-tag look=\"default\">${this._dataTypeName}</uui-tag>` : nothing}\r\n\t\t\t\t\t${this.property.variesByCulture\r\n\t\t\t\t\t\t? html`<uui-tag look=\"default\">\r\n\t\t\t\t\t\t\t\t<uui-icon name=\"icon-shuffle\"></uui-icon> ${this.localize.term('contentTypeEditor_cultureVariantLabel')}\r\n\t\t\t\t\t\t\t</uui-tag>`\r\n\t\t\t\t\t\t: nothing}\r\n\t\t\t\t\t${this.property.appearance?.labelOnTop == true\r\n\t\t\t\t\t\t? html`<uui-tag look=\"default\">\r\n\t\t\t\t\t\t\t\t<span>${this.localize.term('contentTypeEditor_displaySettingsLabelOnTop')}</span>\r\n\t\t\t\t\t\t\t</uui-tag>`\r\n\t\t\t\t\t\t: nothing}\r\n\t\t\t\t\t${this.property.validation.mandatory === true\r\n\t\t\t\t\t\t? html`<uui-tag look=\"default\">\r\n\t\t\t\t\t\t\t\t<span>* ${this.localize.term('general_mandatory')}</span>\r\n\t\t\t\t\t\t\t</uui-tag>`\r\n\t\t\t\t\t\t: nothing}\r\n\t\t\t\t\t${this.property.visibility?.memberCanView === true\r\n\t\t\t\t\t\t? html`<uui-tag look=\"default\">\r\n\t\t\t\t\t\t\t\t<uui-icon name=\"icon-eye\"></uui-icon> ${this.localize.term('contentTypeEditor_showOnMemberProfile')}\r\n\t\t\t\t\t\t\t</uui-tag>`\r\n\t\t\t\t\t\t: nothing}\r\n\t\t\t\t\t${this.property.visibility?.memberCanEdit === true\r\n\t\t\t\t\t\t? html`<uui-tag look=\"default\">\r\n\t\t\t\t\t\t\t\t<uui-icon name=\"icon-edit\"></uui-icon> ${this.localize.term('contentTypeEditor_memberCanEdit')}\r\n\t\t\t\t\t\t\t</uui-tag>`\r\n\t\t\t\t\t\t: nothing}\r\n\t\t\t\t\t${this.property.isSensitive === true\r\n\t\t\t\t\t\t? html`<uui-tag look=\"default\">\r\n\t\t\t\t\t\t\t\t<uui-icon name=\"icon-lock\"></uui-icon> ${this.localize.term('contentTypeEditor_isSensitiveData')}\r\n\t\t\t\t\t\t\t</uui-tag>`\r\n\t\t\t\t\t\t: nothing}\r\n\t\t\t\t</div>`\r\n\t\t\t: nothing;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t:host(:not([sort-mode-active])) {\r\n\t\t\t\tdisplay: grid;\r\n\t\t\t\tgrid-template-columns: 200px auto;\r\n\t\t\t\tcolumn-gap: var(--uui-size-layout-2);\r\n\t\t\t\tborder-bottom: 1px solid var(--uui-color-divider);\r\n\t\t\t\tpadding: var(--uui-size-layout-1) 0;\r\n\t\t\t\tcontainer-type: inline-size;\r\n\t\t\t}\r\n\r\n\t\t\t:host > div {\r\n\t\t\t\tgrid-column: span 2;\r\n\t\t\t}\r\n\r\n\t\t\t@container (width > 600px) {\r\n\t\t\t\t:host(:not([orientation='vertical'])) > div {\r\n\t\t\t\t\tgrid-column: span 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t:host(:first-of-type) {\r\n\t\t\t\tpadding-top: 0;\r\n\t\t\t}\r\n\t\t\t:host(:last-of-type) {\r\n\t\t\t\tborder-bottom: none;\r\n\t\t\t}\r\n\r\n\t\t\t:host([sort-mode-active]) {\r\n\t\t\t\tposition: relative;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tpadding: 0;\r\n\t\t\t\tmargin-bottom: var(--uui-size-3);\r\n\t\t\t}\r\n\r\n\t\t\t:host([sort-mode-active]:last-of-type) {\r\n\t\t\t\tmargin-bottom: 0;\r\n\t\t\t}\r\n\r\n\t\t\t:host([sort-mode-active]:not([_inherited])) {\r\n\t\t\t\tcursor: grab;\r\n\t\t\t}\r\n\r\n\t\t\t:host([sort-mode-active]) .sortable {\r\n\t\t\t\tflex: 1;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tpadding: 0 var(--uui-size-3);\r\n\t\t\t\tgap: var(--uui-size-3);\r\n\t\t\t}\r\n\t\t\t:host([sort-mode-active][_inherited]) .sortable {\r\n\t\t\t\tcolor: var(--uui-color-disabled-contrast);\r\n\t\t\t}\r\n\t\t\t:host([sort-mode-active]:not([_inherited])) .sortable {\r\n\t\t\t\tbackground-color: var(--uui-color-divider);\r\n\t\t\t}\r\n\r\n\t\t\t:host([sort-mode-active]) uui-input {\r\n\t\t\t\tmax-width: 75px;\r\n\t\t\t}\r\n\r\n\t\t\t/* Placeholder style, used when property is being dragged.*/\r\n\t\t\t:host(.--umb-sorter-placeholder) > * {\r\n\t\t\t\tvisibility: hidden;\r\n\t\t\t}\r\n\r\n\t\t\t:host(.--umb-sorter-placeholder)::after {\r\n\t\t\t\tcontent: '';\r\n\t\t\t\tinset: 0;\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\tborder: 1px dashed var(--uui-color-divider-emphasis);\r\n\t\t\t\tborder-radius: var(--uui-border-radius);\r\n\t\t\t}\r\n\r\n\t\t\tp {\r\n\t\t\t\tmargin-bottom: 0;\r\n\t\t\t}\r\n\r\n\t\t\t#header {\r\n\t\t\t\tposition: sticky;\r\n\t\t\t\ttop: var(--uui-size-space-4);\r\n\t\t\t\theight: min-content;\r\n\t\t\t}\r\n\r\n\t\t\t#editor {\r\n\t\t\t\tposition: relative;\r\n\t\t\t}\r\n\t\t\t#alias-input,\r\n\t\t\t#label-input,\r\n\t\t\t#description-input {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t}\r\n\r\n\t\t\t#alias-input {\r\n\t\t\t\tborder-color: transparent;\r\n\t\t\t\tbackground: var(--uui-color-surface);\r\n\t\t\t}\r\n\r\n\t\t\t#label-input {\r\n\t\t\t\tfont-weight: bold; /* TODO: UUI Input does not support bold text yet */\r\n\t\t\t\t--uui-input-border-color: transparent;\r\n\t\t\t}\r\n\t\t\t#label-input input {\r\n\t\t\t\tfont-weight: bold;\r\n\t\t\t\t--uui-input-border-color: transparent;\r\n\t\t\t}\r\n\r\n\t\t\t#description-input {\r\n\t\t\t\t--uui-textarea-border-color: transparent;\r\n\t\t\t\tfont-weight: 0.5rem; /* TODO: Cant change font size of UUI textarea yet */\r\n\t\t\t}\r\n\r\n\t\t\t.types > div uui-icon,\r\n\t\t\t.inherited uui-icon {\r\n\t\t\t\tvertical-align: sub;\r\n\t\t\t\tmargin-right: var(--uui-size-space-1);\r\n\t\t\t}\r\n\r\n\t\t\t.inherited {\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\ttop: var(--uui-size-space-2);\r\n\t\t\t\tright: var(--uui-size-space-2);\r\n\t\t\t}\r\n\r\n\t\t\t.types {\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\ttop: var(--uui-size-space-2);\r\n\t\t\t\tleft: var(--uui-size-space-2);\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-flow: wrap;\r\n\t\t\t\tgap: var(--uui-size-space-2);\r\n\t\t\t}\r\n\r\n\t\t\t#editor uui-action-bar {\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\ttop: var(--uui-size-space-2);\r\n\t\t\t\tright: var(--uui-size-space-2);\r\n\t\t\t\topacity: 0;\r\n\t\t\t}\r\n\r\n\t\t\t#editor:hover uui-action-bar,\r\n\t\t\t#editor:focus uui-action-bar,\r\n\t\t\t#editor:focus-within uui-action-bar {\r\n\t\t\t\topacity: 1;\r\n\t\t\t}\r\n\r\n\t\t\ta {\r\n\t\t\t\tcolor: inherit;\r\n\t\t\t}\r\n\r\n\t\t\t:host([drag-placeholder]) {\r\n\t\t\t\topacity: 0.5;\r\n\t\t\t}\r\n\t\t\t:host([drag-placeholder]) uui-input {\r\n\t\t\t\tvisibility: hidden;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-content-type-design-editor-property': UmbContentTypeDesignEditorPropertyElement;\r\n\t}\r\n}\r\n","import { UMB_CONTENT_TYPE_WORKSPACE_CONTEXT } from '../../content-type-workspace.context-token.js';\r\nimport type { UmbContentTypeModel, UmbPropertyTypeModel } from '../../../types.js';\r\nimport { UmbContentTypePropertyStructureHelper } from '../../../structure/index.js';\r\nimport type { UmbContentTypeDesignEditorPropertyElement } from './content-type-design-editor-property.element.js';\r\nimport { UMB_CONTENT_TYPE_DESIGN_EDITOR_CONTEXT } from './content-type-design-editor.context-token.js';\r\nimport {\r\n\tcss,\r\n\tcustomElement,\r\n\thtml,\r\n\tifDefined,\r\n\tproperty,\r\n\trepeat,\r\n\tstate,\r\n\twhen,\r\n} from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport { type UmbSorterConfig, UmbSorterController } from '@umbraco-cms/backoffice/sorter';\r\nimport { UmbModalRouteRegistrationController } from '@umbraco-cms/backoffice/router';\r\nimport {\r\n\tUMB_CREATE_PROPERTY_TYPE_WORKSPACE_PATH_PATTERN,\r\n\tUMB_PROPERTY_TYPE_WORKSPACE_MODAL,\r\n} from '@umbraco-cms/backoffice/property-type';\r\n\r\nimport './content-type-design-editor-property.element.js';\r\n\r\nconst SORTER_CONFIG: UmbSorterConfig<UmbPropertyTypeModel, UmbContentTypeDesignEditorPropertyElement> = {\r\n\tgetUniqueOfElement: (element) => {\r\n\t\treturn element.getAttribute('data-umb-property-id');\r\n\t},\r\n\tgetUniqueOfModel: (modelEntry) => {\r\n\t\treturn modelEntry.id;\r\n\t},\r\n\tidentifier: 'content-type-property-sorter',\r\n\titemSelector: 'umb-content-type-design-editor-property',\r\n\t//disabledItemSelector: '[inherited]',\r\n\t//TODO: Set the property list (sorter wrapper) to inherited, if its inherited\r\n\t// This is because we don't want to move local properties into an inherited group container.\r\n\t// Or maybe we do, but we still need to check if the group exists locally, if not, then it needs to be created before we move a property into it.\r\n\t// TODO: Fix bug where a local property turn into an inherited when moved to a new group container.\r\n\tcontainerSelector: '#property-list',\r\n};\r\n\r\n@customElement('umb-content-type-design-editor-properties')\r\nexport class UmbContentTypeDesignEditorPropertiesElement extends UmbLitElement {\r\n\t#sorter = new UmbSorterController<UmbPropertyTypeModel, UmbContentTypeDesignEditorPropertyElement>(this, {\r\n\t\t...SORTER_CONFIG,\r\n\t\tonChange: ({ model }) => {\r\n\t\t\tthis._properties = model;\r\n\t\t},\r\n\t\tonContainerChange: ({ item }) => {\r\n\t\t\tif (this._containerId === undefined) {\r\n\t\t\t\tthrow new Error('ContainerId is not set');\r\n\t\t\t}\r\n\t\t\tthis.#propertyStructureHelper.partialUpdateProperty(item.id, {\r\n\t\t\t\tcontainer: this._containerId ? { id: this._containerId } : null,\r\n\t\t\t});\r\n\t\t},\r\n\t\tonEnd: ({ item }) => {\r\n\t\t\tif (this._containerId === undefined) {\r\n\t\t\t\tthrow new Error('ContainerId is not set.');\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * Explanation: If the item is the first in list, we compare it to the item behind it to set a sortOrder.\r\n\t\t\t * If it's not the first in list, we will compare to the item in before it, and check the following item to see if it caused overlapping sortOrder, then update\r\n\t\t\t * the overlap if true, which may cause another overlap, so we loop through them till no more overlaps...\r\n\t\t\t */\r\n\t\t\tconst model = this._properties;\r\n\t\t\tconst newIndex = model.findIndex((entry) => entry.id === item.id);\r\n\r\n\t\t\t// Doesn't exist in model\r\n\t\t\tif (newIndex === -1) return;\r\n\r\n\t\t\t// As origin we set prev sort order to -1, so if no other then our item will become 0\r\n\t\t\tlet prevSortOrder = -1;\r\n\r\n\t\t\t// Not first in list\r\n\t\t\tif (newIndex > 0 && model.length > 0) {\r\n\t\t\t\tprevSortOrder = model[newIndex - 1].sortOrder;\r\n\t\t\t}\r\n\r\n\t\t\t// increase the prevSortOrder and use it for the moved item,\r\n\t\t\tthis.#propertyStructureHelper.partialUpdateProperty(item.id, {\r\n\t\t\t\tsortOrder: ++prevSortOrder,\r\n\t\t\t});\r\n\r\n\t\t\t// Adjust everyone right after, meaning until there is a gap between the sortOrders:\r\n\t\t\tlet i = newIndex + 1;\r\n\t\t\tlet entry: UmbPropertyTypeModel | undefined;\r\n\t\t\t// As long as there is an item with the index & the sortOrder is less or equal to the prevSortOrder, we will update the sortOrder:\r\n\t\t\twhile ((entry = model[i]) !== undefined && entry.sortOrder <= prevSortOrder) {\r\n\t\t\t\t// Increase the prevSortOrder and use it for the item:\r\n\t\t\t\tthis.#propertyStructureHelper.partialUpdateProperty(entry.id, {\r\n\t\t\t\t\tsortOrder: ++prevSortOrder,\r\n\t\t\t\t});\r\n\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t},\r\n\t});\r\n\r\n\tprivate _containerId: string | null | undefined;\r\n\r\n\t@property({ type: String, attribute: 'container-id', reflect: false })\r\n\tpublic get containerId(): string | null | undefined {\r\n\t\treturn this._containerId;\r\n\t}\r\n\tpublic set containerId(value: string | null | undefined) {\r\n\t\tif (value === this._containerId) return;\r\n\t\tthis._containerId = value;\r\n\t\tthis.createPropertyTypeWorkspaceRoutes();\r\n\t\tthis.#propertyStructureHelper.setContainerId(value);\r\n\t\tthis.#addPropertyModal?.setUniquePathValue('container-id', value === null ? 'root' : value);\r\n\t\tthis.#editPropertyModal?.setUniquePathValue('container-id', value === null ? 'root' : value);\r\n\t}\r\n\r\n\t#addPropertyModal?: UmbModalRouteRegistrationController<\r\n\t\ttypeof UMB_PROPERTY_TYPE_WORKSPACE_MODAL.DATA,\r\n\t\ttypeof UMB_PROPERTY_TYPE_WORKSPACE_MODAL.VALUE\r\n\t>;\r\n\t#editPropertyModal?: UmbModalRouteRegistrationController<\r\n\t\ttypeof UMB_PROPERTY_TYPE_WORKSPACE_MODAL.DATA,\r\n\t\ttypeof UMB_PROPERTY_TYPE_WORKSPACE_MODAL.VALUE\r\n\t>;\r\n\r\n\t#propertyStructureHelper = new UmbContentTypePropertyStructureHelper<UmbContentTypeModel>(this);\r\n\r\n\t@property({ attribute: false })\r\n\teditContentTypePath?: string;\r\n\r\n\t@state()\r\n\tprivate _properties: Array<UmbPropertyTypeModel> = [];\r\n\r\n\t@state()\r\n\tprivate _ownerContentTypeUnique?: string;\r\n\r\n\t@state()\r\n\tprivate _newPropertyPath?: string;\r\n\r\n\t@state()\r\n\tprivate _editPropertyTypePath?: string;\r\n\r\n\t@state()\r\n\tprivate _sortModeActive?: boolean;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.#sorter.disable();\r\n\r\n\t\tthis.consumeContext(UMB_CONTENT_TYPE_DESIGN_EDITOR_CONTEXT, (context) => {\r\n\t\t\tthis.observe(\r\n\t\t\t\tcontext.isSorting,\r\n\t\t\t\t(isSorting) => {\r\n\t\t\t\t\tthis._sortModeActive = isSorting;\r\n\t\t\t\t\tif (isSorting) {\r\n\t\t\t\t\t\tthis.#sorter.enable();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.#sorter.disable();\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t'_observeIsSorting',\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\tthis.consumeContext(UMB_CONTENT_TYPE_WORKSPACE_CONTEXT, async (workspaceContext) => {\r\n\t\t\tthis.#propertyStructureHelper.setStructureManager(workspaceContext.structure);\r\n\r\n\t\t\tthis._ownerContentTypeUnique = workspaceContext.structure.getOwnerContentTypeUnique();\r\n\t\t\tthis.createPropertyTypeWorkspaceRoutes();\r\n\t\t});\r\n\t\tthis.observe(this.#propertyStructureHelper.propertyStructure, (propertyStructure) => {\r\n\t\t\tthis._properties = propertyStructure;\r\n\t\t\tthis.#sorter.setModel(this._properties);\r\n\t\t});\r\n\t}\r\n\r\n\tcreatePropertyTypeWorkspaceRoutes() {\r\n\t\tif (!this._ownerContentTypeUnique || this._containerId === undefined) return;\r\n\r\n\t\t// Note: Route for adding a new property\r\n\t\tthis.#addPropertyModal?.destroy();\r\n\t\tthis.#addPropertyModal = new UmbModalRouteRegistrationController(\r\n\t\t\tthis,\r\n\t\t\tUMB_PROPERTY_TYPE_WORKSPACE_MODAL,\r\n\t\t\t'addPropertyModal',\r\n\t\t)\r\n\t\t\t.addUniquePaths(['container-id'])\r\n\t\t\t.addAdditionalPath('add-property/:sortOrder')\r\n\t\t\t.onSetup(async (params) => {\r\n\t\t\t\t// TODO: Make a onInit promise, that can be awaited here.\r\n\t\t\t\tif (!this._ownerContentTypeUnique || this._containerId === undefined) return false;\r\n\r\n\t\t\t\tconst preset: Partial<UmbPropertyTypeModel> = {};\r\n\t\t\t\tif (params.sortOrder !== undefined) {\r\n\t\t\t\t\tlet sortOrderInt = parseInt(params.sortOrder);\r\n\t\t\t\t\tif (sortOrderInt === -1) {\r\n\t\t\t\t\t\t// Find the highest sortOrder and add 1 to it:\r\n\t\t\t\t\t\tsortOrderInt = Math.max(...this._properties.map((x) => x.sortOrder), -1) + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpreset.sortOrder = sortOrderInt;\r\n\t\t\t\t}\r\n\t\t\t\treturn { data: { contentTypeUnique: this._ownerContentTypeUnique, preset: preset } };\r\n\t\t\t})\r\n\t\t\t.observeRouteBuilder((routeBuilder) => {\r\n\t\t\t\tthis._newPropertyPath =\r\n\t\t\t\t\trouteBuilder({ sortOrder: '-1' }) +\r\n\t\t\t\t\tUMB_CREATE_PROPERTY_TYPE_WORKSPACE_PATH_PATTERN.generateLocal({\r\n\t\t\t\t\t\tcontainerUnique: this._containerId!,\r\n\t\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\tif (this._containerId !== undefined) {\r\n\t\t\tthis.#addPropertyModal?.setUniquePathValue(\r\n\t\t\t\t'container-id',\r\n\t\t\t\tthis._containerId === null ? 'root' : this._containerId,\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tthis.#editPropertyModal?.destroy();\r\n\t\tthis.#editPropertyModal = new UmbModalRouteRegistrationController(\r\n\t\t\tthis,\r\n\t\t\tUMB_PROPERTY_TYPE_WORKSPACE_MODAL,\r\n\t\t\t'editPropertyModal',\r\n\t\t)\r\n\t\t\t.addUniquePaths(['container-id'])\r\n\t\t\t.addAdditionalPath('edit-property')\r\n\t\t\t.onSetup(async () => {\r\n\t\t\t\tif (!this._ownerContentTypeUnique || this._containerId === undefined) return false;\r\n\t\t\t\treturn { data: { contentTypeUnique: this._ownerContentTypeUnique, preset: undefined } };\r\n\t\t\t})\r\n\t\t\t.observeRouteBuilder((routeBuilder) => {\r\n\t\t\t\tthis._editPropertyTypePath = routeBuilder(null);\r\n\t\t\t});\r\n\t\tif (this._containerId !== undefined) {\r\n\t\t\tthis.#editPropertyModal?.setUniquePathValue(\r\n\t\t\t\t'container-id',\r\n\t\t\t\tthis._containerId === null ? 'root' : this._containerId,\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn this._ownerContentTypeUnique\r\n\t\t\t? html`\r\n\t\t\t\t\t<div id=\"property-list\" ?sort-mode-active=${this._sortModeActive}>\r\n\t\t\t\t\t\t${repeat(\r\n\t\t\t\t\t\t\tthis._properties,\r\n\t\t\t\t\t\t\t(property) => property.id,\r\n\t\t\t\t\t\t\t(property) => {\r\n\t\t\t\t\t\t\t\treturn html`\r\n\t\t\t\t\t\t\t\t\t<umb-content-type-design-editor-property\r\n\t\t\t\t\t\t\t\t\t\tdata-umb-property-id=${property.id}\r\n\t\t\t\t\t\t\t\t\t\t.editContentTypePath=${this.editContentTypePath}\r\n\t\t\t\t\t\t\t\t\t\t.editPropertyTypePath=${this._editPropertyTypePath}\r\n\t\t\t\t\t\t\t\t\t\t?sort-mode-active=${this._sortModeActive}\r\n\t\t\t\t\t\t\t\t\t\t.propertyStructureHelper=${this.#propertyStructureHelper}\r\n\t\t\t\t\t\t\t\t\t\t.property=${property}>\r\n\t\t\t\t\t\t\t\t\t</umb-content-type-design-editor-property>\r\n\t\t\t\t\t\t\t\t`;\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t${when(\r\n\t\t\t\t\t\t!this._sortModeActive,\r\n\t\t\t\t\t\t() => html`\r\n\t\t\t\t\t\t\t<uui-button\r\n\t\t\t\t\t\t\t\tid=\"btn-add\"\r\n\t\t\t\t\t\t\t\thref=${ifDefined(this._newPropertyPath)}\r\n\t\t\t\t\t\t\t\tlabel=${this.localize.term('contentTypeEditor_addProperty')}\r\n\t\t\t\t\t\t\t\tlook=\"placeholder\"></uui-button>\r\n\t\t\t\t\t\t`,\r\n\t\t\t\t\t)}\r\n\t\t\t\t`\r\n\t\t\t: '';\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t#btn-add {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\t--uui-button-height: var(--uui-size-14);\r\n\t\t\t}\r\n\r\n\t\t\t#property-list[sort-mode-active]:not(:has(umb-content-type-design-editor-property)) {\r\n\t\t\t\t/* Some height so that the sorter can target the area if the group is empty*/\r\n\t\t\t\tmin-height: var(--uui-size-layout-1);\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbContentTypeDesignEditorPropertiesElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-content-type-design-editor-properties': UmbContentTypeDesignEditorPropertiesElement;\r\n\t}\r\n}\r\n","import type { UmbContentTypeModel, UmbPropertyTypeContainerModel } from '../../../types.js';\r\nimport type { UmbContentTypeContainerStructureHelper } from '../../../structure/index.js';\r\nimport { css, customElement, html, nothing, property, repeat, state, when } from '@umbraco-cms/backoffice/external/lit';\r\nimport { umbConfirmModal } from '@umbraco-cms/backoffice/modal';\r\nimport { UmbLitElement, umbFocus } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport { UUIBlinkAnimationValue, UUIBlinkKeyframes, type UUIInputEvent } from '@umbraco-cms/backoffice/external/uui';\r\n\r\nimport './content-type-design-editor-properties.element.js';\r\n\r\n@customElement('umb-content-type-design-editor-group')\r\nexport class UmbContentTypeWorkspaceViewEditGroupElement extends UmbLitElement {\r\n\t@property({ attribute: false })\r\n\tpublic set group(value: UmbPropertyTypeContainerModel | undefined) {\r\n\t\tif (value === this._group) return;\r\n\t\tthis._group = value;\r\n\t\tthis._groupId = value?.id;\r\n\t\tthis.#checkInherited();\r\n\t}\r\n\tpublic get group(): UmbPropertyTypeContainerModel | undefined {\r\n\t\treturn this._group;\r\n\t}\r\n\tprivate _group?: UmbPropertyTypeContainerModel | undefined;\r\n\r\n\t@property({ attribute: false })\r\n\tpublic set groupStructureHelper(value: UmbContentTypeContainerStructureHelper<UmbContentTypeModel> | undefined) {\r\n\t\tif (value === this._groupStructureHelper) return;\r\n\t\tthis._groupStructureHelper = value;\r\n\t\tthis.#checkInherited();\r\n\t}\r\n\tpublic get groupStructureHelper(): UmbContentTypeContainerStructureHelper<UmbContentTypeModel> | undefined {\r\n\t\treturn this._groupStructureHelper;\r\n\t}\r\n\tprivate _groupStructureHelper?: UmbContentTypeContainerStructureHelper<UmbContentTypeModel> | undefined;\r\n\r\n\t@property({ type: Boolean, attribute: 'sort-mode-active', reflect: true })\r\n\tsortModeActive = false;\r\n\r\n\t@property({ attribute: false })\r\n\teditContentTypePath?: string;\r\n\r\n\t@state()\r\n\t_groupId?: string;\r\n\r\n\t@state()\r\n\t_hasOwnerContainer?: boolean;\r\n\r\n\t@state()\r\n\t_inherited?: boolean;\r\n\r\n\t@state()\r\n\t_inheritedFrom?: Array<UmbContentTypeModel>;\r\n\r\n\t#checkInherited() {\r\n\t\tif (this.groupStructureHelper && this.group) {\r\n\t\t\t// Check is this container matches with any other group. If so it is inherited aka. merged with others. [NL]\r\n\t\t\tif (this.group.name) {\r\n\t\t\t\t// We can first match with something if we have a name [NL]\r\n\t\t\t\tthis.observe(\r\n\t\t\t\t\tthis.groupStructureHelper.containersByNameAndType(this.group.name, 'Group'),\r\n\t\t\t\t\t(containers) => {\r\n\t\t\t\t\t\tconst ownerContainer = containers.find((con) => this.groupStructureHelper!.isOwnerChildContainer(con.id));\r\n\t\t\t\t\t\tconst hasAOwnerContainer = !!ownerContainer;\r\n\t\t\t\t\t\tconst pureOwnerContainer = hasAOwnerContainer && containers.length === 1;\r\n\r\n\t\t\t\t\t\t// TODO: Check if requestUpdate is needed here, I do not think it is when i added it, but I just wanted to be safe when debugging [NL]\r\n\t\t\t\t\t\tconst oldHasOwnerContainer = this._hasOwnerContainer;\r\n\t\t\t\t\t\tconst oldInherited = this._inherited;\r\n\t\t\t\t\t\tconst oldInheritedFrom = this._inheritedFrom;\r\n\t\t\t\t\t\tthis._hasOwnerContainer = hasAOwnerContainer;\r\n\t\t\t\t\t\tthis._inherited = !pureOwnerContainer;\r\n\t\t\t\t\t\tthis._inheritedFrom = containers\r\n\t\t\t\t\t\t\t.filter((con) => con.id !== ownerContainer?.id)\r\n\t\t\t\t\t\t\t.map((con) => this.groupStructureHelper!.getContentTypeOfContainer(con.id))\r\n\t\t\t\t\t\t\t.filter((contentType) => contentType !== undefined) as Array<UmbContentTypeModel>;\r\n\t\t\t\t\t\tthis.requestUpdate('_hasOwnerContainer', oldHasOwnerContainer);\r\n\t\t\t\t\t\tthis.requestUpdate('_inherited', oldInherited);\r\n\t\t\t\t\t\tthis.requestUpdate('_inheritedFrom', oldInheritedFrom);\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'observeGroupContainers',\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\t// We use name match to determine inheritance, so no name cannot inherit.\r\n\t\t\t\tthis._inherited = false;\r\n\t\t\t\tthis._hasOwnerContainer = true;\r\n\t\t\t\tthis.removeUmbControllerByAlias('observeGroupContainers');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t_singleValueUpdate(propertyName: string, value: string | number | boolean | null | undefined) {\r\n\t\tif (!this._groupStructureHelper || !this.group) return;\r\n\r\n\t\tconst partialObject = {} as any;\r\n\t\tpartialObject[propertyName] = value;\r\n\r\n\t\tthis._groupStructureHelper.partialUpdateContainer(this.group.id, partialObject);\r\n\t}\r\n\r\n\t#renameGroup(e: InputEvent) {\r\n\t\tif (!this.groupStructureHelper || !this._group) return;\r\n\t\tlet newName = (e.target as HTMLInputElement).value;\r\n\t\tconst changedName = this.groupStructureHelper\r\n\t\t\t.getStructureManager()!\r\n\t\t\t.makeContainerNameUniqueForOwnerContentType(this._group.id, newName, 'Group', this._group.parent?.id ?? null);\r\n\t\tif (changedName) {\r\n\t\t\tnewName = changedName;\r\n\t\t}\r\n\t\tthis._singleValueUpdate('name', newName);\r\n\t\t(e.target as HTMLInputElement).value = newName;\r\n\t}\r\n\r\n\t#blurGroup(e: InputEvent) {\r\n\t\tif (!this.groupStructureHelper || !this._group) return;\r\n\t\tconst newName = (e.target as HTMLInputElement).value;\r\n\t\tif (newName === '') {\r\n\t\t\tconst changedName = this.groupStructureHelper\r\n\t\t\t\t.getStructureManager()!\r\n\t\t\t\t.makeEmptyContainerName(this._group.id, 'Group', this._group.parent?.id ?? null);\r\n\t\t\tthis._singleValueUpdate('name', changedName);\r\n\t\t\t(e.target as HTMLInputElement).value = changedName;\r\n\t\t}\r\n\t}\r\n\r\n\tasync #requestRemove(e: Event) {\r\n\t\te.preventDefault();\r\n\t\te.stopImmediatePropagation();\r\n\t\tif (!this.groupStructureHelper || !this._group) return;\r\n\r\n\t\t// TODO: Do proper localization here: [NL]\r\n\t\tawait umbConfirmModal(this, {\r\n\t\t\theadline: `${this.localize.term('actions_delete')} group`,\r\n\t\t\tcontent: html`<umb-localize key=\"contentTypeEditor_confirmDeleteGroupMessage\" .args=${[\r\n\t\t\t\tthis._group.name ?? this._group.id,\r\n\t\t\t]}>\r\n\t\t\t\t\tAre you sure you want to delete the group <strong>${this._group.name ?? this._group.id}</strong>\r\n\t\t\t\t</umb-localize>\r\n\t\t\t\t</div>`,\r\n\t\t\tconfirmLabel: this.localize.term('actions_delete'),\r\n\t\t\tcolor: 'danger',\r\n\t\t});\r\n\r\n\t\tthis.groupStructureHelper.removeContainer(this._group.id);\r\n\t}\r\n\r\n\toverride render() {\r\n\t\tif (this._inherited === undefined || !this._groupId) return nothing;\r\n\t\treturn html`\r\n\t\t\t<uui-box>\r\n\t\t\t\t${this.#renderContainerHeader()}\r\n\t\t\t\t<umb-content-type-design-editor-properties\r\n\t\t\t\t\t.editContentTypePath=${this.editContentTypePath}\r\n\t\t\t\t\t.containerId=${this._groupId}></umb-content-type-design-editor-properties>\r\n\t\t\t</uui-box>\r\n\t\t`;\r\n\t}\r\n\r\n\t// TODO: impl UMB_EDIT_DOCUMENT_TYPE_PATH_PATTERN, but we need either a generic type or a way to get the path pattern.... [NL]\r\n\t#renderContainerHeader() {\r\n\t\treturn html`\r\n\t\t\t<div slot=\"header\" class=\"drag-handle\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t${when(\r\n\t\t\t\t\t\tthis.sortModeActive && this._hasOwnerContainer,\r\n\t\t\t\t\t\t() => html`<uui-icon name=\"icon-navigation\"></uui-icon>`,\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<uui-input\r\n\t\t\t\t\t\tid=\"group-name\"\r\n\t\t\t\t\t\tlabel=${this.localize.term('contentTypeEditor_group')}\r\n\t\t\t\t\t\tplaceholder=${this.localize.term('placeholders_entername')}\r\n\t\t\t\t\t\t.value=${this._group!.name}\r\n\t\t\t\t\t\t?disabled=${!this._hasOwnerContainer}\r\n\t\t\t\t\t\t@blur=${this.#blurGroup}\r\n\t\t\t\t\t\t@change=${this.#renameGroup}\r\n\t\t\t\t\t\t${this._group!.name === '' ? umbFocus() : nothing}\r\n\t\t\t\t\t\tauto-width></uui-input>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div slot=\"header-actions\">\r\n\t\t\t\t${when(\r\n\t\t\t\t\tthis._hasOwnerContainer === false && this._inheritedFrom,\r\n\t\t\t\t\t() => html`\r\n\t\t\t\t\t\t<uui-tag look=\"default\" class=\"inherited\">\r\n\t\t\t\t\t\t\t<uui-icon name=\"icon-merge\"></uui-icon>\r\n\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t>${this.localize.term('contentTypeEditor_inheritedFrom')}\r\n\t\t\t\t\t\t\t\t${repeat(\r\n\t\t\t\t\t\t\t\t\tthis._inheritedFrom!,\r\n\t\t\t\t\t\t\t\t\t(inherited) => inherited.unique,\r\n\t\t\t\t\t\t\t\t\t(inherited) => html`\r\n\t\t\t\t\t\t\t\t\t\t<a href=${this.editContentTypePath + 'edit/' + inherited.unique}>${inherited.name}</a>\r\n\t\t\t\t\t\t\t\t\t`,\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</uui-tag>\r\n\t\t\t\t\t`,\r\n\t\t\t\t)}\r\n\t\t\t\t${when(\r\n\t\t\t\t\t!this._inherited && !this.sortModeActive,\r\n\t\t\t\t\t() => html`\r\n\t\t\t\t\t\t<uui-button compact label=${this.localize.term('actions_delete')} @click=${this.#requestRemove}>\r\n\t\t\t\t\t\t\t<uui-icon name=\"delete\"></uui-icon>\r\n\t\t\t\t\t\t</uui-button>\r\n\t\t\t\t\t`,\r\n\t\t\t\t)}\r\n\t\t\t\t${when(\r\n\t\t\t\t\tthis.sortModeActive,\r\n\t\t\t\t\t() => html`\r\n\t\t\t\t\t\t<uui-input\r\n\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\tlabel=${this.localize.term('sort_sortOrder')}\r\n\t\t\t\t\t\t\t.value=${this.group!.sortOrder.toString()}\r\n\t\t\t\t\t\t\t?disabled=${!this._hasOwnerContainer}\r\n\t\t\t\t\t\t\t@change=${(e: UUIInputEvent) =>\r\n\t\t\t\t\t\t\t\tthis._singleValueUpdate('sortOrder', parseInt(e.target.value as string) ?? 0)}></uui-input>\r\n\t\t\t\t\t`,\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tUUIBlinkKeyframes,\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tposition: relative;\r\n\t\t\t}\r\n\r\n\t\t\t:host([drag-placeholder]) {\r\n\t\t\t\topacity: 0.5;\r\n\t\t\t}\r\n\r\n\t\t\t:host::before,\r\n\t\t\t:host::after {\r\n\t\t\t\tcontent: '';\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\tpointer-events: none;\r\n\t\t\t\tinset: 0;\r\n\t\t\t\tborder-radius: var(--uui-border-radius);\r\n\t\t\t\topacity: 0;\r\n\t\t\t\ttransition:\r\n\t\t\t\t\topacity 60ms linear 1ms,\r\n\t\t\t\t\tborder-color,\r\n\t\t\t\t\t10ms;\r\n\t\t\t}\r\n\r\n\t\t\t:host::after {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\tz-index: 1;\r\n\t\t\t\tborder: 2px solid transparent;\r\n\t\t\t}\r\n\r\n\t\t\t:host([drag-placeholder])::after {\r\n\t\t\t\topacity: 1;\r\n\t\t\t\tborder-color: var(--uui-color-interactive-emphasis);\r\n\t\t\t\tanimation: ${UUIBlinkAnimationValue};\r\n\t\t\t}\r\n\t\t\t:host([drag-placeholder])::before {\r\n\t\t\t\tbackground-color: var(--uui-color-interactive-emphasis);\r\n\t\t\t\topacity: 0.12;\r\n\t\t\t}\r\n\r\n\t\t\t:host([drag-placeholder]) uui-box {\r\n\t\t\t\t--uui-box-default-padding: 0;\r\n\t\t\t}\r\n\t\t\t:host([drag-placeholder]) div[slot='header'],\r\n\t\t\t:host([drag-placeholder]) div[slot='header-actions'] {\r\n\t\t\t\ttransition: opacity 60ms linear 1ms;\r\n\t\t\t\topacity: 0;\r\n\t\t\t}\r\n\t\t\t:host([drag-placeholder]) umb-content-type-design-editor-properties {\r\n\t\t\t\tvisibility: hidden;\r\n\t\t\t\tdisplay: none;\r\n\t\t\t}\r\n\r\n\t\t\tuui-box {\r\n\t\t\t\t--uui-box-header-padding: 0;\r\n\t\t\t}\r\n\r\n\t\t\tdiv[slot='header'] {\r\n\t\t\t\tflex: 1;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tjustify-content: space-between;\r\n\t\t\t\tcursor: grab;\r\n\t\t\t\tpadding: var(--uui-size-space-4) var(--uui-size-space-5);\r\n\t\t\t}\r\n\r\n\t\t\tdiv[slot='header'] > div {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tgap: var(--uui-size-3);\r\n\t\t\t\twidth: 100%;\r\n\t\t\t}\r\n\r\n\t\t\t#group-name {\r\n\t\t\t\t--uui-input-border-color: transparent;\r\n\t\t\t\tmin-width: 200px;\r\n\t\t\t}\r\n\r\n\t\t\tuui-input[type='number'] {\r\n\t\t\t\tmax-width: 75px;\r\n\t\t\t}\r\n\r\n\t\t\t.inherited uui-icon {\r\n\t\t\t\tvertical-align: sub;\r\n\t\t\t}\r\n\r\n\t\t\tdiv[slot='header-actions'] {\r\n\t\t\t\tpadding: var(--uui-size-space-4) var(--uui-size-space-5);\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbContentTypeWorkspaceViewEditGroupElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-content-type-design-editor-group': UmbContentTypeWorkspaceViewEditGroupElement;\r\n\t}\r\n}\r\n","import { UMB_CONTENT_TYPE_WORKSPACE_CONTEXT } from '../../content-type-workspace.context-token.js';\r\nimport type { UmbContentTypeModel, UmbPropertyTypeContainerModel } from '../../../types.js';\r\nimport { UmbContentTypeContainerStructureHelper } from '../../../structure/index.js';\r\nimport { UMB_CONTENT_TYPE_DESIGN_EDITOR_CONTEXT } from './content-type-design-editor.context-token.js';\r\nimport type { UmbContentTypeWorkspaceViewEditGroupElement } from './content-type-design-editor-group.element.js';\r\nimport { css, customElement, html, nothing, property, repeat, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UmbModalRouteRegistrationController } from '@umbraco-cms/backoffice/router';\r\nimport { UmbSorterController } from '@umbraco-cms/backoffice/sorter';\r\nimport { UMB_WORKSPACE_MODAL } from '@umbraco-cms/backoffice/workspace';\r\nimport type { UmbSorterConfig } from '@umbraco-cms/backoffice/sorter';\r\n\r\nimport './content-type-design-editor-properties.element.js';\r\nimport './content-type-design-editor-group.element.js';\r\n\r\nconst SORTER_CONFIG: UmbSorterConfig<UmbPropertyTypeContainerModel, UmbContentTypeWorkspaceViewEditGroupElement> = {\r\n\tgetUniqueOfElement: (element) => element.group?.id,\r\n\tgetUniqueOfModel: (modelEntry) => modelEntry.id,\r\n\t// TODO: Make specific to the current owner document. [NL]\r\n\tidentifier: 'content-type-container-sorter',\r\n\titemSelector: 'umb-content-type-design-editor-group',\r\n\thandleSelector: '.drag-handle',\r\n\tcontainerSelector: '.container-list',\r\n};\r\n\r\n@customElement('umb-content-type-design-editor-tab')\r\nexport class UmbContentTypeDesignEditorTabElement extends UmbLitElement {\r\n\t#sorter = new UmbSorterController<UmbPropertyTypeContainerModel, UmbContentTypeWorkspaceViewEditGroupElement>(this, {\r\n\t\t...SORTER_CONFIG,\r\n\t\tonChange: ({ model }) => {\r\n\t\t\tthis._groups = model;\r\n\t\t},\r\n\t\tonEnd: ({ item }) => {\r\n\t\t\t/*if (this._inherited === undefined) {\r\n\t\t\t\tthrow new Error('OwnerTabId is not set, we have not made a local duplicated of this container.');\r\n\t\t\t\treturn;\r\n\t\t\t}*/\r\n\t\t\t/**\r\n\t\t\t * Explanation: If the item is the first in list, we compare it to the item behind it to set a sortOrder.\r\n\t\t\t * If it's not the first in list, we will compare to the item in before it, and check the following item to see if it caused overlapping sortOrder, then update\r\n\t\t\t * the overlap if true, which may cause another overlap, so we loop through them till no more overlaps...\r\n\t\t\t */\r\n\t\t\tconst model = this._groups;\r\n\t\t\tconst newIndex = model.findIndex((entry) => entry.id === item.id);\r\n\r\n\t\t\t// Doesn't exist in model\r\n\t\t\tif (newIndex === -1) return;\r\n\r\n\t\t\t// As origin we set prev sort order to -1, so if no other then our item will become 0\r\n\t\t\tlet prevSortOrder = -1;\r\n\r\n\t\t\t// Not first in list\r\n\t\t\tif (newIndex > 0 && model.length > 0) {\r\n\t\t\t\tprevSortOrder = model[newIndex - 1].sortOrder;\r\n\t\t\t}\r\n\r\n\t\t\t// increase the prevSortOrder and use it for the moved item,\r\n\t\t\tthis.#groupStructureHelper.partialUpdateContainer(item.id, {\r\n\t\t\t\tsortOrder: ++prevSortOrder,\r\n\t\t\t});\r\n\r\n\t\t\t// Adjust everyone right after, meaning until there is a gap between the sortOrders:\r\n\t\t\tlet i = newIndex + 1;\r\n\t\t\tlet entry: UmbPropertyTypeContainerModel | undefined;\r\n\t\t\t// As long as there is an item with the index & the sortOrder is less or equal to the prevSortOrder, we will update the sortOrder:\r\n\t\t\twhile ((entry = model[i]) !== undefined && entry.sortOrder <= prevSortOrder) {\r\n\t\t\t\t// Increase the prevSortOrder and use it for the item:\r\n\t\t\t\tthis.#groupStructureHelper.partialUpdateContainer(entry.id, {\r\n\t\t\t\t\tsortOrder: ++prevSortOrder,\r\n\t\t\t\t});\r\n\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t},\r\n\t});\r\n\r\n\t#workspaceModal?: UmbModalRouteRegistrationController<\r\n\t\ttypeof UMB_WORKSPACE_MODAL.DATA,\r\n\t\ttypeof UMB_WORKSPACE_MODAL.VALUE\r\n\t>;\r\n\t#containerId?: string | null;\r\n\r\n\t@property({ type: String })\r\n\tpublic get containerId(): string | null | undefined {\r\n\t\treturn this.#containerId;\r\n\t}\r\n\tpublic set containerId(value: string | null | undefined) {\r\n\t\tconst oldValue = this.#containerId;\r\n\t\tif (value === this.#containerId) return;\r\n\t\tthis.#containerId = value;\r\n\t\tthis.#groupStructureHelper.setContainerId(value);\r\n\t\tthis.requestUpdate('containerId', oldValue);\r\n\t}\r\n\r\n\t@state()\r\n\t_groups: Array<UmbPropertyTypeContainerModel> = [];\r\n\r\n\t@state()\r\n\t_hasProperties = false;\r\n\r\n\t@state()\r\n\t_sortModeActive?: boolean;\r\n\r\n\t@state()\r\n\t_editContentTypePath?: string;\r\n\r\n\t#groupStructureHelper = new UmbContentTypeContainerStructureHelper<UmbContentTypeModel>(this);\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.consumeContext(UMB_CONTENT_TYPE_WORKSPACE_CONTEXT, (context) => {\r\n\t\t\tthis.#groupStructureHelper.setStructureManager(context.structure);\r\n\r\n\t\t\tconst entityType = context.getEntityType();\r\n\r\n\t\t\tthis.#workspaceModal?.destroy();\r\n\t\t\tthis.#workspaceModal = new UmbModalRouteRegistrationController(this, UMB_WORKSPACE_MODAL)\r\n\t\t\t\t.addAdditionalPath(entityType)\r\n\t\t\t\t.onSetup(async () => {\r\n\t\t\t\t\treturn { data: { entityType: entityType, preset: {} } };\r\n\t\t\t\t})\r\n\t\t\t\t.observeRouteBuilder((routeBuilder) => {\r\n\t\t\t\t\tthis._editContentTypePath = routeBuilder({});\r\n\t\t\t\t});\r\n\t\t});\r\n\r\n\t\tthis.consumeContext(UMB_CONTENT_TYPE_DESIGN_EDITOR_CONTEXT, (context) => {\r\n\t\t\tthis.observe(\r\n\t\t\t\tcontext.isSorting,\r\n\t\t\t\t(isSorting) => {\r\n\t\t\t\t\tthis._sortModeActive = isSorting;\r\n\t\t\t\t\tif (isSorting) {\r\n\t\t\t\t\t\tthis.#sorter.enable();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.#sorter.disable();\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t'_observeIsSorting',\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\tthis.observe(\r\n\t\t\tthis.#groupStructureHelper.mergedContainers,\r\n\t\t\t(groups) => {\r\n\t\t\t\tthis._groups = groups;\r\n\t\t\t\tthis.#sorter.setModel(this._groups);\r\n\t\t\t},\r\n\t\t\tnull,\r\n\t\t);\r\n\r\n\t\tthis.observe(\r\n\t\t\tthis.#groupStructureHelper.hasProperties,\r\n\t\t\t(hasProperties) => {\r\n\t\t\t\tthis._hasProperties = hasProperties;\r\n\t\t\t\tthis.requestUpdate('_hasProperties');\r\n\t\t\t},\r\n\t\t\tnull,\r\n\t\t);\r\n\t}\r\n\r\n\t#onAddGroup = () => {\r\n\t\t// Idea, maybe we can gather the sortOrder from the last group rendered and add 1 to it?\r\n\t\tconst len = this._groups.length;\r\n\t\tconst sortOrder = len === 0 ? 0 : this._groups[len - 1].sortOrder + 1;\r\n\t\tthis.#groupStructureHelper.addContainer(this.#containerId, sortOrder);\r\n\t};\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t${\r\n\t\t\t\tthis.#containerId\r\n\t\t\t\t\t? html`\r\n\t\t\t\t\t\t\t<uui-box class=\"${this._hasProperties ? '' : 'opaque'}\">\r\n\t\t\t\t\t\t\t\t<umb-content-type-design-editor-properties\r\n\t\t\t\t\t\t\t\t\t.containerId=${this.containerId}></umb-content-type-design-editor-properties>\r\n\t\t\t\t\t\t\t</uui-box>\r\n\t\t\t\t\t\t`\r\n\t\t\t\t\t: nothing\r\n\t\t\t}\r\n\r\n\t\t\t\t<div class=\"container-list\" ?sort-mode-active=${this._sortModeActive}>\r\n\t\t\t\t\t${repeat(\r\n\t\t\t\t\t\tthis._groups,\r\n\t\t\t\t\t\t(group) => group.id,\r\n\t\t\t\t\t\t(group) => html`\r\n\t\t\t\t\t\t\t<umb-content-type-design-editor-group\r\n\t\t\t\t\t\t\t\t?sort-mode-active=${this._sortModeActive}\r\n\t\t\t\t\t\t\t\t.editContentTypePath=${this._editContentTypePath}\r\n\t\t\t\t\t\t\t\t.group=${group}\r\n\t\t\t\t\t\t\t\t.groupStructureHelper=${this.#groupStructureHelper as any}>\r\n\t\t\t\t\t\t\t</umb-content-type-design-editor-group>\r\n\t\t\t\t\t\t`,\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t${this.#renderAddGroupButton()}\r\n\t\t\t</div>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderAddGroupButton() {\r\n\t\tif (this._sortModeActive) return;\r\n\t\treturn html`\r\n\t\t\t<uui-button\r\n\t\t\t\tid=\"btn-add\"\r\n\t\t\t\tlabel=${this.localize.term('contentTypeEditor_addGroup')}\r\n\t\t\t\tlook=\"placeholder\"\r\n\t\t\t\t@click=${this.#onAddGroup}></uui-button>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tcss`\r\n\t\t\t#btn-add {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\t--uui-button-height: var(--uui-size-24);\r\n\t\t\t}\r\n\r\n\t\t\tuui-box,\r\n\t\t\tumb-content-type-design-editor-group {\r\n\t\t\t\tmargin-bottom: var(--uui-size-layout-1);\r\n\t\t\t}\r\n\t\t\tuui-box.opaque {\r\n\t\t\t\tbackground-color: transparent;\r\n\t\t\t\tborder-color: transparent;\r\n\t\t\t}\r\n\r\n\t\t\t.container-list {\r\n\t\t\t\tdisplay: grid;\r\n\t\t\t\tgap: 10px;\r\n\t\t\t}\r\n\r\n\t\t\t#convert-to-tab {\r\n\t\t\t\tmargin-bottom: var(--uui-size-layout-1);\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbContentTypeDesignEditorTabElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-content-type-design-editor-tab': UmbContentTypeDesignEditorTabElement;\r\n\t}\r\n}\r\n"],"names":["UmbPropertyTypeContext","UmbContextBase","host","UMB_PROPERTY_TYPE_CONTEXT","#alias","UmbStringState","#label","alias","label","_context","_dataTypeDetailRepository","_dataTypeUnique","_propertyUnique","_autoGenerateAlias","_UmbContentTypeDesignEditorPropertyElement_instances","checkAliasAutoGenerate_fn","checkInherited_fn","partialUpdate_fn","singleValueUpdate_fn","onToggleAliasLock_fn","setDataType_fn","requestRemove_fn","onAliasChanged_fn","onNameChanged_fn","UmbContentTypeDesignEditorPropertyElement","UmbLitElement","__privateAdd","UmbDataTypeDetailRepository","value","__privateMethod","oldValue","__privateGet","html","nothing","e","UMB_EDIT_PROPERTY_TYPE_WORKSPACE_PATH_PATTERN","unique","__privateSet","contentType","partialObject","propertyName","event","dataTypeUnique","x","umbConfirmModal","newName","generateAlias","UmbTextStyles","css","__decorateClass","property","state","customElement","_sorter","_addPropertyModal","_editPropertyModal","_propertyStructureHelper","SORTER_CONFIG","element","modelEntry","UmbContentTypeDesignEditorPropertiesElement","UmbSorterController","model","item","newIndex","entry","prevSortOrder","UmbContentTypePropertyStructureHelper","UMB_CONTENT_TYPE_DESIGN_EDITOR_CONTEXT","context","isSorting","UMB_CONTENT_TYPE_WORKSPACE_CONTEXT","workspaceContext","propertyStructure","UmbModalRouteRegistrationController","UMB_PROPERTY_TYPE_WORKSPACE_MODAL","params","preset","sortOrderInt","routeBuilder","UMB_CREATE_PROPERTY_TYPE_WORKSPACE_PATH_PATTERN","repeat","when","ifDefined","_UmbContentTypeWorkspaceViewEditGroupElement_instances","renameGroup_fn","blurGroup_fn","renderContainerHeader_fn","UmbContentTypeWorkspaceViewEditGroupElement","containers","ownerContainer","con","hasAOwnerContainer","pureOwnerContainer","oldHasOwnerContainer","oldInherited","oldInheritedFrom","changedName","umbFocus","inherited","UUIBlinkKeyframes","UUIBlinkAnimationValue","_workspaceModal","_containerId","_groupStructureHelper","_onAddGroup","_UmbContentTypeDesignEditorTabElement_instances","renderAddGroupButton_fn","UmbContentTypeDesignEditorTabElement","UmbContentTypeContainerStructureHelper","len","sortOrder","entityType","UMB_WORKSPACE_MODAL","groups","hasProperties","group","UmbContentTypeDesignEditorTabElement$1"],"mappings":"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"}