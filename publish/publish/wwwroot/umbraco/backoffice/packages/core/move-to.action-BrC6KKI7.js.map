{"version":3,"file":"move-to.action-BrC6KKI7.js","sources":["../../../src/packages/core/tree/entity-actions/move/move-to.action.ts"],"sourcesContent":["import type { UmbMoveRepository } from './move-repository.interface.js';\r\nimport type { MetaEntityActionMoveToKind } from './types.js';\r\nimport { UmbEntityActionBase, UmbRequestReloadStructureForEntityEvent } from '@umbraco-cms/backoffice/entity-action';\r\nimport { UMB_MODAL_MANAGER_CONTEXT } from '@umbraco-cms/backoffice/modal';\r\nimport { createExtensionApiByAlias } from '@umbraco-cms/backoffice/extension-registry';\r\nimport { UMB_ACTION_EVENT_CONTEXT } from '@umbraco-cms/backoffice/action';\r\nimport { UMB_TREE_PICKER_MODAL } from '@umbraco-cms/backoffice/tree';\r\n\r\nexport class UmbMoveToEntityAction extends UmbEntityActionBase<MetaEntityActionMoveToKind> {\r\n\toverride async execute() {\r\n\t\tif (!this.args.unique) throw new Error('Unique is not available');\r\n\t\tif (!this.args.entityType) throw new Error('Entity Type is not available');\r\n\r\n\t\tconst modalManager = await this.getContext(UMB_MODAL_MANAGER_CONTEXT);\r\n\t\tconst modalContext = modalManager.open(this, UMB_TREE_PICKER_MODAL, {\r\n\t\t\tdata: {\r\n\t\t\t\ttreeAlias: this.args.meta.treeAlias,\r\n\t\t\t\tfoldersOnly: this.args.meta.foldersOnly,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tconst value = await modalContext.onSubmit();\r\n\t\tconst destinationUnique = value.selection[0];\r\n\t\tif (destinationUnique === undefined) throw new Error('Destination Unique is not available');\r\n\r\n\t\tconst moveRepository = await createExtensionApiByAlias<UmbMoveRepository>(this, this.args.meta.moveRepositoryAlias);\r\n\t\tif (!moveRepository) throw new Error('Move Repository is not available');\r\n\r\n\t\tawait moveRepository.requestMoveTo({ unique: this.args.unique, destination: { unique: destinationUnique } });\r\n\r\n\t\tthis.#reloadMenu();\r\n\t}\r\n\r\n\tasync #reloadMenu() {\r\n\t\tconst actionEventContext = await this.getContext(UMB_ACTION_EVENT_CONTEXT);\r\n\t\tconst event = new UmbRequestReloadStructureForEntityEvent({\r\n\t\t\tunique: this.args.unique,\r\n\t\t\tentityType: this.args.entityType,\r\n\t\t});\r\n\r\n\t\tactionEventContext.dispatchEvent(event);\r\n\r\n\t\t// TODO: Reload destination\r\n\t}\r\n}\r\n\r\nexport default UmbMoveToEntityAction;\r\n"],"names":["UmbMoveToEntityAction","UmbEntityActionBase","destinationUnique","UMB_MODAL_MANAGER_CONTEXT","UMB_TREE_PICKER_MODAL","moveRepository","createExtensionApiByAlias","#reloadMenu","actionEventContext","UMB_ACTION_EVENT_CONTEXT","event","UmbRequestReloadStructureForEntityEvent"],"mappings":";;;;;AAQO,MAAMA,UAA8BC,EAAgD;AAAA,EAC1F,MAAe,UAAU;AACxB,QAAI,CAAC,KAAK,KAAK,OAAc,OAAA,IAAI,MAAM,yBAAyB;AAChE,QAAI,CAAC,KAAK,KAAK,WAAkB,OAAA,IAAI,MAAM,8BAA8B;AAWnE,UAAAC,KADQ,OARO,MAAM,KAAK,WAAWC,CAAyB,GAClC,KAAK,MAAMC,GAAuB;AAAA,MACnE,MAAM;AAAA,QACL,WAAW,KAAK,KAAK,KAAK;AAAA,QAC1B,aAAa,KAAK,KAAK,KAAK;AAAA,MAAA;AAAA,IAC7B,CACA,EAEgC,SAAS,GACV,UAAU,CAAC;AAC3C,QAAIF,MAAsB,OAAiB,OAAA,IAAI,MAAM,qCAAqC;AAE1F,UAAMG,IAAiB,MAAMC,EAA6C,MAAM,KAAK,KAAK,KAAK,mBAAmB;AAClH,QAAI,CAACD,EAAsB,OAAA,IAAI,MAAM,kCAAkC;AAEvE,UAAMA,EAAe,cAAc,EAAE,QAAQ,KAAK,KAAK,QAAQ,aAAa,EAAE,QAAQH,EAAkB,EAAA,CAAG,GAE3G,KAAKK,GAAY;AAAA,EAAA;AAAA,EAGlB,MAAMA,KAAc;AACnB,UAAMC,IAAqB,MAAM,KAAK,WAAWC,CAAwB,GACnEC,IAAQ,IAAIC,EAAwC;AAAA,MACzD,QAAQ,KAAK,KAAK;AAAA,MAClB,YAAY,KAAK,KAAK;AAAA,IAAA,CACtB;AAED,IAAAH,EAAmB,cAAcE,CAAK;AAAA,EAAA;AAIxC;"}