{"version":3,"file":"property-type-based-property.element-B_7ZydA1.js","sources":["../../../src/packages/core/content/content-property.context-token.ts","../../../src/packages/core/content/content-property.context.ts","../../../src/packages/core/content/components/property-type-based-property/property-type-based-property.element.ts"],"sourcesContent":["import type { UmbContentPropertyContext } from './content-property.context.js';\r\nimport { UmbContextToken } from '@umbraco-cms/backoffice/context-api';\r\n\r\nexport const UMB_CONTENT_PROPERTY_CONTEXT = new UmbContextToken<UmbContentPropertyContext>('UmbContentPropertyContext');\r\n","import type { UmbPropertyTypeModel } from '../content-type/types.js';\r\nimport { UMB_CONTENT_PROPERTY_CONTEXT } from './content-property.context-token.js';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { UmbContextBase } from '@umbraco-cms/backoffice/class-api';\r\nimport { UmbObjectState } from '@umbraco-cms/backoffice/observable-api';\r\n\r\nexport class UmbContentPropertyContext extends UmbContextBase<UmbContentPropertyContext> {\r\n\t#dataType = new UmbObjectState<UmbPropertyTypeModel['dataType'] | undefined>(undefined);\r\n\tdataType = this.#dataType.asObservable();\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host, UMB_CONTENT_PROPERTY_CONTEXT);\r\n\t}\r\n\r\n\tsetDataType(dataType: UmbPropertyTypeModel['dataType'] | undefined) {\r\n\t\tthis.#dataType.setValue(dataType);\r\n\t}\r\n}\r\n","import { UmbContentPropertyContext } from '../../content-property.context.js';\r\nimport type { UmbPropertyEditorConfig } from '@umbraco-cms/backoffice/property-editor';\r\nimport { css, customElement, html, ifDefined, property, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbDataTypeDetailRepository } from '@umbraco-cms/backoffice/data-type';\r\nimport { umbExtensionsRegistry } from '@umbraco-cms/backoffice/extension-registry';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport type { UmbDataTypeDetailModel } from '@umbraco-cms/backoffice/data-type';\r\nimport type { UmbObserverController } from '@umbraco-cms/backoffice/observable-api';\r\nimport { UMB_UNSUPPORTED_EDITOR_SCHEMA_ALIASES } from '@umbraco-cms/backoffice/property';\r\nimport type { UmbPropertyTypeModel } from '@umbraco-cms/backoffice/content-type';\r\n\r\n@customElement('umb-property-type-based-property')\r\nexport class UmbPropertyTypeBasedPropertyElement extends UmbLitElement {\r\n\t@property({ type: Object, attribute: false })\r\n\tpublic set property(value: UmbPropertyTypeModel | undefined) {\r\n\t\tconst oldProperty = this._property;\r\n\t\tthis._property = value;\r\n\t\tif (this._property?.dataType.unique !== oldProperty?.dataType.unique) {\r\n\t\t\tthis._observeDataType(this._property?.dataType.unique);\r\n\t\t}\r\n\t}\r\n\tpublic get property(): UmbPropertyTypeModel | undefined {\r\n\t\treturn this._property;\r\n\t}\r\n\tprivate _property?: UmbPropertyTypeModel;\r\n\r\n\t@property({ type: String, attribute: 'data-path' })\r\n\tpublic dataPath?: string;\r\n\r\n\t@property({ type: String })\r\n\tpublic get ownerEntityType(): string | undefined {\r\n\t\treturn this._ownerEntityType;\r\n\t}\r\n\tpublic set ownerEntityType(value: string | undefined) {\r\n\t\t// Change this to ownerSchemaEditorAlias and retrieve the correct information.\r\n\t\tthis._ownerEntityType = value;\r\n\t}\r\n\r\n\tprivate _ownerEntityType?: string;\r\n\r\n\t@state()\r\n\tprivate _propertyEditorUiAlias?: string;\r\n\r\n\t@state()\r\n\tprivate _propertyEditorSchemaAlias?: string;\r\n\r\n\t@state()\r\n\tprivate _isUnsupported?: boolean;\r\n\r\n\t@state()\r\n\tprivate _dataTypeData?: UmbPropertyEditorConfig;\r\n\r\n\tprivate _dataTypeDetailRepository = new UmbDataTypeDetailRepository(this);\r\n\tprivate _dataTypeObserver?: UmbObserverController<UmbDataTypeDetailModel | undefined>;\r\n\r\n\t#contentPropertyContext = new UmbContentPropertyContext(this);\r\n\r\n\tprivate async _checkSchemaSupport() {\r\n\t\tif (!this._ownerEntityType || !this._propertyEditorSchemaAlias) return;\r\n\r\n\t\tif (this._ownerEntityType in UMB_UNSUPPORTED_EDITOR_SCHEMA_ALIASES) {\r\n\t\t\tthis._isUnsupported = UMB_UNSUPPORTED_EDITOR_SCHEMA_ALIASES[this._ownerEntityType].includes(\r\n\t\t\t\tthis._propertyEditorSchemaAlias,\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate async _observeDataType(dataTypeUnique?: string) {\r\n\t\tthis._dataTypeObserver?.destroy();\r\n\t\tif (dataTypeUnique) {\r\n\t\t\t// Its not technically needed to have await here, this is only to ensure that the data is loaded before we observe it, and thereby only updating the DOM with the latest data.\r\n\t\t\tawait this._dataTypeDetailRepository.requestByUnique(dataTypeUnique);\r\n\t\t\tthis._dataTypeObserver = this.observe(\r\n\t\t\t\tawait this._dataTypeDetailRepository.byUnique(dataTypeUnique),\r\n\t\t\t\t(dataType) => {\r\n\t\t\t\t\tconst contextValue = dataType ? { unique: dataType.unique } : undefined;\r\n\t\t\t\t\tthis.#contentPropertyContext.setDataType(contextValue);\r\n\r\n\t\t\t\t\tthis._dataTypeData = dataType?.values;\r\n\t\t\t\t\tthis._propertyEditorUiAlias = dataType?.editorUiAlias || undefined;\r\n\t\t\t\t\tthis._propertyEditorSchemaAlias = dataType?.editorAlias || undefined;\r\n\t\t\t\t\tthis._checkSchemaSupport();\r\n\r\n\t\t\t\t\t// If there is no UI, we will look up the Property editor model to find the default UI alias:\r\n\t\t\t\t\tif (!this._propertyEditorUiAlias && dataType?.editorAlias) {\r\n\t\t\t\t\t\t//use 'dataType.editorAlias' to look up the extension in the registry:\r\n\t\t\t\t\t\t// TODO: lets implement a way to observe once. [NL]\r\n\t\t\t\t\t\tthis.observe(\r\n\t\t\t\t\t\t\tumbExtensionsRegistry.byTypeAndAlias('propertyEditorSchema', dataType.editorAlias),\r\n\t\t\t\t\t\t\t(extension) => {\r\n\t\t\t\t\t\t\t\tif (!extension) return;\r\n\t\t\t\t\t\t\t\tthis._propertyEditorUiAlias = extension?.meta.defaultPropertyEditorUiAlias;\r\n\t\t\t\t\t\t\t\tthis.removeUmbControllerByAlias('_observePropertyEditorSchema');\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t'_observePropertyEditorSchema',\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.removeUmbControllerByAlias('_observePropertyEditorSchema');\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t'_observeDataType',\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\toverride render() {\r\n\t\tif (!this._propertyEditorUiAlias || !this._property?.alias) return;\r\n\t\tif (this._isUnsupported) {\r\n\t\t\treturn html`<umb-unsupported-property\r\n\t\t\t\t.alias=${this._property.alias}\r\n\t\t\t\t.schema=${this._propertyEditorSchemaAlias!}></umb-unsupported-property>`;\r\n\t\t}\r\n\t\treturn html`\r\n\t\t\t<umb-property\r\n\t\t\t\t.dataPath=${this.dataPath}\r\n\t\t\t\t.alias=${this._property.alias}\r\n\t\t\t\t.label=${this._property.name}\r\n\t\t\t\t.description=${this._property.description ?? undefined}\r\n\t\t\t\t.appearance=${this._property.appearance}\r\n\t\t\t\tproperty-editor-ui-alias=${ifDefined(this._propertyEditorUiAlias)}\r\n\t\t\t\t.config=${this._dataTypeData}\r\n\t\t\t\t.validation=${this._property.validation}>\r\n\t\t\t</umb-property>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-property-type-based-property': UmbPropertyTypeBasedPropertyElement;\r\n\t}\r\n}\r\n"],"names":["UMB_CONTENT_PROPERTY_CONTEXT","UmbContextToken","UmbContentPropertyContext","UmbContextBase","host","#dataType","UmbObjectState","dataType","_contentPropertyContext","UmbPropertyTypeBasedPropertyElement","UmbLitElement","UmbDataTypeDetailRepository","__privateAdd","value","oldProperty","UMB_UNSUPPORTED_EDITOR_SCHEMA_ALIASES","dataTypeUnique","contextValue","__privateGet","umbExtensionsRegistry","extension","html","ifDefined","UmbTextStyles","css","__decorateClass","property","state","customElement"],"mappings":"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"}