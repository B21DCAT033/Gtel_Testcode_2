{"version":3,"file":"sort-children-of-modal.element-iWBag1am.js","sources":["../../../src/packages/core/tree/entity-actions/sort-children-of/modal/sort-children-of-modal.element.ts"],"sourcesContent":["import type { UmbSortChildrenOfModalData, UmbSortChildrenOfModalValue } from './sort-children-of-modal.token.js';\r\nimport type { PropertyValueMap } from '@umbraco-cms/backoffice/external/lit';\r\nimport { html, customElement, css, state, repeat, nothing } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport { UmbModalBaseElement } from '@umbraco-cms/backoffice/modal';\r\nimport { UmbSorterController } from '@umbraco-cms/backoffice/sorter';\r\nimport { createExtensionApiByAlias } from '@umbraco-cms/backoffice/extension-registry';\r\nimport type { UmbTreeRepository, UmbTreeItemModel, UmbSortChildrenOfRepository } from '@umbraco-cms/backoffice/tree';\r\nimport { UmbPaginationManager } from '@umbraco-cms/backoffice/utils';\r\nimport { observeMultiple } from '@umbraco-cms/backoffice/observable-api';\r\nimport type { UmbDocumentTreeItemModel } from '@umbraco-cms/backoffice/document';\r\nimport type { UmbMediaTreeItemModel } from '@umbraco-cms/backoffice/media';\r\n\r\nconst elementName = 'umb-sort-children-of-modal';\r\n\r\n@customElement(elementName)\r\nexport class UmbSortChildrenOfModalElement extends UmbModalBaseElement<\r\n\tUmbSortChildrenOfModalData,\r\n\tUmbSortChildrenOfModalValue\r\n> {\r\n\t@state()\r\n\t_children: Array<UmbTreeItemModel> = [];\r\n\r\n\t@state()\r\n\t_currentPage = 1;\r\n\r\n\t@state()\r\n\t_totalPages = 1;\r\n\r\n\t@state()\r\n\t_isSorting: boolean = false;\r\n\r\n\t#hasMorePages() {\r\n\t\treturn this._currentPage < this._totalPages;\r\n\t}\r\n\r\n\t#pagination = new UmbPaginationManager();\r\n\t#sortedUniques = new Set<string>();\r\n\t#sorter?: UmbSorterController<UmbTreeItemModel>;\r\n\r\n\t#sortBy: string = '';\r\n\t#sortDirection: string = '';\r\n\r\n\t#localizeDateOptions: Intl.DateTimeFormatOptions = {\r\n\t\tday: 'numeric',\r\n\t\tmonth: 'short',\r\n\t\tyear: 'numeric',\r\n\t\thour: 'numeric',\r\n\t\tminute: '2-digit',\r\n\t};\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.#pagination.setPageSize(50);\r\n\r\n\t\tthis.observe(\r\n\t\t\tobserveMultiple([this.#pagination.currentPage, this.#pagination.totalPages]),\r\n\t\t\t([currentPage, totalPages]) => {\r\n\t\t\t\tthis._currentPage = currentPage;\r\n\t\t\t\tthis._totalPages = totalPages;\r\n\t\t\t},\r\n\t\t\t'umbPaginationObserver',\r\n\t\t);\r\n\t}\r\n\r\n\tprotected override async firstUpdated(\r\n\t\t_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\r\n\t): Promise<void> {\r\n\t\tsuper.firstUpdated(_changedProperties);\r\n\t\tthis.#requestChildren();\r\n\t}\r\n\r\n\tasync #requestChildren() {\r\n\t\tif (this.data?.unique === undefined) throw new Error('unique is required');\r\n\t\tif (!this.data?.treeRepositoryAlias) throw new Error('treeRepositoryAlias is required');\r\n\r\n\t\tconst treeRepository = await createExtensionApiByAlias<UmbTreeRepository<UmbTreeItemModel>>(\r\n\t\t\tthis,\r\n\t\t\tthis.data.treeRepositoryAlias,\r\n\t\t);\r\n\r\n\t\tconst { data } = await treeRepository.requestTreeItemsOf({\r\n\t\t\tparent: {\r\n\t\t\t\tunique: this.data.unique,\r\n\t\t\t\tentityType: this.data.entityType,\r\n\t\t\t},\r\n\t\t\tskip: this.#pagination.getSkip(),\r\n\t\t\ttake: this.#pagination.getPageSize(),\r\n\t\t});\r\n\r\n\t\tif (data) {\r\n\t\t\tthis._children = [...this._children, ...data.items];\r\n\t\t\tthis.#pagination.setTotalItems(data.total);\r\n\r\n\t\t\tif (data.total > 0) {\r\n\t\t\t\tthis.#initSorter();\r\n\t\t\t\tthis.#sorter?.setModel(this._children);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t#initSorter() {\r\n\t\tif (this.#sorter) return;\r\n\r\n\t\tthis.#sorter = new UmbSorterController<UmbTreeItemModel>(this, {\r\n\t\t\tgetUniqueOfElement: (element) => {\r\n\t\t\t\treturn element.dataset.unique;\r\n\t\t\t},\r\n\t\t\tgetUniqueOfModel: (modelEntry) => {\r\n\t\t\t\treturn modelEntry.unique;\r\n\t\t\t},\r\n\t\t\tidentifier: 'Umb.SorterIdentifier.SortChildrenOfModal',\r\n\t\t\titemSelector: 'uui-table-row',\r\n\t\t\tcontainerSelector: 'uui-table',\r\n\t\t\tonChange: ({ model }) => {\r\n\t\t\t\tconst oldValue = this._children;\r\n\t\t\t\tthis._children = model;\r\n\t\t\t\tthis.requestUpdate('_children', oldValue);\r\n\t\t\t},\r\n\t\t\tonEnd: ({ item }) => {\r\n\t\t\t\tthis.#sortedUniques.add(item.unique);\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\t#onLoadMore(event: PointerEvent) {\r\n\t\tevent.stopPropagation();\r\n\t\tif (this._currentPage >= this._totalPages) return;\r\n\t\tthis.#pagination.setCurrentPageNumber(this._currentPage + 1);\r\n\t\tthis.#requestChildren();\r\n\t}\r\n\r\n\tasync #onSubmit(event: PointerEvent) {\r\n\t\tevent?.stopPropagation();\r\n\t\tif (!this.data?.sortChildrenOfRepositoryAlias) throw new Error('sortChildrenOfRepositoryAlias is required');\r\n\r\n\t\tconst sortChildrenOfRepository = await createExtensionApiByAlias<UmbSortChildrenOfRepository>(\r\n\t\t\tthis,\r\n\t\t\tthis.data.sortChildrenOfRepositoryAlias,\r\n\t\t);\r\n\r\n\t\tconst { error } = await sortChildrenOfRepository.sortChildrenOf({\r\n\t\t\tunique: this.data.unique,\r\n\t\t\tsorting: this.#getSortOrderOfSortedItems(),\r\n\t\t});\r\n\r\n\t\tif (!error) {\r\n\t\t\tthis._submitModal();\r\n\t\t}\r\n\t}\r\n\r\n\t#onSortChildrenBy(key: string) {\r\n\t\tif (this._isSorting) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._isSorting = true;\r\n\r\n\t\tconst oldValue = this._children;\r\n\r\n\t\t// If switching column, revert to ascending sort. Otherwise switch from whatever was previously selected.\r\n\t\tif (this.#sortBy !== key) {\r\n\t\t\tthis.#sortDirection = 'asc';\r\n\t\t} else {\r\n\t\t\tthis.#sortDirection = this.#sortDirection === 'asc' ? 'desc' : 'asc';\r\n\t\t}\r\n\r\n\t\t// Sort by the new column.\r\n\t\tthis.#sortBy = key;\r\n\t\tthis._children = [...this._children].sort((a, b) => {\r\n\t\t\tswitch (key) {\r\n\t\t\t\tcase 'name':\r\n\t\t\t\t\treturn a.name.localeCompare(b.name);\r\n\t\t\t\tcase 'createDate':\r\n\t\t\t\t\treturn Date.parse(this.#getCreateDate(a)) - Date.parse(this.#getCreateDate(b));\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Reverse the order if sorting descending.\r\n\t\tif (this.#sortDirection === 'desc') {\r\n\t\t\tthis._children.reverse();\r\n\t\t}\r\n\r\n\t\tthis.#sortedUniques.clear();\r\n\t\tthis._children.map((c) => c.unique).forEach((u) => this.#sortedUniques.add(u));\r\n\r\n\t\tthis.requestUpdate('_children', oldValue);\r\n\r\n\t\tthis._isSorting = false;\r\n\t}\r\n\r\n\t#getSortOrderOfSortedItems() {\r\n\t\tconst sorting = [];\r\n\r\n\t\t// get the new sort order from the sorted uniques\r\n\t\tfor (const value of this.#sortedUniques) {\r\n\t\t\tconst index = this._children.findIndex((child) => child.unique === value);\r\n\t\t\tif (index !== -1) {\r\n\t\t\t\tconst entry = {\r\n\t\t\t\t\tunique: value,\r\n\t\t\t\t\tsortOrder: index,\r\n\t\t\t\t};\r\n\r\n\t\t\t\tsorting.push(entry);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn sorting;\r\n\t}\r\n\r\n\t#getCreateDate(item: UmbTreeItemModel): string {\r\n\t\tlet date = '';\r\n\t\tconst itemAsDocumentTreeItemModel = item as UmbDocumentTreeItemModel;\r\n\t\tif (itemAsDocumentTreeItemModel) {\r\n\t\t\tdate = itemAsDocumentTreeItemModel.createDate;\r\n\t\t} else {\r\n\t\t\tconst itemAsMediaTreeItemModel = item as UmbMediaTreeItemModel;\r\n\t\t\tif (itemAsMediaTreeItemModel) {\r\n\t\t\t\tdate = itemAsMediaTreeItemModel.createDate;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn date;\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<umb-body-layout headline=${'Sort Children'}>\r\n\t\t\t\t<uui-box>${this.#renderChildren()}</uui-box>\r\n\t\t\t\t<uui-button slot=\"actions\" label=\"Cancel\" @click=\"${this._rejectModal}\"></uui-button>\r\n\t\t\t\t<uui-button slot=\"actions\" color=\"positive\" look=\"primary\" label=\"Sort\" @click=${this.#onSubmit}></uui-button>\r\n\t\t\t</umb-body-layout>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderChildren() {\r\n\t\tif (this._children.length === 0) return html`<uui-label>There are no children</uui-label>`;\r\n\t\treturn html`\r\n\t\t\t<uui-table>\r\n\t\t\t\t<uui-table-head>\r\n\t\t\t\t\t<uui-table-head-cell></uui-table-head-cell>\r\n\t\t\t\t\t${this.#renderHeaderCell('name', 'general_name')}\r\n\t\t\t\t\t${this.#renderHeaderCell('createDate', 'content_createDate')}\r\n\t\t\t\t</uui-table-head>\r\n\t\t\t\t${this._isSorting\r\n\t\t\t\t\t? html`\r\n\t\t\t\t\t\t\t<uui-table-row>\r\n\t\t\t\t\t\t\t\t<uui-table-cell></uui-table-cell>\r\n\t\t\t\t\t\t\t\t<uui-table-cell><uui-loader-circle></uui-loader-circle></uui-table-cell>\r\n\t\t\t\t\t\t\t\t<uui-table-cell></uui-table-cell>\r\n\t\t\t\t\t\t\t</uui-table-row>\r\n\t\t\t\t\t\t`\r\n\t\t\t\t\t: nothing}\r\n\t\t\t\t${repeat(\r\n\t\t\t\t\tthis._children,\r\n\t\t\t\t\t(child) => child.unique,\r\n\t\t\t\t\t(child) => this.#renderChild(child),\r\n\t\t\t\t)}\r\n\t\t\t</uui-table>\r\n\r\n\t\t\t${this.#hasMorePages()\r\n\t\t\t\t? html`\r\n\t\t\t\t\t\t<uui-button id=\"loadMoreButton\" look=\"secondary\" @click=${this.#onLoadMore}\r\n\t\t\t\t\t\t\t>Load More (${this._currentPage}/${this._totalPages})</uui-button\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t`\r\n\t\t\t\t: nothing}\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderHeaderCell(key: string, labelKey: string) {\r\n\t\t// Only provide buttons for sorting via the column headers if all pages have been loaded.\r\n\t\treturn html` <uui-table-head-cell>\r\n\t\t\t${this.#hasMorePages()\r\n\t\t\t\t? html` <span>${this.localize.term(labelKey)}</span> `\r\n\t\t\t\t: html`\r\n\t\t\t\t\t\t<button @click=${() => this.#onSortChildrenBy(key)}>\r\n\t\t\t\t\t\t\t${this.localize.term(labelKey)}\r\n\t\t\t\t\t\t\t<uui-symbol-sort\r\n\t\t\t\t\t\t\t\t?active=${this.#sortBy === key}\r\n\t\t\t\t\t\t\t\t?descending=${this.#sortDirection === 'desc'}></uui-symbol-sort>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t`}\r\n\t\t</uui-table-head-cell>`;\r\n\t}\r\n\r\n\t#renderChild(item: UmbTreeItemModel) {\r\n\t\t// TODO: find a way to get the icon for the item. We do not have the icon in the tree item model.\r\n\t\treturn html` <uui-table-row id=\"content-node\" data-unique=${item.unique} class=\"${this._isSorting ? 'hidden' : ''}\">\r\n\t\t\t<uui-table-cell><umb-icon name=\"icon-navigation\"></umb-icon></uui-table-cell>\r\n\t\t\t<uui-table-cell>${item.name}</uui-table-cell>\r\n\t\t\t<uui-table-cell>${this.#renderCreateDate(item)}</uui-table-cell>\r\n\t\t</uui-table-row>`;\r\n\t}\r\n\r\n\t#renderCreateDate(item: UmbTreeItemModel) {\r\n\t\tconst date = this.#getCreateDate(item);\r\n\t\tif (date.length === 0) {\r\n\t\t\treturn nothing;\r\n\t\t}\r\n\r\n\t\treturn html`<umb-localize-date date=\"${date}\" .options=${this.#localizeDateOptions}></umb-localize-date>`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t#loadMoreButton {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t}\r\n\r\n\t\t\tuui-table-cell {\r\n\t\t\t\tpadding: var(--uui-size-space-2) var(--uui-size-space-5);\r\n\t\t\t}\r\n\r\n\t\t\tuui-table-head-cell {\r\n\t\t\t\tpadding: 0 var(--uui-size-space-5);\r\n\t\t\t}\r\n\r\n\t\t\tuui-table-head-cell button {\r\n\t\t\t\tbackground-color: transparent;\r\n\t\t\t\tcolor: inherit;\r\n\t\t\t\tborder: none;\r\n\t\t\t\tcursor: pointer;\r\n\t\t\t\tfont-weight: inherit;\r\n\t\t\t\tfont-size: inherit;\r\n\t\t\t\tdisplay: inline-flex;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tjustify-content: space-between;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tpadding: var(--uui-size-5) var(--uui-size-1);\r\n\t\t\t}\r\n\r\n\t\t\tuui-table-row.hidden {\r\n\t\t\t\tvisibility: hidden;\r\n\t\t\t}\r\n\r\n\t\t\tuui-table-row[id='content-node']:hover {\r\n\t\t\t\tcursor: grab;\r\n\t\t\t}\r\n\r\n\t\t\tuui-icon[name='icon-navigation'] {\r\n\t\t\t\tcursor: hand;\r\n\t\t\t}\r\n\r\n\t\t\tuui-box {\r\n\t\t\t\t--uui-box-default-padding: 0;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport { UmbSortChildrenOfModalElement as element };\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t[elementName]: UmbSortChildrenOfModalElement;\r\n\t}\r\n}\r\n"],"names":["_UmbSortChildrenOfModalElement_instances","hasMorePages_fn","_pagination","_sortedUniques","_sorter","_sortBy","_sortDirection","_localizeDateOptions","requestChildren_fn","initSorter_fn","onLoadMore_fn","onSubmit_fn","onSortChildrenBy_fn","getSortOrderOfSortedItems_fn","getCreateDate_fn","renderChildren_fn","renderHeaderCell_fn","renderChild_fn","renderCreateDate_fn","elementName","UmbSortChildrenOfModalElement","UmbModalBaseElement","__privateAdd","UmbPaginationManager","__privateGet","observeMultiple","currentPage","totalPages","_changedProperties","__privateMethod","html","treeRepository","createExtensionApiByAlias","data","__privateSet","UmbSorterController","element","modelEntry","model","oldValue","item","event","sortChildrenOfRepository","error","key","a","b","c","u","sorting","value","index","child","entry","date","itemAsDocumentTreeItemModel","itemAsMediaTreeItemModel","nothing","repeat","labelKey","UmbTextStyles","css","__decorateClass","state","customElement"],"mappings":"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"}