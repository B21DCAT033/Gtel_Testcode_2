{"version":3,"file":"table.element-JGMLeqE5.js","sources":["../../../src/packages/core/components/backoffice-modal-container/backoffice-modal-container.element.ts","../../../src/packages/core/components/backoffice-notification-container/backoffice-notification-container.element.ts","../../../src/packages/core/components/body-layout/body-layout.element.ts","../../../src/packages/core/components/code-block/code-block.element.ts","../../../src/packages/core/components/dropdown/dropdown.element.ts","../../../src/packages/core/components/entity-actions-bundle/entity-actions-bundle.element.ts","../../../src/packages/core/components/footer-layout/footer-layout.element.ts","../../../src/packages/core/components/header-app/header-app-button.element.ts","../../../src/packages/core/components/history/history-item.element.ts","../../../src/packages/core/components/history/history-list.element.ts","../../../src/packages/core/components/icon/icon.element.ts","../../../src/packages/core/components/input-collection-configuration/input-collection-configuration.element.ts","../../../src/packages/core/components/input-color/input-color.element.ts","../../../src/packages/core/components/input-date/input-date.element.ts","../../../src/packages/core/components/input-dropdown/input-dropdown-list.element.ts","../../../src/packages/core/components/input-entity/input-entity.element.ts","../../../src/packages/core/components/input-eye-dropper/input-eye-dropper.element.ts","../../../src/packages/core/components/input-manifest/input-manifest.element.ts","../../../src/packages/core/components/input-number-range/input-number-range.element.ts","../../../src/packages/core/components/input-radio-button-list/input-radio-button-list.element.ts","../../../src/packages/core/components/input-slider/input-slider.element.ts","../../../src/packages/core/components/input-toggle/input-toggle.element.ts","../../../src/packages/core/components/input-with-alias/input-with-alias.element.ts","../../../src/packages/core/components/multiple-color-picker-input/multiple-color-picker-input.element.ts","../../../src/packages/core/components/multiple-color-picker-input/multiple-color-picker-item-input.element.ts","../../../src/packages/core/components/multiple-text-string-input/input-multiple-text-string.element.ts","../../../src/packages/core/components/multiple-text-string-input/input-multiple-text-string-item.element.ts","../../../src/packages/core/components/popover-layout/popover-layout.element.ts","../../../src/packages/core/components/ref-item/ref-item.element.ts","../../../src/packages/core/components/stack/stack.element.ts","../../../src/packages/core/components/split-panel/split-panel.element.ts","../../../src/packages/core/components/table/table.element.ts"],"sourcesContent":["import { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport type { CSSResultGroup } from '@umbraco-cms/backoffice/external/lit';\r\nimport { css, html, repeat, customElement, state, nothing, property } from '@umbraco-cms/backoffice/external/lit';\r\nimport type { UmbModalManagerContext, UmbModalContext } from '@umbraco-cms/backoffice/modal';\r\nimport { UMB_MODAL_MANAGER_CONTEXT, UmbModalElement } from '@umbraco-cms/backoffice/modal';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\n\r\n@customElement('umb-backoffice-modal-container')\r\nexport class UmbBackofficeModalContainerElement extends UmbLitElement {\r\n\t@state()\r\n\tprivate _modalElementMap: Map<string, UmbModalElement> = new Map();\r\n\r\n\t@state()\r\n\t_modals: Array<UmbModalContext> = [];\r\n\r\n\t@property({ type: Boolean, reflect: true, attribute: 'fill-background' })\r\n\tfillBackground = false;\r\n\r\n\tprivate _modalManager?: UmbModalManagerContext;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.consumeContext(UMB_MODAL_MANAGER_CONTEXT, (instance) => {\r\n\t\t\t//TODO: This is being called way to many times if first page load includes an open modal.\r\n\t\t\tthis._modalManager = instance;\r\n\t\t\tthis._observeModals();\r\n\t\t});\r\n\t}\r\n\r\n\tprivate _observeModals() {\r\n\t\tif (!this._modalManager) return;\r\n\t\tthis.observe(this._modalManager.modals, (modals) => {\r\n\t\t\tthis.#createModalElements(modals);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * We cannot render the umb-modal element directly in the uui-modal-container because it wont get recognized by UUI.\r\n\t *  We therefore have a helper class which creates the uui-modal element and returns it.\r\n\t * @param modals\r\n\t */\r\n\t#createModalElements(modals: Array<UmbModalContext>) {\r\n\t\tthis.fillBackground = false;\r\n\t\tconst oldValue = this._modals;\r\n\t\tthis._modals = modals;\r\n\r\n\t\tconst oldModals = oldValue.filter((oldModal) => !modals.some((modal) => modal.key === oldModal.key));\r\n\r\n\t\toldModals.forEach((modal) => {\r\n\t\t\t// TODO: I would not think this works as expected, the callback method has to be the exact same instance as the one added: [NL]\r\n\t\t\tthis._modalElementMap.get(modal.key)?.removeEventListener('close-end', this.#onCloseEnd.bind(this, modal.key));\r\n\t\t\tthis._modalElementMap.delete(modal.key);\r\n\t\t});\r\n\r\n\t\tif (this._modals.length === 0) {\r\n\t\t\t//this._modalElementMap.clear(); // should not make a difference now that we clean it above. [NL]\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._modals.forEach(async (modalContext) => {\r\n\t\t\tif (this._modalElementMap.has(modalContext.key)) return;\r\n\r\n\t\t\tconst modalElement = new UmbModalElement();\r\n\t\t\tawait modalElement.init(modalContext);\r\n\r\n\t\t\tmodalElement.element?.addEventListener('close-end', this.#onCloseEnd.bind(this, modalContext.key));\r\n\t\t\tmodalContext.addEventListener('umb:destroy', this.#onCloseEnd.bind(this, modalContext.key));\r\n\r\n\t\t\tthis._modalElementMap.set(modalContext.key, modalElement);\r\n\r\n\t\t\t// If any of the modals are fillBackground, set the fillBackground property to true\r\n\t\t\tif (modalContext.backdropBackground) {\r\n\t\t\t\tthis.fillBackground = true;\r\n\t\t\t\tthis.shadowRoot\r\n\t\t\t\t\t?.getElementById('container')\r\n\t\t\t\t\t?.style.setProperty('--backdrop-background', modalContext.backdropBackground);\r\n\t\t\t}\r\n\r\n\t\t\tthis.requestUpdate('_modalElementMap');\r\n\t\t});\r\n\t}\r\n\r\n\t#onCloseEnd(key: string) {\r\n\t\tthis._modalManager?.remove(key);\r\n\t}\r\n\r\n\t#renderModal(key: string) {\r\n\t\tconst modalElement = this._modalElementMap.get(key);\r\n\t\tif (!modalElement) return nothing;\r\n\r\n\t\treturn modalElement.render();\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<uui-modal-container id=\"container\">\r\n\t\t\t\t${this._modals.length > 0\r\n\t\t\t\t\t? repeat(\r\n\t\t\t\t\t\t\tthis._modals,\r\n\t\t\t\t\t\t\t(modal) => modal.key,\r\n\t\t\t\t\t\t\t(modal) => this.#renderModal(modal.key),\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t: ''}\r\n\t\t\t</uui-modal-container>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles: CSSResultGroup = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\tz-index: 1000;\r\n\t\t\t}\r\n\r\n\t\t\t:host([fill-background]) {\r\n\t\t\t\t--uui-modal-dialog-border-radius: 0;\r\n\t\t\t\t--uui-shadow-depth-5: 0;\r\n\t\t\t}\r\n\r\n\t\t\t:host([fill-background]) #container::after {\r\n\t\t\t\tbackground: var(--backdrop-background);\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-backoffice-modal-container': UmbBackofficeModalContainerElement;\r\n\t}\r\n}\r\n","import { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport type { CSSResultGroup } from '@umbraco-cms/backoffice/external/lit';\r\nimport { css, html, customElement, state, repeat, query } from '@umbraco-cms/backoffice/external/lit';\r\nimport type { UmbNotificationHandler, UmbNotificationContext } from '@umbraco-cms/backoffice/notification';\r\nimport { UMB_NOTIFICATION_CONTEXT } from '@umbraco-cms/backoffice/notification';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\n\r\n@customElement('umb-backoffice-notification-container')\r\nexport class UmbBackofficeNotificationContainerElement extends UmbLitElement {\r\n\t@query('#notifications')\r\n\tprivate _notificationsElement?: HTMLElement;\r\n\r\n\t@state()\r\n\tprivate _notifications?: UmbNotificationHandler[];\r\n\r\n\tprivate _notificationContext?: UmbNotificationContext;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.consumeContext(UMB_NOTIFICATION_CONTEXT, (instance) => {\r\n\t\t\tthis._notificationContext = instance;\r\n\t\t\tthis._observeNotifications();\r\n\t\t});\r\n\t}\r\n\r\n\tprivate _observeNotifications() {\r\n\t\tif (!this._notificationContext) return;\r\n\r\n\t\tthis.observe(this._notificationContext.notifications, (notifications) => {\r\n\t\t\tthis._notifications = notifications;\r\n\r\n\t\t\t// Close and instantly open the popover again to make sure it stays on top of all other content on the page\r\n\t\t\t// TODO: This ignorer is just needed for JSON SCHEMA TO WORK, As its not updated with latest TS jet.\r\n\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n\t\t\t// @ts-ignore\r\n\t\t\tthis._notificationsElement?.hidePopover?.(); // To prevent issues in FireFox I added `?.` before `()`  [NL]\r\n\t\t\t// TODO: This ignorer is just needed for JSON SCHEMA TO WORK, As its not updated with latest TS jet.\r\n\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n\t\t\t// @ts-ignore\r\n\t\t\tthis._notificationsElement?.showPopover?.(); // To prevent issues in FireFox I added `?.` before `()`  [NL]\r\n\t\t});\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<uui-toast-notification-container bottom-up id=\"notifications\" popover=\"manual\">\r\n\t\t\t\t${this._notifications\r\n\t\t\t\t\t? repeat(\r\n\t\t\t\t\t\t\tthis._notifications,\r\n\t\t\t\t\t\t\t(notification: UmbNotificationHandler) => notification.key,\r\n\t\t\t\t\t\t\t(notification) => html`${notification.element}`,\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t: ''}\r\n\t\t\t</uui-toast-notification-container>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles: CSSResultGroup = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t#notifications {\r\n\t\t\t\ttop: 0;\r\n\t\t\t\tleft: 0;\r\n\t\t\t\tright: 0;\r\n\t\t\t\tbottom: 45px;\r\n\t\t\t\theight: auto;\r\n\t\t\t\tpadding: var(--uui-size-layout-1);\r\n\r\n\t\t\t\tposition: fixed;\r\n\t\t\t\twidth: 100vw;\r\n\t\t\t\tbackground: 0;\r\n\t\t\t\toutline: 0;\r\n\t\t\t\tborder: 0;\r\n\t\t\t\tmargin: 0;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-backoffice-notification-container': UmbBackofficeNotificationContainerElement;\r\n\t}\r\n}\r\n","import { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport {\r\n\tcss,\r\n\thtml,\r\n\tLitElement,\r\n\tnothing,\r\n\tcustomElement,\r\n\tproperty,\r\n\tstate,\r\n\tquery,\r\n} from '@umbraco-cms/backoffice/external/lit';\r\n\r\n//TODO: Add the following attributes to JSDocs: header-transparent, main-no-padding, header-no-padding, header-fit-height\r\n\r\n/**\r\n * @element umb-body-layout\r\n * @description Layout element to arrange elements in a body layout. A general layout for most views.\r\n * @slot - Slot for main content\r\n * @slot icon - Slot for icon\r\n * @slot name - Slot for name\r\n * @slot header - Slot for header element\r\n * @slot footer - Slot for footer element\r\n * @slot footer-info - Slot for info in the footer\r\n * @slot actions - Slot for actions in the footer\r\n * @slot default - slot for main content\r\n * @class UmbBodyLayout\r\n * @augments {UmbLitElement}\r\n */\r\n@customElement('umb-body-layout')\r\nexport class UmbBodyLayoutElement extends LitElement {\r\n\t@query('#main')\r\n\tprivate _scrollContainer?: HTMLElement;\r\n\r\n\t@property()\r\n\tpublic headline = '';\r\n\r\n\t@property({ type: Boolean, reflect: true, attribute: 'header-transparent' })\r\n\tpublic headerTransparent = false;\r\n\r\n\t@property({ type: Boolean })\r\n\tloading = false;\r\n\r\n\t@state()\r\n\tprivate _headerSlotHasChildren = false;\r\n\r\n\t@state()\r\n\tprivate _navigationSlotHasChildren = false;\r\n\r\n\t@state()\r\n\tprivate _actionsMenuSlotHasChildren = false;\r\n\r\n\t@state()\r\n\tprivate _footerSlotHasChildren = false;\r\n\r\n\t@state()\r\n\tprivate _actionsSlotHasChildren = false;\r\n\r\n\t#hasNodes = (e: Event) => {\r\n\t\treturn (e.target as HTMLSlotElement).assignedNodes({ flatten: true }).length > 0;\r\n\t};\r\n\r\n\toverride connectedCallback(): void {\r\n\t\tsuper.connectedCallback();\r\n\t\tif (this.headerTransparent) {\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\tthis._scrollContainer?.addEventListener('scroll', this.#onScroll);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\toverride disconnectedCallback(): void {\r\n\t\tsuper.disconnectedCallback();\r\n\t\tthis._scrollContainer?.removeEventListener('scroll', this.#onScroll);\r\n\t}\r\n\r\n\t#onScroll = () => {\r\n\t\tif (!this._scrollContainer) return;\r\n\t\tthis.toggleAttribute('scrolling', this._scrollContainer.scrollTop > 0);\r\n\t};\r\n\r\n\t#setSlotVisibility(target: HTMLElement, hasChildren: boolean) {\r\n\t\ttarget.style.display = hasChildren ? 'flex' : 'none';\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<div\r\n\t\t\t\tid=\"header\"\r\n\t\t\t\tstyle=\"display: ${this.headline ||\r\n\t\t\t\tthis._headerSlotHasChildren ||\r\n\t\t\t\tthis._actionsMenuSlotHasChildren ||\r\n\t\t\t\tthis._navigationSlotHasChildren\r\n\t\t\t\t\t? ''\r\n\t\t\t\t\t: 'none'}\">\r\n\t\t\t\t${this.headline ? html`<h3 id=\"headline\">${this.headline}</h3>` : nothing}\r\n\r\n\t\t\t\t<slot\r\n\t\t\t\t\tid=\"header-slot\"\r\n\t\t\t\t\tname=\"header\"\r\n\t\t\t\t\t@slotchange=${(e: Event) => {\r\n\t\t\t\t\t\tthis._headerSlotHasChildren = this.#hasNodes(e);\r\n\t\t\t\t\t\tthis.#setSlotVisibility(e.target as HTMLElement, this._headerSlotHasChildren);\r\n\t\t\t\t\t}}></slot>\r\n\t\t\t\t<slot\r\n\t\t\t\t\tid=\"navigation-slot\"\r\n\t\t\t\t\tname=\"navigation\"\r\n\t\t\t\t\t@slotchange=${(e: Event) => {\r\n\t\t\t\t\t\tthis._navigationSlotHasChildren = this.#hasNodes(e);\r\n\t\t\t\t\t\tthis.#setSlotVisibility(e.target as HTMLElement, this._navigationSlotHasChildren);\r\n\t\t\t\t\t}}></slot>\r\n\t\t\t\t<slot\r\n\t\t\t\t\tid=\"action-menu-slot\"\r\n\t\t\t\t\tname=\"action-menu\"\r\n\t\t\t\t\t@slotchange=${(e: Event) => {\r\n\t\t\t\t\t\tthis._actionsMenuSlotHasChildren = this.#hasNodes(e);\r\n\t\t\t\t\t\tthis.#setSlotVisibility(e.target as HTMLElement, this._actionsMenuSlotHasChildren);\r\n\t\t\t\t\t}}></slot>\r\n\t\t\t</div>\r\n\r\n\t\t\t<!-- This div should be changed for the uui-scroll-container when it gets updated -->\r\n\t\t\t<div id=\"main\">\r\n\t\t\t\t${this.loading ? html`<uui-loader-bar></uui-loader-bar>` : nothing}\r\n\t\t\t\t<slot></slot>\r\n\t\t\t</div>\r\n\r\n\t\t\t<slot name=\"footer\"></slot>\r\n\t\t\t<umb-footer-layout style=\"display:${this._footerSlotHasChildren || this._actionsSlotHasChildren ? '' : 'none'}\">\r\n\t\t\t\t<slot\r\n\t\t\t\t\tname=\"footer-info\"\r\n\t\t\t\t\t@slotchange=${(e: Event) => {\r\n\t\t\t\t\t\tthis._footerSlotHasChildren = this.#hasNodes(e);\r\n\t\t\t\t\t}}></slot>\r\n\t\t\t\t<slot\r\n\t\t\t\t\tname=\"actions\"\r\n\t\t\t\t\tslot=\"actions\"\r\n\t\t\t\t\t@slotchange=${(e: Event) => {\r\n\t\t\t\t\t\tthis._actionsSlotHasChildren = this.#hasNodes(e);\r\n\t\t\t\t\t}}></slot>\r\n\t\t\t</umb-footer-layout>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tbackground-color: var(--umb-body-layout-color-background, var(--uui-color-background));\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\theight: 100%;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t}\r\n\r\n\t\t\t#header {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tjustify-content: space-between;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\theight: var(--umb-header-layout-height);\r\n\t\t\t\tbackground-color: var(--uui-color-surface);\r\n\t\t\t\tborder-bottom: 1px solid var(--uui-color-border);\r\n\t\t\t\tbox-sizing: border-box;\r\n\t\t\t\tz-index: 1;\r\n\t\t\t}\r\n\t\t\t:host([header-transparent]) #header {\r\n\t\t\t\tbackground-color: transparent;\r\n\t\t\t\tborder-color: transparent;\r\n\t\t\t\ttransition: box-shadow 150ms ease-in-out;\r\n\t\t\t\tbox-shadow: 0 -1px 0px 0px rgba(0, 0, 0, 0.5);\r\n\t\t\t}\r\n\t\t\t:host([header-transparent][scrolling]) #header {\r\n\t\t\t\t/* This should be using the uui-shadows but for now they are too drastic for this use case */\r\n\t\t\t\tbox-shadow: 0 1px 15px 0 rgba(0, 0, 0, 0.2);\r\n\t\t\t}\r\n\t\t\t:host([header-fit-height][header-transparent]:not([header-no-padding])) #header-slot {\r\n\t\t\t\tpadding: var(--uui-size-layout-1);\r\n\t\t\t}\r\n\t\t\t:host([header-fit-height]) #header {\r\n\t\t\t\theight: fit-content;\r\n\t\t\t}\r\n\t\t\t#header-slot {\r\n\t\t\t\tpadding: 0 var(--uui-size-layout-1);\r\n\t\t\t\tflex-grow: 1;\r\n\t\t\t}\r\n\t\t\t:host([header-no-padding]) #header-slot {\r\n\t\t\t\tpadding: 0;\r\n\t\t\t}\r\n\r\n\t\t\t:host([header-transparent]:not([main-no-padding])) #main:not(*[style='display: none'] + *) {\r\n\t\t\t\t/* The following styling is only applied if the clear-header IS present,\r\n\t\t\t\tthe main-no-padding attribute is NOT present, and the header is NOT hidden */\r\n\t\t\t\tpadding-top: var(--uui-size-space-1);\r\n\t\t\t}\r\n\t\t\t:host([main-no-padding]) #main {\r\n\t\t\t\tpadding: 0;\r\n\t\t\t}\r\n\r\n\t\t\t#header-slot,\r\n\t\t\t#action-menu-slot,\r\n\t\t\t#navigation-slot {\r\n\t\t\t\tdisplay: none;\r\n\t\t\t\theight: 100%;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tbox-sizing: border-box;\r\n\t\t\t\tmin-width: 0;\r\n\t\t\t}\r\n\r\n\t\t\t#navigation-slot {\r\n\t\t\t\tmargin-left: auto;\r\n\t\t\t}\r\n\r\n\t\t\t#headline {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\tmargin: 0 var(--uui-size-layout-1);\r\n\t\t\t}\r\n\r\n\t\t\t#main {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\tflex: 1;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t\toverflow-y: auto;\r\n\t\t\t\tpadding: var(--uui-size-layout-1);\r\n\t\t\t}\r\n\r\n\t\t\t#main > slot::slotted(*:first-child) {\r\n\t\t\t\tpadding-top: 0;\r\n\t\t\t\tmargin-top: 0;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-body-layout': UmbBodyLayoutElement;\r\n\t}\r\n}\r\n","import { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport { css, customElement, html, property, state, when, LitElement } from '@umbraco-cms/backoffice/external/lit';\r\n\r\n//TODO consider adding a highlight prop to the code block, that could spin up/access monaco instance and highlight the code\r\n\r\n/**\r\n *  A simple styled box for showing code-based error messages or blocks od code.\r\n *  @slot - the default slot where the full message resides\r\n */\r\n@customElement('umb-code-block')\r\nexport class UmbCodeBlockElement extends LitElement {\r\n\t@property()\r\n\tlanguage = '';\r\n\r\n\t@property({ type: Boolean })\r\n\tcopy = false;\r\n\r\n\t@state()\r\n\tprivate _copyState: 'idle' | 'success' = 'idle';\r\n\r\n\tasync copyCode() {\r\n\t\tconst text = this.textContent;\r\n\t\tif (text) {\r\n\t\t\tawait navigator.clipboard.writeText(text);\r\n\t\t\tthis._copyState = 'success';\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis._copyState = 'idle';\r\n\t\t\t}, 2000);\r\n\t\t}\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t${this.#renderHeader()}\r\n\t\t\t<pre><uui-scroll-container><code><slot></slot></code></uui-scroll-container></pre>\r\n\t\t`; // Avoid breaks between elements of <pre></pre>\r\n\t}\r\n\r\n\t#renderHeader() {\r\n\t\tif (!this.language && !this.copy) return;\r\n\t\treturn html`\r\n\t\t\t<div id=\"header\">\r\n\t\t\t\t<span id=\"lang\">${this.language}</span>\r\n\t\t\t\t${when(\r\n\t\t\t\t\tthis.copy,\r\n\t\t\t\t\t() => html`\r\n\t\t\t\t\t\t<uui-button color=${this._copyState === 'idle' ? 'default' : 'positive'} @click=${this.copyCode}>\r\n\t\t\t\t\t\t\t${when(\r\n\t\t\t\t\t\t\t\tthis._copyState === 'idle',\r\n\t\t\t\t\t\t\t\t() => html`<uui-icon name=\"copy\"></uui-icon> <umb-localize key=\"general_copy\">Copy</umb-localize>`,\r\n\t\t\t\t\t\t\t\t() =>\r\n\t\t\t\t\t\t\t\t\thtml`<uui-icon name=\"check\"></uui-icon> <umb-localize key=\"general_copied\">Copied!</umb-localize>`,\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</uui-button>\r\n\t\t\t\t\t`,\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override readonly styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\tborder: 1px solid var(--uui-color-divider-emphasis);\r\n\t\t\t\tborder-radius: var(--uui-border-radius);\r\n\t\t\t}\r\n\r\n\t\t\tuui-scroll-container {\r\n\t\t\t\toverflow-y: auto;\r\n\t\t\t\toverflow-wrap: anywhere;\r\n\t\t\t}\r\n\r\n\t\t\tpre {\r\n\t\t\t\tfont-family: monospace;\r\n\t\t\t\tbackground-color: var(--uui-color-surface-alt);\r\n\t\t\t\tcolor: #303033;\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\tmargin: 0;\r\n\t\t\t\toverflow-x: auto;\r\n\t\t\t\tpadding: 9.5px;\r\n\t\t\t}\r\n\r\n\t\t\tpre,\r\n\t\t\tcode {\r\n\t\t\t\tword-wrap: normal;\r\n\t\t\t\twhite-space: pre;\r\n\t\t\t}\r\n\r\n\t\t\t#header {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tjustify-content: space-between;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tbackground-color: var(--uui-color-surface-alt);\r\n\t\t\t\tborder-bottom: 1px solid var(--uui-color-divider-emphasis);\r\n\t\t\t}\r\n\r\n\t\t\t#lang {\r\n\t\t\t\tmargin-left: 16px;\r\n\t\t\t\tfont-weight: bold;\r\n\t\t\t}\r\n\r\n\t\t\tbutton {\r\n\t\t\t\tfont-family: inherit;\r\n\t\t\t\tpadding: 6px 16px;\r\n\t\t\t\tbackground-color: transparent;\r\n\t\t\t\tborder: none;\r\n\t\t\t\tborder-left: 1px solid var(--uui-color-divider-emphasis);\r\n\t\t\t\tborder-radius: 0;\r\n\t\t\t\tcolor: #000;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tgap: 8px;\r\n\t\t\t}\r\n\r\n\t\t\tbutton:hover {\r\n\t\t\t\tbackground-color: var(--uui-color-surface-emphasis);\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-code-block': UmbCodeBlockElement;\r\n\t}\r\n}\r\n","import type {\r\n\tUUIInterfaceColor,\r\n\tUUIInterfaceLook,\r\n\tPopoverContainerPlacement,\r\n\tUUIPopoverContainerElement,\r\n} from '@umbraco-cms/backoffice/external/uui';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport type { PropertyValueMap } from '@umbraco-cms/backoffice/external/lit';\r\nimport { css, html, customElement, property, query, when } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\n\r\n// TODO: maybe move this to UI Library.\r\n@customElement('umb-dropdown')\r\nexport class UmbDropdownElement extends UmbLitElement {\r\n\t@query('#dropdown-popover')\r\n\tpopoverContainerElement?: UUIPopoverContainerElement;\r\n\t@property({ type: Boolean, reflect: true })\r\n\topen = false;\r\n\r\n\t@property()\r\n\tlabel = '';\r\n\r\n\t@property()\r\n\tlook: UUIInterfaceLook = 'default';\r\n\r\n\t@property()\r\n\tcolor: UUIInterfaceColor = 'default';\r\n\r\n\t@property()\r\n\tplacement: PopoverContainerPlacement = 'bottom-start';\r\n\r\n\t@property({ type: Boolean })\r\n\tcompact = false;\r\n\r\n\t@property({ type: Boolean, attribute: 'hide-expand' })\r\n\thideExpand = false;\r\n\r\n\tprotected override updated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\r\n\t\tsuper.updated(_changedProperties);\r\n\t\tif (_changedProperties.has('open') && this.popoverContainerElement) {\r\n\t\t\tif (this.open) {\r\n\t\t\t\t// TODO: This ignorer is just needed for JSON SCHEMA TO WORK, As its not updated with latest TS jet.\r\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tthis.popoverContainerElement.showPopover();\r\n\t\t\t} else {\r\n\t\t\t\t// TODO: This ignorer is just needed for JSON SCHEMA TO WORK, As its not updated with latest TS jet.\r\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tthis.popoverContainerElement.hidePopover();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t#onToggle(event: ToggleEvent) {\r\n\t\t// TODO: This ignorer is just needed for JSON SCHEMA TO WORK, As its not updated with latest TS jet.\r\n\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n\t\t// @ts-ignore\r\n\t\tthis.open = event.newState === 'open';\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<uui-button\r\n\t\t\t\tid=\"dropdown-button\"\r\n\t\t\t\tpopovertarget=\"dropdown-popover\"\r\n\t\t\t\t.look=${this.look}\r\n\t\t\t\t.color=${this.color}\r\n\t\t\t\t.label=${this.label}\r\n\t\t\t\t.compact=${this.compact}>\r\n\t\t\t\t<slot name=\"label\"></slot>\r\n\t\t\t\t${when(\r\n\t\t\t\t\t!this.hideExpand,\r\n\t\t\t\t\t() => html`<uui-symbol-expand id=\"symbol-expand\" .open=${this.open}></uui-symbol-expand>`,\r\n\t\t\t\t)}\r\n\t\t\t</uui-button>\r\n\t\t\t<uui-popover-container id=\"dropdown-popover\" .placement=${this.placement} @toggle=${this.#onToggle}>\r\n\t\t\t\t<umb-popover-layout>\r\n\t\t\t\t\t<slot></slot>\r\n\t\t\t\t</umb-popover-layout>\r\n\t\t\t</uui-popover-container>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t#dropdown-button {\r\n\t\t\t\tmin-width: max-content;\r\n\t\t\t}\r\n\t\t\t:host(:not([hide-expand]):not([compact])) #dropdown-button {\r\n\t\t\t\t--uui-button-padding-right-factor: 2;\r\n\t\t\t}\r\n\r\n\t\t\t:host(:not([compact])) #symbol-expand {\r\n\t\t\t\tmargin-left: var(--uui-size-space-2);\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-dropdown': UmbDropdownElement;\r\n\t}\r\n}\r\n","import { UmbEntityContext } from '../../entity/entity.context.js';\r\nimport type { UmbEntityAction, ManifestEntityActionDefaultKind } from '@umbraco-cms/backoffice/entity-action';\r\nimport type { PropertyValueMap } from '@umbraco-cms/backoffice/external/lit';\r\nimport { html, nothing, customElement, property, state, ifDefined } from '@umbraco-cms/backoffice/external/lit';\r\nimport type { UmbSectionSidebarContext } from '@umbraco-cms/backoffice/section';\r\nimport { UMB_SECTION_SIDEBAR_CONTEXT } from '@umbraco-cms/backoffice/section';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { umbExtensionsRegistry } from '@umbraco-cms/backoffice/extension-registry';\r\nimport { UmbExtensionsManifestInitializer, createExtensionApi } from '@umbraco-cms/backoffice/extension-api';\r\n\r\n@customElement('umb-entity-actions-bundle')\r\nexport class UmbEntityActionsBundleElement extends UmbLitElement {\r\n\t@property({ type: String, attribute: 'entity-type' })\r\n\tentityType?: string;\r\n\r\n\t@property({ type: String })\r\n\tunique?: string | null;\r\n\r\n\t@property({ type: String })\r\n\tpublic label?: string;\r\n\r\n\t@state()\r\n\tprivate _numberOfActions = 0;\r\n\r\n\t@state()\r\n\tprivate _firstActionManifest?: ManifestEntityActionDefaultKind;\r\n\r\n\t@state()\r\n\tprivate _firstActionApi?: UmbEntityAction<unknown>;\r\n\r\n\t@state()\r\n\tprivate _firstActionHref?: string;\r\n\r\n\t@state()\r\n\t_dropdownIsOpen = false;\r\n\r\n\t#sectionSidebarContext?: UmbSectionSidebarContext;\r\n\r\n\t// TODO: provide the entity context on a higher level, like the root element of this entity, tree-item/workspace/... [NL]\r\n\t#entityContext = new UmbEntityContext(this);\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.consumeContext(UMB_SECTION_SIDEBAR_CONTEXT, (sectionContext) => {\r\n\t\t\tthis.#sectionSidebarContext = sectionContext;\r\n\t\t});\r\n\t}\r\n\r\n\tprotected override updated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\r\n\t\tif (_changedProperties.has('entityType') && _changedProperties.has('unique')) {\r\n\t\t\tthis.#entityContext.setEntityType(this.entityType);\r\n\t\t\tthis.#entityContext.setUnique(this.unique ?? null);\r\n\t\t\tthis.#observeEntityActions();\r\n\t\t}\r\n\t}\r\n\r\n\t#observeEntityActions() {\r\n\t\tnew UmbExtensionsManifestInitializer(\r\n\t\t\tthis,\r\n\t\t\tumbExtensionsRegistry,\r\n\t\t\t'entityAction',\r\n\t\t\t(ext) => ext.forEntityTypes.includes(this.entityType!),\r\n\t\t\tasync (actions) => {\r\n\t\t\t\tthis._numberOfActions = actions.length;\r\n\t\t\t\tthis._firstActionManifest =\r\n\t\t\t\t\tthis._numberOfActions > 0 ? (actions[0].manifest as ManifestEntityActionDefaultKind) : undefined;\r\n\t\t\t\tthis.#createFirstActionApi();\r\n\t\t\t},\r\n\t\t\t'umbEntityActionsObserver',\r\n\t\t);\r\n\t}\r\n\r\n\tasync #createFirstActionApi() {\r\n\t\tif (!this._firstActionManifest) return;\r\n\t\tthis._firstActionApi = await createExtensionApi(this, this._firstActionManifest, [\r\n\t\t\t{ unique: this.unique, entityType: this.entityType, meta: this._firstActionManifest.meta },\r\n\t\t]);\r\n\r\n\t\tthis._firstActionHref = await this._firstActionApi?.getHref();\r\n\t}\r\n\r\n\t#openContextMenu() {\r\n\t\tif (!this.entityType) throw new Error('Entity type is not defined');\r\n\t\tif (this.unique === undefined) throw new Error('Unique is not defined');\r\n\r\n\t\tif (this.#sectionSidebarContext) {\r\n\t\t\tthis.#sectionSidebarContext.toggleContextMenu(this, {\r\n\t\t\t\tentityType: this.entityType,\r\n\t\t\t\tunique: this.unique,\r\n\t\t\t\theadline: this.label,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis._dropdownIsOpen = !this._dropdownIsOpen;\r\n\t\t}\r\n\t}\r\n\r\n\tasync #onFirstActionClick(event: PointerEvent) {\r\n\t\tthis.#sectionSidebarContext?.closeContextMenu();\r\n\r\n\t\t// skip if href is defined\r\n\t\tif (this._firstActionHref) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tevent.stopPropagation();\r\n\t\tawait this._firstActionApi?.execute();\r\n\t}\r\n\r\n\t#onActionExecuted() {\r\n\t\tthis._dropdownIsOpen = false;\r\n\t}\r\n\r\n\t#onDropdownClick(event: Event) {\r\n\t\tevent.stopPropagation();\r\n\t}\r\n\r\n\toverride render() {\r\n\t\tif (this._numberOfActions === 0) return nothing;\r\n\t\treturn html`<uui-action-bar slot=\"actions\">${this.#renderMore()} ${this.#renderFirstAction()} </uui-action-bar>`;\r\n\t}\r\n\r\n\t#renderMore() {\r\n\t\tif (this._numberOfActions === 1) return nothing;\r\n\r\n\t\tif (this.#sectionSidebarContext) {\r\n\t\t\treturn html`<uui-button @click=${this.#openContextMenu} label=\"Open actions menu\">\r\n\t\t\t\t<uui-symbol-more></uui-symbol-more>\r\n\t\t\t</uui-button>`;\r\n\t\t}\r\n\r\n\t\treturn html`\r\n\t\t\t<umb-dropdown .open=${this._dropdownIsOpen} @click=${this.#onDropdownClick} compact hide-expand>\r\n\t\t\t\t<uui-symbol-more slot=\"label\"></uui-symbol-more>\r\n\t\t\t\t<umb-entity-action-list\r\n\t\t\t\t\t@action-executed=${this.#onActionExecuted}\r\n\t\t\t\t\t.entityType=${this.entityType}\r\n\t\t\t\t\t.unique=${this.unique}></umb-entity-action-list>\r\n\t\t\t</umb-dropdown>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderFirstAction() {\r\n\t\tif (!this._firstActionApi) return nothing;\r\n\t\treturn html`<uui-button\r\n\t\t\tlabel=${ifDefined(this._firstActionManifest?.meta.label)}\r\n\t\t\t@click=${this.#onFirstActionClick}\r\n\t\t\thref=\"${ifDefined(this._firstActionHref)}\">\r\n\t\t\t<uui-icon name=${ifDefined(this._firstActionManifest?.meta.icon)}></uui-icon>\r\n\t\t</uui-button>`;\r\n\t}\r\n}\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-entity-actions-bundle': UmbEntityActionsBundleElement;\r\n\t}\r\n}\r\n","import { css, html, LitElement, customElement } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\n\r\n/**\r\n * @element umb-footer-layout\r\n * @description\r\n * @slot default - Slot footer items\r\n * @slot actions - Slot actions\r\n * @class UmbFooterLayout\r\n * @augments {UmbLitElement}\r\n */\r\n@customElement('umb-footer-layout')\r\nexport class UmbFooterLayoutElement extends LitElement {\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<slot></slot>\r\n\t\t\t<slot id=\"actions\" name=\"actions\"></slot>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tjustify-content: space-between;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\theight: var(--umb-footer-layout-height);\r\n\t\t\t\tborder-top: 1px solid var(--uui-color-border);\r\n\t\t\t\tbackground-color: var(--uui-color-surface);\r\n\t\t\t\tbox-sizing: border-box;\r\n\t\t\t}\r\n\r\n\t\t\t#actions {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tgap: var(--uui-size-space-2);\r\n\t\t\t\tmargin: 0 var(--uui-size-layout-1);\r\n\t\t\t\tmargin-left: auto;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-footer-layout': UmbFooterLayoutElement;\r\n\t}\r\n}\r\n","import { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport type { CSSResultGroup } from '@umbraco-cms/backoffice/external/lit';\r\nimport { css, html, customElement, ifDefined } from '@umbraco-cms/backoffice/external/lit';\r\nimport type { ManifestHeaderAppButtonKind, UmbExtensionManifestKind } from '@umbraco-cms/backoffice/extension-registry';\r\nimport { umbExtensionsRegistry } from '@umbraco-cms/backoffice/extension-registry';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\n\r\nconst manifest: UmbExtensionManifestKind = {\r\n\ttype: 'kind',\r\n\talias: 'Umb.Kind.Button',\r\n\tmatchKind: 'button',\r\n\tmatchType: 'headerApp',\r\n\tmanifest: {\r\n\t\ttype: 'headerApp',\r\n\t\tkind: 'button',\r\n\t\telementName: 'umb-header-app-button',\r\n\t},\r\n};\r\numbExtensionsRegistry.register(manifest);\r\n\r\n@customElement('umb-header-app-button')\r\nexport class UmbHeaderAppButtonElement extends UmbLitElement {\r\n\tpublic manifest?: ManifestHeaderAppButtonKind;\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<uui-button\r\n\t\t\t\tlook=\"primary\"\r\n\t\t\t\tlabel=\"${ifDefined(this.manifest?.meta.label)}\"\r\n\t\t\t\thref=\"${ifDefined(this.manifest?.meta.href)}\"\r\n\t\t\t\tcompact>\r\n\t\t\t\t<umb-icon name=\"${ifDefined(this.manifest?.meta.icon)}\"></umb-icon>\r\n\t\t\t</uui-button>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles: CSSResultGroup = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\tuui-button {\r\n\t\t\t\tfont-size: 18px;\r\n\t\t\t\t--uui-button-background-color: var(--umb-header-app-button-background-color, transparent);\r\n\t\t\t\t--uui-button-background-color-hover: var(\r\n\t\t\t\t\t--umb-header-app-button-background-color-hover,\r\n\t\t\t\t\tvar(--uui-color-emphasis)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbHeaderAppButtonElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-header-app-button': UmbHeaderAppButtonElement;\r\n\t}\r\n}\r\n","import { css, html, customElement, property } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\n\r\n@customElement('umb-history-item')\r\nexport class UmbHistoryItemElement extends UmbLitElement {\r\n\t@property({ type: String })\r\n\tname?: string;\r\n\r\n\t@property({ type: String })\r\n\tdetail?: string;\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<div class=\"user-info\">\r\n\t\t\t\t<slot name=\"avatar\"></slot>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<span class=\"name\">${this.name}</span>\r\n\t\t\t\t\t<span class=\"detail\">${this.detail}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<slot id=\"description\"></slot>\r\n\t\t\t<slot id=\"actions-container\" name=\"actions\"></slot>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\t--avatar-size: calc(2em + 4px);\r\n\t\t\t\tdisplay: contents;\r\n\t\t\t}\r\n\r\n\t\t\tslot[name='actions'] {\r\n\t\t\t\t--uui-button-border-radius: 50px 50px 50px 50px;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\t--uui-button-height: calc(var(--uui-size-2) * 4);\r\n\t\t\t\tmargin-right: var(--uui-size-2);\r\n\t\t\t}\r\n\r\n\t\t\t#actions-container {\r\n\t\t\t\topacity: 0;\r\n\t\t\t\ttransition: opacity 120ms;\r\n\t\t\t}\r\n\r\n\t\t\t:host(:hover) #actions-container {\r\n\t\t\t\topacity: 1;\r\n\t\t\t}\r\n\r\n\t\t\t:host(:hover) #actions-container {\r\n\t\t\t\topacity: 1;\r\n\t\t\t}\r\n\r\n\t\t\t.user-info {\r\n\t\t\t\tposition: relative;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: flex-end;\r\n\t\t\t\tgap: var(--uui-size-space-5);\r\n\t\t\t}\r\n\r\n\t\t\t.user-info div {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t\tmin-width: var(--uui-size-60);\r\n\t\t\t}\r\n\r\n\t\t\t.detail {\r\n\t\t\t\tfont-size: var(--uui-size-4);\r\n\t\t\t\tcolor: var(--uui-color-text-alt);\r\n\t\t\t\tline-height: 1;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbHistoryItemElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-history-item': UmbHistoryItemElement;\r\n\t}\r\n}\r\n","import { css, html, customElement } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\n\r\n@customElement('umb-history-list')\r\nexport class UmbHistoryListElement extends UmbLitElement {\r\n\toverride render() {\r\n\t\treturn html`<slot></slot> `;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: grid;\r\n\t\t\t\tgrid-template-columns: auto 1fr auto;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\t--avatar-size: calc(2em + 4px);\r\n\t\t\t\tgap: var(--uui-size-6);\r\n\t\t\t\tposition: relative;\r\n\t\t\t}\r\n\r\n\t\t\t/** TODO: This doesn't work due to \"display:contents\" in umb-history-item, but is needed for the way I put the grid together.\r\n\t\t\t* Find a different solution so we can have the grey line that links each history item together (this is purely a visual effect, no rush)\r\n\r\n\t\t\t::slotted(*) {\r\n\t\t\t\tposition: relative;\r\n\t\t\t}\r\n\r\n\t\t\t::slotted(*:not(:last-child)) {\r\n\t\t\t\tmargin-bottom: calc(2 * var(--uui-size-space-3));\r\n\t\t\t}\r\n\t\t\t::slotted(*:not(:last-child))::before {\r\n\t\t\t\tcontent: '';\r\n\t\t\t\tborder: 1px solid var(--uui-color-border);\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\theight: calc(1.5 * var(--avatar-size));\r\n\t\t\t\ttop: var(--avatar-size);\r\n\t\t\t\tleft: calc(-1px + var(--avatar-size) / 2);\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbHistoryListElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-history-list': UmbHistoryListElement;\r\n\t}\r\n}\r\n","import { extractUmbColorVariable } from '../../resources/extractUmbColorVariable.function.js';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport { html, customElement, property, state, ifDefined, css, styleMap } from '@umbraco-cms/backoffice/external/lit';\r\nimport type { StyleInfo } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\n\r\n/**\r\n * @element umb-icon\r\n * @description A wrapper for the uui-icon component with color alias support\r\n * @augments {UmbLitElement}\r\n */\r\n@customElement('umb-icon')\r\nexport class UmbIconElement extends UmbLitElement {\r\n\t#color?: string;\r\n\t#fallbackColor?: string;\r\n\r\n\t@state()\r\n\tprivate _icon?: string;\r\n\r\n\t@state()\r\n\tprivate _style: StyleInfo = {};\r\n\r\n\t/**\r\n\t * Color alias or a color code directly.\\\r\n\t * If a color has been set via the name property, this property will override it.\r\n\t */\r\n\t@property({ type: String })\r\n\tpublic set color(value: string) {\r\n\t\tthis.#color = value;\r\n\t\tthis.#updateColorStyle();\r\n\t}\r\n\tpublic get color(): string | undefined {\r\n\t\treturn this.#color || this.#fallbackColor;\r\n\t}\r\n\r\n\t/**\r\n\t * The icon name. Can be appended with a color.\\\r\n\t * Example **icon-heart color-red**\r\n\t */\r\n\t@property({ type: String })\r\n\tpublic set name(value: string | undefined) {\r\n\t\tconst [icon, color] = value ? value.split(' ') : [];\r\n\t\tthis.#fallbackColor = color;\r\n\t\tthis._icon = icon;\r\n\t\tthis.#updateColorStyle();\r\n\t}\r\n\tpublic get name(): string | undefined {\r\n\t\treturn this._icon;\r\n\t}\r\n\r\n\t#updateColorStyle() {\r\n\t\tconst value = this.#color || this.#fallbackColor;\r\n\r\n\t\tif (!value) {\r\n\t\t\tthis._style = { '--uui-icon-color': 'inherit' };\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst color = value.replace('color-', '');\r\n\t\tconst variable = extractUmbColorVariable(color);\r\n\t\tconst styling = variable ? `var(${variable})` : color;\r\n\r\n\t\tthis._style = { '--uui-icon-color': styling };\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`<uui-icon name=${ifDefined(this._icon)} style=${styleMap(this._style)}></uui-icon>`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tjustify-content: center;\r\n\t\t\t\talign-items: center;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-icon': UmbIconElement;\r\n\t}\r\n}\r\n","import { html, customElement, property, css, state, nothing } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbChangeEvent } from '@umbraco-cms/backoffice/event';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport {\r\n\tUMB_DATATYPE_WORKSPACE_MODAL,\r\n\tUMB_DATA_TYPE_ENTITY_TYPE,\r\n\tUMB_DATA_TYPE_PICKER_FLOW_DATA_TYPE_PICKER_MODAL,\r\n} from '@umbraco-cms/backoffice/data-type';\r\nimport { UmbModalRouteRegistrationController } from '@umbraco-cms/backoffice/router';\r\nimport { UmbFormControlMixin } from '@umbraco-cms/backoffice/validation';\r\n\r\n@customElement('umb-input-collection-configuration')\r\nexport class UmbInputCollectionConfigurationElement extends UmbFormControlMixin<string, typeof UmbLitElement>(\r\n\tUmbLitElement,\r\n) {\r\n\tprotected override getFormElement() {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t#dataTypeModal;\r\n\r\n\t#propertyEditorUiAlias = 'Umb.PropertyEditorUi.Collection';\r\n\r\n\t@state()\r\n\tprivate _dataTypePickerModalPath?: string;\r\n\r\n\t@property({ attribute: 'default-value' })\r\n\tdefaultValue?: string;\r\n\r\n\t#setValue(value: string | undefined) {\r\n\t\tthis.value = value;\r\n\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tnew UmbModalRouteRegistrationController(this, UMB_DATA_TYPE_PICKER_FLOW_DATA_TYPE_PICKER_MODAL)\r\n\t\t\t.addAdditionalPath(':uiAlias')\r\n\t\t\t.onSetup((routingInfo) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tpropertyEditorUiAlias: routingInfo.uiAlias,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: undefined,\r\n\t\t\t\t};\r\n\t\t\t})\r\n\t\t\t.onSubmit((submitData) => {\r\n\t\t\t\tif (submitData?.createNewWithPropertyEditorUiAlias) {\r\n\t\t\t\t\tthis.#createDataType();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.#setValue(submitData?.dataTypeId ?? this.defaultValue ?? '');\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.observeRouteBuilder((routeBuilder) => {\r\n\t\t\t\tthis._dataTypePickerModalPath = routeBuilder({ uiAlias: this.#propertyEditorUiAlias });\r\n\t\t\t});\r\n\r\n\t\tthis.#dataTypeModal = new UmbModalRouteRegistrationController(this, UMB_DATATYPE_WORKSPACE_MODAL)\r\n\t\t\t.addAdditionalPath(':uiAlias')\r\n\t\t\t.onSetup((params) => {\r\n\t\t\t\treturn { data: { entityType: UMB_DATA_TYPE_ENTITY_TYPE, preset: { editorUiAlias: params.uiAlias } } };\r\n\t\t\t})\r\n\t\t\t.onSubmit((value) => {\r\n\t\t\t\tthis.#setValue(value?.unique ?? this.defaultValue ?? '');\r\n\t\t\t});\r\n\t}\r\n\r\n\t#clearDataType() {\r\n\t\tthis.#setValue(undefined);\r\n\t}\r\n\r\n\t#createDataType() {\r\n\t\tthis.#dataTypeModal.open(\r\n\t\t\t{ uiAlias: this.#propertyEditorUiAlias },\r\n\t\t\t`create/parent/${UMB_DATA_TYPE_ENTITY_TYPE}/null`,\r\n\t\t);\r\n\t}\r\n\r\n\t#editDataType() {\r\n\t\tthis.#dataTypeModal?.open({}, `edit/${this.value}`);\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn !this.value ? this.#renderCreate() : this.#renderConfigured();\r\n\t}\r\n\r\n\t#renderCreate() {\r\n\t\tif (!this._dataTypePickerModalPath) return nothing;\r\n\t\treturn html`\r\n\t\t\t<uui-button\r\n\t\t\t\tid=\"create-button\"\r\n\t\t\t\tcolor=\"default\"\r\n\t\t\t\tlook=\"placeholder\"\r\n\t\t\t\tlabel=${this.localize.term('collection_addCollectionConfiguration')}\r\n\t\t\t\thref=${this._dataTypePickerModalPath}></uui-button>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderConfigured() {\r\n\t\tif (!this.value || !this._dataTypePickerModalPath) return nothing;\r\n\t\treturn html`\r\n\t\t\t<uui-ref-list>\r\n\t\t\t\t<umb-ref-data-type standalone data-type-id=${this.value} @open=${this.#editDataType}>\r\n\t\t\t\t\t<uui-action-bar slot=\"actions\">\r\n\t\t\t\t\t\t<uui-button\r\n\t\t\t\t\t\t\tlabel=${this.localize.term('general_choose')}\r\n\t\t\t\t\t\t\thref=${this._dataTypePickerModalPath}></uui-button>\r\n\t\t\t\t\t\t<uui-button @click=${this.#clearDataType} label=${this.localize.term('general_remove')}></uui-button>\r\n\t\t\t\t\t</uui-action-bar>\r\n\t\t\t\t</umb-ref-data-type>\r\n\t\t\t</uui-ref-list>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tcss`\r\n\t\t\t#create-button {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbInputCollectionConfigurationElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-input-collection-configuration': UmbInputCollectionConfigurationElement;\r\n\t}\r\n}\r\n","import { html, customElement, property, map, nothing } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbChangeEvent } from '@umbraco-cms/backoffice/event';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UUIFormControlMixin } from '@umbraco-cms/backoffice/external/uui';\r\nimport type { UmbSwatchDetails } from '@umbraco-cms/backoffice/models';\r\nimport type { UUIColorSwatchesEvent } from '@umbraco-cms/backoffice/external/uui';\r\n\r\n/*\r\n * This wraps the UUI library uui-color-swatches component\r\n * @element umb-input-color\r\n */\r\n@customElement('umb-input-color')\r\nexport class UmbInputColorElement extends UUIFormControlMixin(UmbLitElement, '') {\r\n\tprotected override getFormElement() {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the input to readonly mode, meaning value cannot be changed but still able to read and select its content.\r\n\t * @attr\r\n\t * @default false\r\n\t */\r\n\t@property({ type: Boolean, reflect: true })\r\n\treadonly = false;\r\n\r\n\t@property({ type: Boolean })\r\n\tshowLabels = false;\r\n\r\n\t@property({ type: Array })\r\n\tswatches?: Array<UmbSwatchDetails>;\r\n\r\n\t#onChange(event: UUIColorSwatchesEvent) {\r\n\t\tthis.value = event.target.value;\r\n\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<uui-color-swatches\r\n\t\t\t\t?readonly=${this.readonly}\r\n\t\t\t\tlabel=\"Color picker\"\r\n\t\t\t\tvalue=${this.value ?? ''}\r\n\t\t\t\t@change=${this.#onChange}>\r\n\t\t\t\t${this.#renderColors()}\r\n\t\t\t</uui-color-swatches>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderColors() {\r\n\t\tif (!this.swatches) return nothing;\r\n\t\treturn map(\r\n\t\t\tthis.swatches,\r\n\t\t\t(swatch) => html`\r\n\t\t\t\t<uui-color-swatch label=${swatch.label} value=${swatch.value} .showLabel=${this.showLabels}></uui-color-swatch>\r\n\t\t\t`,\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default UmbInputColorElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-input-color': UmbInputColorElement;\r\n\t}\r\n}\r\n","import { customElement } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UUIInputElement } from '@umbraco-cms/backoffice/external/uui';\r\n\r\nexport type InputDateType = 'date' | 'time' | 'datetime-local';\r\n\r\n/**\r\n * This element passes a datetime string to a regular HTML input element.\r\n * Be aware that you cannot include a time demonination, i.e. \"10:44:00\" if you\r\n * set the input type of this element to \"date\". If you do, the browser will not show\r\n * the value at all.\r\n * @element umb-input-date\r\n */\r\n@customElement('umb-input-date')\r\nexport class UmbInputDateElement extends UUIInputElement {\r\n\t/**\r\n\t * Specifies the date and time type of the input that will be rendered.\r\n\t * @type {InputDateType}\r\n\t * @enum {InputDateType}\r\n\t */\r\n\toverride set type(type: InputDateType) {\r\n\t\tsuper.type = type;\r\n\t}\r\n\toverride get type(): InputDateType {\r\n\t\treturn super.type as InputDateType;\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.type = 'date'; // Default to 'date'\r\n\t}\r\n}\r\n\r\nexport default UmbInputDateElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-input-date': UmbInputDateElement;\r\n\t}\r\n}\r\n","import { css, html, customElement, property, query } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UUIFormControlMixin } from '@umbraco-cms/backoffice/external/uui';\r\nimport { UmbChangeEvent } from '@umbraco-cms/backoffice/event';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport type { UUISelectEvent } from '@umbraco-cms/backoffice/external/uui';\r\n\r\n@customElement('umb-input-dropdown-list')\r\nexport class UmbInputDropdownListElement extends UUIFormControlMixin(UmbLitElement, undefined) {\r\n\t@property({ type: Array })\r\n\tpublic options?: Array<Option>;\r\n\r\n\t@property({ type: String })\r\n\tpublic placeholder?: string;\r\n\r\n\t//TODO: show multiple lines when either a) uui-select has the option to do so or b) combobox has popover issue fixed and use this instead of uui-select.\r\n\t@property({ type: Boolean })\r\n\tpublic multiple?: boolean;\r\n\r\n\t/**\r\n\t * Sets the input to readonly mode, meaning value cannot be changed but still able to read and select its content.\r\n\t * @type {boolean}\r\n\t * @attr\r\n\t * @default false\r\n\t */\r\n\t@property({ type: Boolean, reflect: true })\r\n\treadonly = false;\r\n\r\n\t@query('uui-select')\r\n\tprivate selectEle!: HTMLInputElement;\r\n\r\n\tprotected override getFormElement() {\r\n\t\treturn this.selectEle;\r\n\t}\r\n\r\n\t#onChange(e: UUISelectEvent) {\r\n\t\te.stopPropagation();\r\n\t\tif (e.target.value) this.value = e.target.value;\r\n\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`<uui-select\r\n\t\t\tlabel=${this.localize.term('formProviderFieldTypes_dropdownName')}\r\n\t\t\t.placeholder=${this.placeholder ?? ''}\r\n\t\t\t.options=${this.options ?? []}\r\n\t\t\t@change=${this.#onChange}\r\n\t\t\t?readonly=${this.readonly}></uui-select>`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbInputDropdownListElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-input-dropdown-list': UmbInputDropdownListElement;\r\n\t}\r\n}\r\n","import { css, html, customElement, property, repeat, state, when } from '@umbraco-cms/backoffice/external/lit';\r\nimport { splitStringToArray } from '@umbraco-cms/backoffice/utils';\r\nimport { UmbChangeEvent } from '@umbraco-cms/backoffice/event';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UmbSorterController } from '@umbraco-cms/backoffice/sorter';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport type { UmbPickerInputContext } from '@umbraco-cms/backoffice/picker-input';\r\nimport type { UmbUniqueItemModel } from '@umbraco-cms/backoffice/models';\r\nimport { UmbFormControlMixin } from '@umbraco-cms/backoffice/validation';\r\n\r\n@customElement('umb-input-entity')\r\nexport class UmbInputEntityElement extends UmbFormControlMixin<string | undefined, typeof UmbLitElement>(\r\n\tUmbLitElement,\r\n) {\r\n\t#sorter = new UmbSorterController<string>(this, {\r\n\t\tgetUniqueOfElement: (element) => {\r\n\t\t\treturn element.id;\r\n\t\t},\r\n\t\tgetUniqueOfModel: (modelEntry) => {\r\n\t\t\treturn modelEntry;\r\n\t\t},\r\n\t\tidentifier: 'Umb.SorterIdentifier.InputEntity',\r\n\t\titemSelector: 'uui-ref-node',\r\n\t\tcontainerSelector: 'uui-ref-list',\r\n\t\tonChange: ({ model }) => {\r\n\t\t\tthis.selection = model;\r\n\t\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t\t},\r\n\t});\r\n\r\n\tprotected override getFormElement() {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t@property({ type: Number })\r\n\tpublic set min(value: number) {\r\n\t\tthis.#min = value;\r\n\t\tif (this.#pickerContext) {\r\n\t\t\tthis.#pickerContext.min = value;\r\n\t\t}\r\n\t}\r\n\tpublic get min(): number {\r\n\t\treturn this.#min;\r\n\t}\r\n\t#min: number = 0;\r\n\r\n\t@property({ type: String, attribute: 'min-message' })\r\n\tminMessage = 'This field need more items';\r\n\r\n\t@property({ type: Number })\r\n\tpublic set max(value: number) {\r\n\t\tthis.#max = value;\r\n\t\tif (this.#pickerContext) {\r\n\t\t\tthis.#pickerContext.max = value;\r\n\t\t}\r\n\t}\r\n\tpublic get max(): number {\r\n\t\treturn this.#max;\r\n\t}\r\n\t#max: number = Infinity;\r\n\r\n\t@property({ attribute: false })\r\n\tgetIcon?: (item: UmbUniqueItemModel) => string;\r\n\r\n\t@property({ type: String, attribute: 'min-message' })\r\n\tmaxMessage = 'This field exceeds the allowed amount of items';\r\n\r\n\t@property({ type: Array })\r\n\tpublic set selection(uniques: Array<string>) {\r\n\t\tthis.#pickerContext?.setSelection(uniques);\r\n\t\tthis.#sorter.setModel(uniques);\r\n\t}\r\n\tpublic get selection(): Array<string> {\r\n\t\treturn this.#pickerContext?.getSelection() ?? [];\r\n\t}\r\n\r\n\t@property({ type: String })\r\n\tpublic override set value(selectionString: string | undefined) {\r\n\t\tthis.selection = splitStringToArray(selectionString);\r\n\t}\r\n\tpublic override get value(): string | undefined {\r\n\t\treturn this.selection.length > 0 ? this.selection.join(',') : undefined;\r\n\t}\r\n\r\n\t@property({ attribute: false })\r\n\tpublic set pickerContext(ctor: (new (host: UmbControllerHost) => UmbPickerInputContext) | undefined) {\r\n\t\tif (this.#pickerContext) return;\r\n\t\tthis.#pickerContext = ctor ? new ctor(this) : undefined;\r\n\t\tthis.#observePickerContext();\r\n\t}\r\n\tpublic get pickerContext(): UmbPickerInputContext | undefined {\r\n\t\treturn this.#pickerContext;\r\n\t}\r\n\r\n\t@state()\r\n\tprivate _items?: Array<UmbUniqueItemModel>;\r\n\r\n\t#pickerContext?: UmbPickerInputContext;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.addValidator(\r\n\t\t\t'rangeUnderflow',\r\n\t\t\t() => this.minMessage,\r\n\t\t\t() => !!this.min && (this.#pickerContext?.getSelection().length ?? 0) < this.min,\r\n\t\t);\r\n\r\n\t\tthis.addValidator(\r\n\t\t\t'rangeOverflow',\r\n\t\t\t() => this.maxMessage,\r\n\t\t\t() => !!this.max && (this.#pickerContext?.getSelection().length ?? 0) > this.max,\r\n\t\t);\r\n\t}\r\n\r\n\tasync #observePickerContext() {\r\n\t\tif (!this.#pickerContext) return;\r\n\r\n\t\tthis.#pickerContext.min = this.min;\r\n\t\tthis.#pickerContext.max = this.max;\r\n\r\n\t\tthis.observe(this.#pickerContext.selection, (selection) => (this.value = selection.join(',')), '_observeSelection');\r\n\t\tthis.observe(this.#pickerContext.selectedItems, (selectedItems) => (this._items = selectedItems), '_observerItems');\r\n\t}\r\n\r\n\t#openPicker() {\r\n\t\tthis.#pickerContext?.openPicker({\r\n\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n\t\t\t// @ts-ignore\r\n\t\t\t// TODO: ignoring this for now to prevent breaking existing functionality.\r\n\t\t\t// if we want a very generic input it should be possible to pass in picker config\r\n\t\t\thideTreeRoot: true,\r\n\t\t});\r\n\t}\r\n\r\n\t#removeItem(item: UmbUniqueItemModel) {\r\n\t\tthis.#pickerContext?.requestRemoveItem(item.unique);\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`${this.#renderItems()} ${this.#renderAddButton()}`;\r\n\t}\r\n\r\n\t#renderAddButton() {\r\n\t\tif (this.max === 1 && this.selection && this.selection.length >= this.max) return;\r\n\t\treturn html`\r\n\t\t\t<uui-button\r\n\t\t\t\tid=\"btn-add\"\r\n\t\t\t\tlook=\"placeholder\"\r\n\t\t\t\t@click=${this.#openPicker}\r\n\t\t\t\tlabel=${this.localize.term('general_choose')}></uui-button>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderItems() {\r\n\t\tif (!this._items) return;\r\n\t\treturn html`\r\n\t\t\t<uui-ref-list>\r\n\t\t\t\t${repeat(\r\n\t\t\t\t\tthis._items,\r\n\t\t\t\t\t(item) => item.unique,\r\n\t\t\t\t\t(item) => this.#renderItem(item),\r\n\t\t\t\t)}\r\n\t\t\t</uui-ref-list>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderItem(item: UmbUniqueItemModel) {\r\n\t\tif (!item.unique) return;\r\n\t\tconst icon = this.getIcon?.(item) ?? item.icon ?? '';\r\n\t\treturn html`\r\n\t\t\t<uui-ref-node name=${item.name} id=${item.unique}>\r\n\t\t\t\t${when(icon, () => html`<umb-icon slot=\"icon\" name=${icon}></umb-icon>`)}\r\n\t\t\t\t<uui-action-bar slot=\"actions\">\r\n\t\t\t\t\t<uui-button @click=${() => this.#removeItem(item)} label=${this.localize.term('general_remove')}></uui-button>\r\n\t\t\t\t</uui-action-bar>\r\n\t\t\t</uui-ref-node>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tcss`\r\n\t\t\t#btn-add {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbInputEntityElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-input-entity': UmbInputEntityElement;\r\n\t}\r\n}\r\n","import { customElement, html, property, when } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbChangeEvent } from '@umbraco-cms/backoffice/event';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UUIFormControlMixin } from '@umbraco-cms/backoffice/external/uui';\r\nimport type { UUIColorPickerChangeEvent } from '@umbraco-cms/backoffice/external/uui';\r\n\r\n@customElement('umb-input-eye-dropper')\r\nexport class UmbInputEyeDropperElement extends UUIFormControlMixin(UmbLitElement, '') {\r\n\tprotected override getFormElement() {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t#onChange(e: UUIColorPickerChangeEvent) {\r\n\t\te.stopPropagation();\r\n\t\tthis.value = e.target.value;\r\n\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t}\r\n\r\n\t@property({ type: Boolean })\r\n\topacity = false;\r\n\r\n\t@property({ type: Boolean })\r\n\tshowPalette = false;\r\n\r\n\t@property({ type: Array })\r\n\tswatches?: string[];\r\n\r\n\t// HACK: Since `uui-color-picker` doesn't have an option to hide the swatches, we had to get creative.\r\n\t// Based on UUI v1.8.0-rc3, the value of `swatches` must be a falsey value to hide them.\r\n\t// https://github.com/umbraco/Umbraco.UI/blob/v1.8.0-rc.3/packages/uui-color-picker/lib/uui-color-picker.element.ts#L517\r\n\t// However, the object-type for `swatches` is a `string[]` (non-nullable).\r\n\t// https://github.com/umbraco/Umbraco.UI/blob/v1.8.0-rc.3/packages/uui-color-picker/lib/uui-color-picker.element.ts#L157\r\n\t// To do this, we must omit the `.swatches` attribute, otherwise the default swatches can't be used.\r\n\t// So, we've use a `when()` render both configurations. [LK]\r\n\r\n\toverride render() {\r\n\t\tconst swatches = this.showPalette ? this.swatches : undefined;\r\n\t\treturn when(\r\n\t\t\tthis.showPalette && !swatches,\r\n\t\t\t() => html`\r\n\t\t\t\t<uui-color-picker\r\n\t\t\t\t\tlabel=\"Eye dropper\"\r\n\t\t\t\t\t.opacity=${this.opacity}\r\n\t\t\t\t\t.value=${this.value as string}\r\n\t\t\t\t\t@change=${this.#onChange}>\r\n\t\t\t\t</uui-color-picker>\r\n\t\t\t`,\r\n\t\t\t() => html`\r\n\t\t\t\t<uui-color-picker\r\n\t\t\t\t\tlabel=\"Eye dropper\"\r\n\t\t\t\t\t.opacity=${this.opacity}\r\n\t\t\t\t\t.swatches=${swatches!}\r\n\t\t\t\t\t.value=${this.value as string}\r\n\t\t\t\t\t@change=${this.#onChange}>\r\n\t\t\t\t</uui-color-picker>\r\n\t\t\t`,\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default UmbInputEyeDropperElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-input-eye-dropper': UmbInputEyeDropperElement;\r\n\t}\r\n}\r\n","import { html, customElement, property, css } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbChangeEvent } from '@umbraco-cms/backoffice/event';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UMB_ITEM_PICKER_MODAL, UMB_MODAL_MANAGER_CONTEXT } from '@umbraco-cms/backoffice/modal';\r\nimport { umbExtensionsRegistry } from '@umbraco-cms/backoffice/extension-registry';\r\n\r\n@customElement('umb-input-manifest')\r\nexport class UmbInputManifestElement extends UmbLitElement {\r\n\t#extensions: Array<typeof umbExtensionsRegistry.MANIFEST_TYPES> = [];\r\n\r\n\t#extensionType?: string;\r\n\t@property({ type: String, attribute: 'extension-type' })\r\n\tpublic set extensionType(value: string | undefined) {\r\n\t\tthis.#extensionType = value;\r\n\t\tthis.#observeExtensions();\r\n\t}\r\n\tpublic get extensionType(): string | undefined {\r\n\t\treturn this.#extensionType;\r\n\t}\r\n\r\n\t@property({ attribute: false })\r\n\tvalue?: typeof UMB_ITEM_PICKER_MODAL.VALUE;\r\n\r\n\t@property({ type: Number })\r\n\tmax = Infinity;\r\n\r\n\t#observeExtensions() {\r\n\t\tif (!this.#extensionType) return;\r\n\t\tthis.observe(umbExtensionsRegistry.byType(this.#extensionType), (extensions) => {\r\n\t\t\tthis.#extensions = extensions.sort((a, b) => a.type.localeCompare(b.type) || a.alias.localeCompare(b.alias));\r\n\t\t});\r\n\t}\r\n\r\n\tasync #onClick() {\r\n\t\tconst modalManager = await this.getContext(UMB_MODAL_MANAGER_CONTEXT);\r\n\t\tconst modalContext = modalManager.open(this, UMB_ITEM_PICKER_MODAL, {\r\n\t\t\tdata: {\r\n\t\t\t\theadline: `${this.localize.term('general_choose')}...`,\r\n\t\t\t\titems: this.#extensions\r\n\t\t\t\t\t.filter((ext) => ext.type === this.extensionType)\r\n\t\t\t\t\t.map((ext) => ({\r\n\t\t\t\t\t\tlabel: ext.name,\r\n\t\t\t\t\t\tvalue: ext.alias,\r\n\t\t\t\t\t\tdescription: ext.alias,\r\n\t\t\t\t\t\ticon: (ext as any).meta?.icon, // HACK: Ugly way to get the icon. [LK]\r\n\t\t\t\t\t})),\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tconst modalValue = await modalContext.onSubmit();\r\n\r\n\t\tif (!modalValue) return;\r\n\r\n\t\tthis.value = modalValue;\r\n\r\n\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<uui-button\r\n\t\t\t\tlabel=${this.localize.term('general_choose')}\r\n\t\t\t\tlook=\"placeholder\"\r\n\t\t\t\tcolor=\"default\"\r\n\t\t\t\t@click=${this.#onClick}></uui-button>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbInputManifestElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-input-manifest': UmbInputManifestElement;\r\n\t}\r\n}\r\n","import { css, customElement, html, ifDefined, property, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbChangeEvent } from '@umbraco-cms/backoffice/event';\r\nimport { UmbFormControlMixin } from '@umbraco-cms/backoffice/validation';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport type { UmbNumberRangeValueType } from '@umbraco-cms/backoffice/models';\r\nimport type { UUIInputElement } from '@umbraco-cms/backoffice/external/uui';\r\n\r\n/**\r\n *\r\n * @param value\r\n */\r\nfunction getNumberOrUndefined(value: string) {\r\n\tconst num = parseInt(value, 10);\r\n\treturn isNaN(num) ? undefined : num;\r\n}\r\n\r\n@customElement('umb-input-number-range')\r\nexport class UmbInputNumberRangeElement extends UmbFormControlMixin(UmbLitElement) {\r\n\t@property({ type: String, attribute: 'min-label' })\r\n\tminLabel = 'Low value';\r\n\r\n\t@property({ type: String, attribute: 'max-label' })\r\n\tmaxLabel = 'High value';\r\n\r\n\t@state()\r\n\tprivate _minValue?: number;\r\n\r\n\t@property({ type: Number })\r\n\tpublic set minValue(value: number | undefined) {\r\n\t\tthis._minValue = value;\r\n\t\tthis.updateValue();\r\n\t}\r\n\tpublic get minValue() {\r\n\t\treturn this._minValue;\r\n\t}\r\n\r\n\t@state()\r\n\tprivate _maxValue?: number;\r\n\r\n\t@property({ type: Number })\r\n\tpublic set maxValue(value: number | undefined) {\r\n\t\tthis._maxValue = value;\r\n\t\tthis.updateValue();\r\n\t}\r\n\tpublic get maxValue() {\r\n\t\treturn this._maxValue;\r\n\t}\r\n\r\n\t@property({ type: Object })\r\n\tvalidationRange?: UmbNumberRangeValueType;\r\n\r\n\tprivate updateValue() {\r\n\t\tconst newValue =\r\n\t\t\tthis._minValue || this._maxValue ? (this._minValue ?? '') + ',' + (this._maxValue ?? '') : undefined;\r\n\t\tif (super.value !== newValue) {\r\n\t\t\tsuper.value = newValue;\r\n\t\t}\r\n\t}\r\n\r\n\t@property()\r\n\tpublic override set value(valueString: string | undefined) {\r\n\t\tif (valueString !== this.value) {\r\n\t\t\tif (valueString === undefined) {\r\n\t\t\t\tthis.minValue = this.maxValue = undefined;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst splittedValue = valueString.split(/[ ,]+/);\r\n\t\t\tthis.minValue = getNumberOrUndefined(splittedValue[0]);\r\n\t\t\tthis.maxValue = getNumberOrUndefined(splittedValue[1]);\r\n\t\t}\r\n\t}\r\n\tpublic override get value(): string | undefined {\r\n\t\treturn this.minValue || this.maxValue ? (this.minValue || '') + ',' + (this.maxValue || '') : undefined;\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.addValidator(\r\n\t\t\t'patternMismatch',\r\n\t\t\t() => {\r\n\t\t\t\treturn 'The low value must not be exceed the high value';\r\n\t\t\t},\r\n\t\t\t() => {\r\n\t\t\t\treturn this._minValue !== undefined && this._maxValue !== undefined ? this._minValue > this._maxValue : false;\r\n\t\t\t},\r\n\t\t);\r\n\t}\r\n\r\n\toverride firstUpdated() {\r\n\t\tthis.shadowRoot?.querySelectorAll<UUIInputElement>('uui-input').forEach((x) => this.addFormControlElement(x));\r\n\t}\r\n\r\n\toverride focus() {\r\n\t\treturn this.shadowRoot?.querySelector<UUIInputElement>('uui-input')?.focus();\r\n\t}\r\n\r\n\t#onMinInput(e: InputEvent & { target: HTMLInputElement }) {\r\n\t\tconst value = e.target.value;\r\n\t\tthis.minValue = value ? Number(value) : undefined;\r\n\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t}\r\n\r\n\t#onMaxInput(e: InputEvent & { target: HTMLInputElement }) {\r\n\t\tconst value = e.target.value;\r\n\t\tthis.maxValue = value ? Number(value) : undefined;\r\n\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<uui-input\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tlabel=${this.minLabel}\r\n\t\t\t\tmin=${ifDefined(this.validationRange?.min)}\r\n\t\t\t\tmax=${ifDefined(this.validationRange?.max)}\r\n\t\t\t\tplaceholder=${this.validationRange?.min ?? ''}\r\n\t\t\t\t.value=${this._minValue}\r\n\t\t\t\t@input=${this.#onMinInput}></uui-input>\r\n\t\t\t<b>–</b>\r\n\t\t\t<uui-input\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tlabel=${this.maxLabel}\r\n\t\t\t\tmin=${ifDefined(this.validationRange?.min)}\r\n\t\t\t\tmax=${ifDefined(this.validationRange?.max)}\r\n\t\t\t\tplaceholder=${this.validationRange?.max ?? '∞'}\r\n\t\t\t\t.value=${this._maxValue}\r\n\t\t\t\t@input=${this.#onMaxInput}></uui-input>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles = css`\r\n\t\t:host(:invalid:not([pristine])) {\r\n\t\t\tcolor: var(--uui-color-danger);\r\n\t\t}\r\n\t\t:host(:invalid:not([pristine])) uui-input {\r\n\t\t\tborder-color: var(--uui-color-danger);\r\n\t\t}\r\n\t`;\r\n}\r\n\r\nexport default UmbInputNumberRangeElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-input-number-range': UmbInputNumberRangeElement;\r\n\t}\r\n}\r\n","import { css, html, nothing, repeat, customElement, property, classMap } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UUIFormControlMixin, UUIRadioElement } from '@umbraco-cms/backoffice/external/uui';\r\nimport { UmbChangeEvent } from '@umbraco-cms/backoffice/event';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport type { UUIRadioEvent } from '@umbraco-cms/backoffice/external/uui';\r\n\r\nexport type UmbRadioButtonItem = { label: string; value: string; invalid?: boolean };\r\n\r\n@customElement('umb-input-radio-button-list')\r\nexport class UmbInputRadioButtonListElement extends UUIFormControlMixin(UmbLitElement, '') {\r\n\t#value: string = '';\r\n\r\n\t@property()\r\n\tpublic override set value(value: string) {\r\n\t\tthis.#value = value;\r\n\t}\r\n\tpublic override get value(): string {\r\n\t\treturn this.#value;\r\n\t}\r\n\r\n\t@property({ type: Array })\r\n\tpublic list: Array<UmbRadioButtonItem> = [];\r\n\r\n\t/**\r\n\t * Sets the input to readonly mode, meaning value cannot be changed but still able to read and select its content.\r\n\t * @type {boolean}\r\n\t * @attr\r\n\t * @default false\r\n\t */\r\n\t@property({ type: Boolean, reflect: true })\r\n\treadonly = false;\r\n\r\n\tprotected override getFormElement() {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t#onChange(event: UUIRadioEvent) {\r\n\t\tevent.stopPropagation();\r\n\t\tif (!(event.target instanceof UUIRadioElement)) return;\r\n\t\tthis.value = event.target.value;\r\n\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t}\r\n\r\n\toverride render() {\r\n\t\tif (!this.list) return nothing;\r\n\r\n\t\treturn html`\r\n\t\t\t<uui-radio-group .value=${this.value} @change=${this.#onChange} ?readonly=${this.readonly}>\r\n\t\t\t\t${repeat(\r\n\t\t\t\t\tthis.list,\r\n\t\t\t\t\t(item) => item,\r\n\t\t\t\t\t(item) => this.#renderRadioButton(item),\r\n\t\t\t\t)}\r\n\t\t\t</uui-radio-group>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderRadioButton(item: (typeof this.list)[0]) {\r\n\t\treturn html`<uui-radio\r\n\t\t\tvalue=${item.value}\r\n\t\t\tclass=${classMap({ invalid: !!item.invalid })}\r\n\t\t\tlabel=${item.label + (item.invalid ? ` (${this.localize.term('validation_legacyOption')})` : '')}\r\n\t\t\ttitle=${item.invalid ? this.localize.term('validation_legacyOptionDescription') : ''}></uui-radio>`;\r\n\t}\r\n\r\n\tstatic override readonly styles = [\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t}\r\n\r\n\t\t\tuui-radio {\r\n\t\t\t\t&.invalid {\r\n\t\t\t\t\ttext-decoration: line-through;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbInputRadioButtonListElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-input-radio-button-list': UmbInputRadioButtonListElement;\r\n\t}\r\n}\r\n","import { customElement, html, property } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbChangeEvent } from '@umbraco-cms/backoffice/event';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UUIFormControlMixin } from '@umbraco-cms/backoffice/external/uui';\r\nimport type { UUISliderEvent } from '@umbraco-cms/backoffice/external/uui';\r\n\r\n@customElement('umb-input-slider')\r\nexport class UmbInputSliderElement extends UUIFormControlMixin(UmbLitElement, '') {\r\n\t@property()\r\n\tlabel: string = '';\r\n\r\n\t@property({ type: Number })\r\n\tmin = 0;\r\n\r\n\t@property({ type: Number })\r\n\tmax = 100;\r\n\r\n\t@property({ type: Number })\r\n\tstep = 1;\r\n\r\n\t@property({ type: Number })\r\n\tvalueLow = 0;\r\n\r\n\t@property({ type: Number })\r\n\tvalueHigh = 0;\r\n\r\n\t@property({ type: Boolean, attribute: 'enable-range' })\r\n\tenableRange = false;\r\n\r\n\t/**\r\n\t * Sets the input to readonly mode, meaning value cannot be changed but still able to read and select its content.\r\n\t * @type {boolean}\r\n\t * @attr\r\n\t * @default false\r\n\t */\r\n\t@property({ type: Boolean, reflect: true })\r\n\treadonly = false;\r\n\r\n\tprotected override getFormElement() {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t#onChange(event: UUISliderEvent) {\r\n\t\tevent.stopPropagation();\r\n\t\tthis.value = event.target.value as string;\r\n\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn this.enableRange ? this.#renderRangeSlider() : this.#renderSlider();\r\n\t}\r\n\r\n\t#renderSlider() {\r\n\t\treturn html`\r\n\t\t\t<uui-slider\r\n\t\t\t\t.label=${this.label}\r\n\t\t\t\t.min=${this.min}\r\n\t\t\t\t.max=${this.max}\r\n\t\t\t\t.step=${this.step}\r\n\t\t\t\t.value=${this.valueLow.toString()}\r\n\t\t\t\t@change=${this.#onChange}\r\n\t\t\t\t?readonly=${this.readonly}>\r\n\t\t\t</uui-slider>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderRangeSlider() {\r\n\t\treturn html`\r\n\t\t\t<uui-range-slider\r\n\t\t\t\t.label=${this.label}\r\n\t\t\t\t.min=${this.min}\r\n\t\t\t\t.max=${this.max}\r\n\t\t\t\t.step=${this.step}\r\n\t\t\t\t.value=\"${this.valueLow},${this.valueHigh}\"\r\n\t\t\t\t@change=${this.#onChange}\r\n\t\t\t\t?readonly=${this.readonly}>\r\n\t\t\t</uui-range-slider>\r\n\t\t`;\r\n\t}\r\n}\r\n\r\nexport default UmbInputSliderElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-input-slider': UmbInputSliderElement;\r\n\t}\r\n}\r\n","import { css, html, customElement, property, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbChangeEvent } from '@umbraco-cms/backoffice/event';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport type { UUIBooleanInputEvent } from '@umbraco-cms/backoffice/external/uui';\r\nimport { UmbFormControlMixin } from '@umbraco-cms/backoffice/validation';\r\n\r\n@customElement('umb-input-toggle')\r\nexport class UmbInputToggleElement extends UmbFormControlMixin(UmbLitElement, '') {\r\n\t/**\r\n\t * Sets the input to required, meaning validation will fail if the value is empty.\r\n\t * @type {boolean}\r\n\t */\r\n\t@property({ type: Boolean })\r\n\trequired?: boolean;\r\n\r\n\t@property({ type: String })\r\n\trequiredMessage?: string;\r\n\r\n\t@property({ type: Boolean })\r\n\tpublic set checked(toggle: boolean) {\r\n\t\tthis.#checked = toggle;\r\n\t\tsuper.value = toggle.toString();\r\n\t}\r\n\tpublic get checked(): boolean {\r\n\t\treturn this.#checked;\r\n\t}\r\n\t#checked = false;\r\n\r\n\t@property({ type: Boolean })\r\n\tshowLabels = false;\r\n\r\n\t@property({ type: String })\r\n\tlabelOn?: string;\r\n\r\n\t@property({ type: String })\r\n\tlabelOff?: string;\r\n\r\n\t@property({ type: String, attribute: 'aria-label' })\r\n\toverride ariaLabel: string | null = null;\r\n\r\n\t/**\r\n\t * Sets the input to readonly mode, meaning value cannot be changed but still able to read and select its content.\r\n\t * @type {boolean}\r\n\t * @default false\r\n\t */\r\n\t@property({ type: Boolean, reflect: true })\r\n\treadonly = false;\r\n\r\n\t@state()\r\n\t_currentLabel?: string;\r\n\r\n\tprotected override firstUpdated(): void {\r\n\t\tthis.addFormControlElement(this.shadowRoot!.querySelector('uui-toggle')!);\r\n\t}\r\n\r\n\t#onChange(event: UUIBooleanInputEvent) {\r\n\t\tevent.stopPropagation();\r\n\t\tthis.checked = event.target.checked;\r\n\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t}\r\n\r\n\toverride render() {\r\n\t\tconst label = this.showLabels ? (this.checked ? this.labelOn : this.labelOff) : '';\r\n\t\treturn html`<uui-toggle\r\n\t\t\t.checked=${this.#checked}\r\n\t\t\t.label=${this.ariaLabel}\r\n\t\t\t?required=${this.required}\r\n\t\t\t.requiredMessage=${this.requiredMessage}\r\n\t\t\t@change=${this.#onChange}\r\n\t\t\t?readonly=${this.readonly}\r\n\t\t\t><span>${label}</span>\r\n\t\t</uui-toggle>`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tcss`\r\n\t\t\tuui-toggle {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbInputToggleElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-input-toggle': UmbInputToggleElement;\r\n\t}\r\n}\r\n","import { css, customElement, html, property, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { generateAlias } from '@umbraco-cms/backoffice/utils';\r\nimport { UmbChangeEvent } from '@umbraco-cms/backoffice/event';\r\nimport { UMB_VALIDATION_EMPTY_LOCALIZATION_KEY, UmbFormControlMixin } from '@umbraco-cms/backoffice/validation';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UUIInputEvent } from '@umbraco-cms/backoffice/external/uui';\r\nimport type { UUIInputElement } from '@umbraco-cms/backoffice/external/uui';\r\n\r\n@customElement('umb-input-with-alias')\r\nexport class UmbInputWithAliasElement extends UmbFormControlMixin<string, typeof UmbLitElement, undefined>(\r\n\tUmbLitElement,\r\n) {\r\n\t@property({ type: String })\r\n\tlabel: string = '';\r\n\r\n\t@property({ type: String, reflect: false })\r\n\talias = '';\r\n\r\n\t@property({ type: Boolean, reflect: true })\r\n\trequired: boolean = false;\r\n\r\n\t@property({ type: Boolean, reflect: true })\r\n\treadonly = false;\r\n\r\n\t@property({ type: Boolean, reflect: true, attribute: 'alias-readonly' })\r\n\taliasReadonly = false;\r\n\r\n\t@property({ type: Boolean, attribute: 'auto-generate-alias' })\r\n\tautoGenerateAlias?: boolean;\r\n\r\n\t@state()\r\n\tprivate _aliasLocked = true;\r\n\r\n\tprotected override firstUpdated(): void {\r\n\t\tthis.addValidator(\r\n\t\t\t'valueMissing',\r\n\t\t\t() => UMB_VALIDATION_EMPTY_LOCALIZATION_KEY,\r\n\t\t\t() => this.required && !this.value,\r\n\t\t);\r\n\r\n\t\tthis.shadowRoot?.querySelectorAll<UUIInputElement>('uui-input').forEach((x) => this.addFormControlElement(x));\r\n\t}\r\n\r\n\toverride focus() {\r\n\t\treturn this.shadowRoot?.querySelector<UUIInputElement>('uui-input')?.focus();\r\n\t}\r\n\r\n\t#onNameChange(e: UUIInputEvent) {\r\n\t\tif (!(e instanceof UUIInputEvent)) return;\r\n\r\n\t\tconst target = e.composedPath()[0] as UUIInputElement;\r\n\r\n\t\tif (typeof target?.value === 'string') {\r\n\t\t\tthis.value = e.target.value.toString();\r\n\t\t\tif (this.autoGenerateAlias && this._aliasLocked) {\r\n\t\t\t\t// Generate alias if it's locked and auto-generate is enabled\r\n\t\t\t\tthis.alias = generateAlias(this.value);\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t\t}\r\n\t}\r\n\r\n\t#onAliasChange(e: UUIInputEvent) {\r\n\t\te.stopPropagation();\r\n\t\tif (!(e instanceof UUIInputEvent)) return;\r\n\r\n\t\tconst target = e.composedPath()[0] as UUIInputElement;\r\n\r\n\t\tif (typeof target?.value === 'string') {\r\n\t\t\tthis.alias = target.value;\r\n\t\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t\t}\r\n\t}\r\n\t#onAliasBlur() {\r\n\t\t// If the alias is empty, then try to generate one [NL]\r\n\t\tif (!this.alias && this._aliasLocked === false) {\r\n\t\t\tthis.alias = generateAlias(this.value ?? '');\r\n\t\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t\t}\r\n\t}\r\n\r\n\t#onToggleAliasLock(event: CustomEvent) {\r\n\t\tthis._aliasLocked = !this._aliasLocked;\r\n\t\tif (!this.alias && this._aliasLocked) {\r\n\t\t\t// Reenable auto-generate if alias is empty and locked.\r\n\t\t\tthis.autoGenerateAlias = true;\r\n\t\t} else {\r\n\t\t\tthis.autoGenerateAlias = false;\r\n\t\t}\r\n\r\n\t\tif (!this._aliasLocked) {\r\n\t\t\t(event.target as UUIInputElement)?.focus();\r\n\t\t}\r\n\t}\r\n\r\n\toverride render() {\r\n\t\tconst nameLabel = this.label ?? this.localize.term('placeholders_entername');\r\n\t\tconst aliasLabel = this.localize.term('placeholders_enterAlias');\r\n\r\n\t\treturn html`\r\n\t\t\t<uui-input\r\n\t\t\t\tid=\"name\"\r\n\t\t\t\tplaceholder=${nameLabel}\r\n\t\t\t\tlabel=${nameLabel}\r\n\t\t\t\t.value=${this.value}\r\n\t\t\t\t@input=${this.#onNameChange}\r\n\t\t\t\t?required=${this.required}\r\n\t\t\t\t?readonly=${this.readonly}>\r\n\t\t\t\t${!this.readonly\r\n\t\t\t\t\t? html`\r\n\t\t\t\t\t\t\t<uui-input-lock\r\n\t\t\t\t\t\t\t\tid=\"alias\"\r\n\t\t\t\t\t\t\t\tname=\"alias\"\r\n\t\t\t\t\t\t\t\tslot=\"append\"\r\n\t\t\t\t\t\t\t\tlabel=${aliasLabel}\r\n\t\t\t\t\t\t\t\tplaceholder=${aliasLabel}\r\n\t\t\t\t\t\t\t\t.value=${this.alias}\r\n\t\t\t\t\t\t\t\t?auto-width=${!!this.value}\r\n\t\t\t\t\t\t\t\t?locked=${this._aliasLocked && !this.aliasReadonly}\r\n\t\t\t\t\t\t\t\t?readonly=${this.aliasReadonly}\r\n\t\t\t\t\t\t\t\t?required=${this.required}\r\n\t\t\t\t\t\t\t\t@input=${this.#onAliasChange}\r\n\t\t\t\t\t\t\t\t@blur=${this.#onAliasBlur}\r\n\t\t\t\t\t\t\t\t@lock-change=${this.#onToggleAliasLock}>\r\n\t\t\t\t\t\t\t</uui-input-lock>\r\n\t\t\t\t\t\t`\r\n\t\t\t\t\t: html`<span id=\"alias\" class=\"muted\" slot=\"append\">${this.alias}</span>`}\r\n\t\t\t</uui-input>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override readonly styles = css`\r\n\t\t#name {\r\n\t\t\twidth: 100%;\r\n\t\t\tflex: 1 1 auto;\r\n\t\t\talign-items: center;\r\n\t\t}\r\n\r\n\t\t#alias {\r\n\t\t\tmax-width: 50%;\r\n\r\n\t\t\t&.muted {\r\n\t\t\t\topacity: 0.55;\r\n\t\t\t\tpadding: var(--uui-size-1, 3px) var(--uui-size-space-3, 9px);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t:host(:invalid:not([pristine])) {\r\n\t\t\tcolor: var(--uui-color-danger);\r\n\t\t}\r\n\t\t:host(:invalid:not([pristine])) > uui-input {\r\n\t\t\tborder-color: var(--uui-color-danger);\r\n\t\t}\r\n\t`;\r\n}\r\n\r\nexport { UmbInputWithAliasElement as element };\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-input-with-alias': UmbInputWithAliasElement;\r\n\t}\r\n}\r\n","import type { UmbMultipleColorPickerItemInputElement } from './multiple-color-picker-item-input.element.js';\r\nimport { css, customElement, html, nothing, repeat, property, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UUIFormControlMixin } from '@umbraco-cms/backoffice/external/uui';\r\nimport { UmbChangeEvent } from '@umbraco-cms/backoffice/event';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UmbSorterController } from '@umbraco-cms/backoffice/sorter';\r\nimport { UMB_PROPERTY_DATASET_CONTEXT } from '@umbraco-cms/backoffice/property';\r\nimport type { UmbInputEvent, UmbDeleteEvent } from '@umbraco-cms/backoffice/event';\r\nimport type { UmbSwatchDetails } from '@umbraco-cms/backoffice/models';\r\n\r\n/**\r\n * @element umb-multiple-color-picker-input\r\n */\r\n@customElement('umb-multiple-color-picker-input')\r\nexport class UmbMultipleColorPickerInputElement extends UUIFormControlMixin(UmbLitElement, '') {\r\n\t#sorter = new UmbSorterController(this, {\r\n\t\tgetUniqueOfElement: (element: UmbMultipleColorPickerItemInputElement) => {\r\n\t\t\treturn element.value.toString();\r\n\t\t},\r\n\t\tgetUniqueOfModel: (modelEntry: UmbSwatchDetails) => {\r\n\t\t\treturn modelEntry.value;\r\n\t\t},\r\n\t\tidentifier: 'Umb.SorterIdentifier.ColorEditor',\r\n\t\titemSelector: 'umb-multiple-color-picker-item-input',\r\n\t\tcontainerSelector: '#sorter-wrapper',\r\n\t\tonChange: ({ model }) => {\r\n\t\t\tconst oldValue = this._items;\r\n\t\t\tthis._items = model;\r\n\t\t\tthis.requestUpdate('_items', oldValue);\r\n\t\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t\t},\r\n\t});\r\n\r\n\t/**\r\n\t * This is a minimum amount of selected items in this input.\r\n\t * @type {number}\r\n\t * @attr\r\n\t * @default undefined\r\n\t */\r\n\t@property({ type: Number })\r\n\tmin?: number;\r\n\r\n\t/**\r\n\t * Min validation message.\r\n\t * @type {boolean}\r\n\t * @attr\r\n\t * @default\r\n\t */\r\n\t@property({ type: String, attribute: 'min-message' })\r\n\tminMessage = 'This field need more items';\r\n\r\n\t/**\r\n\t * This is a maximum amount of selected items in this input.\r\n\t * @type {number}\r\n\t * @attr\r\n\t * @default undefined\r\n\t */\r\n\t@property({ type: Number })\r\n\tmax?: number;\r\n\r\n\t/**\r\n\t * Max validation message.\r\n\t * @type {boolean}\r\n\t * @attr\r\n\t * @default\r\n\t */\r\n\t@property({ type: String, attribute: 'min-message' })\r\n\tmaxMessage = 'This field exceeds the allowed amount of items';\r\n\r\n\t/**\r\n\t * Disables the input\r\n\t * @type {boolean}\r\n\t * @attr\r\n\t * @default false\r\n\t */\r\n\t@property({ type: Boolean, reflect: true })\r\n\tdisabled = false;\r\n\r\n\t/**\r\n\t * Makes the input readonly\r\n\t * @type {boolean}\r\n\t * @attr\r\n\t * @default false\r\n\t */\r\n\t@property({ type: Boolean, reflect: true })\r\n\treadonly = false;\r\n\r\n\t@property({ type: Boolean })\r\n\tshowLabels = false;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.consumeContext(UMB_PROPERTY_DATASET_CONTEXT, async (instance) => {\r\n\t\t\tconst workspace = instance;\r\n\t\t\tthis.observe(\r\n\t\t\t\tawait workspace.propertyValueByAlias<boolean>('useLabel'),\r\n\t\t\t\t(value) => {\r\n\t\t\t\t\tthis.showLabels = !!value;\r\n\t\t\t\t},\r\n\t\t\t\t'observeUseLabel',\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\tthis.addValidator(\r\n\t\t\t'rangeUnderflow',\r\n\t\t\t() => this.minMessage,\r\n\t\t\t() => !!this.min && this._items.length < this.min,\r\n\t\t);\r\n\t\tthis.addValidator(\r\n\t\t\t'rangeOverflow',\r\n\t\t\t() => this.maxMessage,\r\n\t\t\t() => !!this.max && this._items.length > this.max,\r\n\t\t);\r\n\t}\r\n\r\n\t@state()\r\n\tprivate _items: Array<UmbSwatchDetails> = [];\r\n\r\n\t@property({ type: Array })\r\n\tpublic set items(items: Array<UmbSwatchDetails>) {\r\n\t\tthis._items = items ?? [];\r\n\t\tthis.#sorter.setModel(this.items);\r\n\t}\r\n\tpublic get items(): Array<UmbSwatchDetails> {\r\n\t\treturn this._items;\r\n\t}\r\n\r\n\t#onAdd() {\r\n\t\tthis.items = [...this._items, { value: '', label: '' }];\r\n\t\tthis.pristine = false;\r\n\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t\tthis.#focusNewItem();\r\n\t}\r\n\r\n\t#onChange(event: UmbInputEvent, currentIndex: number) {\r\n\t\tevent.stopPropagation();\r\n\t\tconst target = event.currentTarget as UmbMultipleColorPickerItemInputElement;\r\n\t\tconst value = target.value as string;\r\n\t\tconst label = target.label as string;\r\n\r\n\t\tthis.items = this._items.map((item, index) => (index === currentIndex ? { value, label } : item));\r\n\r\n\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t}\r\n\r\n\tasync #focusNewItem() {\r\n\t\tawait this.updateComplete;\r\n\t\tconst items = this.shadowRoot?.querySelectorAll<UmbMultipleColorPickerItemInputElement>(\r\n\t\t\t'umb-multiple-color-picker-item-input',\r\n\t\t);\r\n\t\tif (items) {\r\n\t\t\tconst newItem = items[items.length - 1];\r\n\t\t\tnewItem.focus();\r\n\t\t}\r\n\t}\r\n\r\n\t#deleteItem(event: UmbDeleteEvent, itemIndex: number) {\r\n\t\tevent.stopPropagation();\r\n\t\tthis.items = this._items.filter((item, index) => index !== itemIndex);\r\n\t\tthis.pristine = false;\r\n\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t}\r\n\r\n\tprotected override getFormElement() {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`${this.#renderItems()} ${this.#renderAddButton()}`;\r\n\t}\r\n\r\n\t#renderItems() {\r\n\t\treturn html`\r\n\t\t\t<div id=\"sorter-wrapper\">\r\n\t\t\t\t${repeat(\r\n\t\t\t\t\tthis._items,\r\n\t\t\t\t\t(item, index) => index,\r\n\t\t\t\t\t(item, index) => html`\r\n\t\t\t\t\t\t<umb-multiple-color-picker-item-input\r\n\t\t\t\t\t\t\tlabel=${item.label}\r\n\t\t\t\t\t\t\tvalue=${item.value}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\trequired-message=\"Item ${index + 1} is missing a value\"\r\n\t\t\t\t\t\t\t?disabled=${this.disabled}\r\n\t\t\t\t\t\t\t?readonly=${this.readonly}\r\n\t\t\t\t\t\t\t?showLabels=${this.showLabels}\r\n\t\t\t\t\t\t\t@enter=${this.#onAdd}\r\n\t\t\t\t\t\t\t@change=${(event: UmbChangeEvent) => this.#onChange(event, index)}\r\n\t\t\t\t\t\t\t@delete=${(event: UmbDeleteEvent) => this.#deleteItem(event, index)}>\r\n\t\t\t\t\t\t</umb-multiple-color-picker-item-input>\r\n\t\t\t\t\t`,\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderAddButton() {\r\n\t\tif (this.disabled || this.readonly) return nothing;\r\n\t\treturn html`\r\n\t\t\t<uui-button\r\n\t\t\t\tid=\"action\"\r\n\t\t\t\tlabel=${this.localize.term('general_add')}\r\n\t\t\t\tlook=\"placeholder\"\r\n\t\t\t\tcolor=\"default\"\r\n\t\t\t\t?disabled=${this.disabled}\r\n\t\t\t\t@click=${this.#onAdd}></uui-button>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tcss`\r\n\t\t\t#action {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t}\r\n\r\n\t\t\t.--umb-sorter-placeholder {\r\n\t\t\t\tposition: relative;\r\n\t\t\t\tvisibility: hidden;\r\n\t\t\t}\r\n\t\t\t.--umb-sorter-placeholder::after {\r\n\t\t\t\tcontent: '';\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\tinset: 0px;\r\n\t\t\t\tborder-radius: var(--uui-border-radius);\r\n\t\t\t\tborder: 1px dashed var(--uui-color-divider-emphasis);\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbMultipleColorPickerInputElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-multiple-color-picker-input': UmbMultipleColorPickerInputElement;\r\n\t}\r\n}\r\n","import {\r\n\tcss,\r\n\thtml,\r\n\tnothing,\r\n\tcustomElement,\r\n\tproperty,\r\n\tquery,\r\n\tifDefined,\r\n\tstate,\r\n\twhen,\r\n} from '@umbraco-cms/backoffice/external/lit';\r\nimport { umbConfirmModal } from '@umbraco-cms/backoffice/modal';\r\nimport { UmbChangeEvent, UmbInputEvent, UmbDeleteEvent } from '@umbraco-cms/backoffice/event';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UUIFormControlMixin } from '@umbraco-cms/backoffice/external/uui';\r\nimport type { UUIColorPickerElement, UUIInputElement, UUIInputEvent } from '@umbraco-cms/backoffice/external/uui';\r\n\r\n/**\r\n * @element umb-multiple-color-picker-item-input\r\n */\r\n@customElement('umb-multiple-color-picker-item-input')\r\nexport class UmbMultipleColorPickerItemInputElement extends UUIFormControlMixin(UmbLitElement, '') {\r\n\t@property({ type: String })\r\n\tpublic override set value(value: string) {\r\n\t\tif (value.startsWith('#')) {\r\n\t\t\tthis._valueHex = value;\r\n\t\t\tsuper.value = value.substring(1);\r\n\t\t} else {\r\n\t\t\tsuper.value = value;\r\n\t\t\tthis._valueHex = `#${value}`;\r\n\t\t}\r\n\t}\r\n\tpublic override get value() {\r\n\t\treturn super.value as string;\r\n\t}\r\n\r\n\t@state()\r\n\tprivate _valueHex = '';\r\n\r\n\t/**\r\n\t * Disables the input\r\n\t * @type {boolean}\r\n\t * @attr\r\n\t * @default false\r\n\t */\r\n\t@property({ type: Boolean, reflect: true })\r\n\tdisabled = false;\r\n\r\n\t/**\r\n\t * Disables the input\r\n\t * @type {boolean}\r\n\t * @attr\r\n\t * @default false\r\n\t */\r\n\t@property({ type: Boolean, reflect: true })\r\n\treadonly = false;\r\n\r\n\t@property({ type: String })\r\n\tlabel?: string;\r\n\r\n\t@query('#input')\r\n\tprotected _input?: UUIInputElement;\r\n\r\n\t@query('#color')\r\n\tprotected _colorPicker!: UUIColorPickerElement;\r\n\r\n\t@property({ type: Boolean })\r\n\tshowLabels = false;\r\n\r\n\tasync #onDelete() {\r\n\t\tawait umbConfirmModal(this, {\r\n\t\t\theadline: `${this.localize.term('actions_delete')} ${this.value || ''}`,\r\n\t\t\tcontent: this.localize.term('content_nestedContentDeleteItem'),\r\n\t\t\tcolor: 'danger',\r\n\t\t\tconfirmLabel: this.localize.term('actions_delete'),\r\n\t\t});\r\n\r\n\t\tthis.dispatchEvent(new UmbDeleteEvent());\r\n\t}\r\n\r\n\t#onLabelInput(event: UUIInputEvent) {\r\n\t\tevent.stopPropagation();\r\n\t\tthis.label = event.target.value as string;\r\n\t\tthis.dispatchEvent(new UmbInputEvent());\r\n\t}\r\n\r\n\t#onLabelKeydown(event: KeyboardEvent) {\r\n\t\tevent.stopPropagation();\r\n\t\tconst target = event.currentTarget as UUIInputElement;\r\n\t\tif (event.key === 'Enter' && target.value) {\r\n\t\t\tthis.dispatchEvent(new CustomEvent('enter'));\r\n\t\t}\r\n\t}\r\n\r\n\t#onLabelChange(event: UUIInputEvent) {\r\n\t\tevent.stopPropagation();\r\n\t\tthis.label = event.target.value as string;\r\n\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t}\r\n\r\n\t#onValueKeydown(event: KeyboardEvent) {\r\n\t\tevent.stopPropagation();\r\n\t\tif (event.key === 'Enter') this.#onColorClick();\r\n\t}\r\n\r\n\t#onValueChange(event: UUIInputEvent) {\r\n\t\tevent.stopPropagation();\r\n\t\tthis.value = event.target.value as string;\r\n\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t}\r\n\r\n\t#onValueInput(event: UUIInputEvent) {\r\n\t\tevent.stopPropagation();\r\n\t\tthis.value = event.target.value as string;\r\n\t\tthis.dispatchEvent(new UmbInputEvent());\r\n\t}\r\n\r\n\t#onColorChange(event: Event) {\r\n\t\tevent.stopPropagation();\r\n\t\tthis.value = this._colorPicker.value;\r\n\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t}\r\n\r\n\t// Prevent valid events from bubbling outside the message element\r\n\t#onValid(event: any) {\r\n\t\tevent.stopPropagation();\r\n\t}\r\n\r\n\t// Prevent invalid events from bubbling outside the message element\r\n\t#onInvalid(event: any) {\r\n\t\tevent.stopPropagation();\r\n\t}\r\n\r\n\tpublic override async focus() {\r\n\t\tawait this.updateComplete;\r\n\t\tthis._input?.focus();\r\n\t}\r\n\r\n\tprotected override getFormElement() {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t#onColorClick() {\r\n\t\tthis._colorPicker.click();\r\n\t}\r\n\r\n\toverride render() {\r\n\t\t//TODO: Using native input=color element instead of uui-color-picker due to its huge size and bad adaptability as a pop up\r\n\t\treturn html`\r\n\t\t\t<umb-form-validation-message id=\"validation-message\" @invalid=${this.#onInvalid} @valid=${this.#onValid}>\r\n\t\t\t\t<div id=\"item\">\r\n\t\t\t\t\t${this.disabled || this.readonly ? nothing : html`<uui-icon name=\"icon-navigation\"></uui-icon>`}\r\n\t\t\t\t\t<div class=\"color-wrapper\">\r\n\t\t\t\t\t\t<uui-input\r\n\t\t\t\t\t\t\tid=\"input\"\r\n\t\t\t\t\t\t\tvalue=${this.value}\r\n\t\t\t\t\t\t\tlabel=${this.localize.term('general_value')}\r\n\t\t\t\t\t\t\tplaceholder=${this.localize.term('general_value')}\r\n\t\t\t\t\t\t\trequired=${this.required}\r\n\t\t\t\t\t\t\trequired-message=\"Value is missing\"\r\n\t\t\t\t\t\t\t@keydown=${this.#onValueKeydown}\r\n\t\t\t\t\t\t\t@input=${this.#onValueInput}\r\n\t\t\t\t\t\t\t@change=${this.#onValueChange}>\r\n\t\t\t\t\t\t\t<uui-color-swatch\r\n\t\t\t\t\t\t\t\tslot=\"prepend\"\r\n\t\t\t\t\t\t\t\tlabel=${this.value}\r\n\t\t\t\t\t\t\t\tvalue=${this._valueHex}\r\n\t\t\t\t\t\t\t\t@click=${this.#onColorClick}></uui-color-swatch>\r\n\t\t\t\t\t\t</uui-input>\r\n\t\t\t\t\t\t<input aria-hidden=\"${true}\" type=\"color\" id=\"color\" value=${this.value} @change=${this.#onColorChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t${when(\r\n\t\t\t\t\t\tthis.showLabels,\r\n\t\t\t\t\t\t() => html`\r\n\t\t\t\t\t\t\t<uui-input\r\n\t\t\t\t\t\t\t\tlabel=${this.localize.term('placeholders_label')}\r\n\t\t\t\t\t\t\t\tplaceholder=${this.localize.term('placeholders_label')}\r\n\t\t\t\t\t\t\t\tvalue=${ifDefined(this.label)}\r\n\t\t\t\t\t\t\t\t@keydown=${this.#onLabelKeydown}\r\n\t\t\t\t\t\t\t\t@input=\"${this.#onLabelInput}\"\r\n\t\t\t\t\t\t\t\t@change=\"${this.#onLabelChange}\"\r\n\t\t\t\t\t\t\t\t?disabled=${this.disabled}\r\n\t\t\t\t\t\t\t\t?readonly=${this.readonly}></uui-input>\r\n\t\t\t\t\t\t`,\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t${when(\r\n\t\t\t\t\t\t!this.readonly,\r\n\t\t\t\t\t\t() => html`\r\n\t\t\t\t\t\t\t<uui-button\r\n\t\t\t\t\t\t\t\tcompact\r\n\t\t\t\t\t\t\t\tcolor=\"danger\"\r\n\t\t\t\t\t\t\t\tlabel=${this.localize.term('actions_delete')}\r\n\t\t\t\t\t\t\t\tlook=\"primary\"\r\n\t\t\t\t\t\t\t\t?disabled=${this.disabled}\r\n\t\t\t\t\t\t\t\t@click=${this.#onDelete}>\r\n\t\t\t\t\t\t\t\t<uui-icon name=\"icon-trash\"></uui-icon>\r\n\t\t\t\t\t\t\t</uui-button>\r\n\t\t\t\t\t\t`,\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</umb-form-validation-message>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tmargin-bottom: var(--uui-size-space-3);\r\n\t\t\t\tgap: var(--uui-size-space-3);\r\n\t\t\t}\r\n\r\n\t\t\t#item {\r\n\t\t\t\tposition: relative;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tgap: var(--uui-size-1);\r\n\t\t\t\talign-items: center;\r\n\t\t\t}\r\n\t\t\tuui-input {\r\n\t\t\t\tflex: 1;\r\n\t\t\t}\r\n\r\n\t\t\tuui-color-swatch {\r\n\t\t\t\tpadding: var(--uui-size-1);\r\n\t\t\t}\r\n\r\n\t\t\tuui-color-swatch:focus-within {\r\n\t\t\t\toutline: 2px solid var(--uui-color-selected);\r\n\t\t\t\toutline-offset: 0;\r\n\t\t\t\tborder-radius: var(--uui-border-radius);\r\n\t\t\t}\r\n\r\n\t\t\t.color-wrapper {\r\n\t\t\t\tposition: relative;\r\n\t\t\t\tflex: 1;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t}\r\n\r\n\t\t\tuui-input,\r\n\t\t\t#validation-message {\r\n\t\t\t\tflex: 1;\r\n\t\t\t}\r\n\r\n\t\t\tinput[type='color'] {\r\n\t\t\t\tvisibility: hidden;\r\n\t\t\t\twidth: 0px;\r\n\t\t\t\tpadding: 0;\r\n\t\t\t\tmargin: 0;\r\n\t\t\t\tposition: absolute;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbMultipleColorPickerItemInputElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-multiple-color-picker-item-input': UmbMultipleColorPickerItemInputElement;\r\n\t}\r\n}\r\n","import type { UmbInputMultipleTextStringItemElement } from './input-multiple-text-string-item.element.js';\r\nimport { css, html, nothing, repeat, customElement, property, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbChangeEvent } from '@umbraco-cms/backoffice/event';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UmbSorterController } from '@umbraco-cms/backoffice/sorter';\r\nimport type { UmbInputEvent, UmbDeleteEvent } from '@umbraco-cms/backoffice/event';\r\nimport { UmbFormControlMixin } from '@umbraco-cms/backoffice/validation';\r\n\r\n/**\r\n * @element umb-input-multiple-text-string\r\n */\r\n@customElement('umb-input-multiple-text-string')\r\nexport class UmbInputMultipleTextStringElement extends UmbFormControlMixin<undefined | string, typeof UmbLitElement>(\r\n\tUmbLitElement,\r\n\tundefined,\r\n) {\r\n\t#sorter = new UmbSorterController(this, {\r\n\t\tgetUniqueOfElement: (element) => {\r\n\t\t\treturn element.getAttribute('data-sort-entry-id');\r\n\t\t},\r\n\t\tgetUniqueOfModel: (modelEntry: string) => {\r\n\t\t\treturn modelEntry;\r\n\t\t},\r\n\t\tidentifier: 'Umb.SorterIdentifier.MultipleTextString',\r\n\t\titemSelector: 'umb-input-multiple-text-string-item',\r\n\t\tcontainerSelector: '#sorter-wrapper',\r\n\t\tonChange: ({ model }) => {\r\n\t\t\tconst oldValue = this._items;\r\n\t\t\tthis._items = model;\r\n\t\t\tthis.requestUpdate('_items', oldValue);\r\n\t\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t\t},\r\n\t});\r\n\r\n\t/**\r\n\t * This is a minimum amount of selected items in this input.\r\n\t * @type {number}\r\n\t * @attr\r\n\t * @default undefined\r\n\t */\r\n\t@property({ type: Number })\r\n\tmin?: number;\r\n\r\n\t/**\r\n\t * Min validation message.\r\n\t * @type {boolean}\r\n\t * @attr\r\n\t * @default\r\n\t */\r\n\t@property({ type: String, attribute: 'min-message' })\r\n\tminMessage = 'This field need more items';\r\n\r\n\t/**\r\n\t * This is a maximum amount of selected items in this input.\r\n\t * @type {number}\r\n\t * @attr\r\n\t * @default undefined\r\n\t */\r\n\t@property({ type: Number })\r\n\tmax?: number;\r\n\r\n\t/**\r\n\t * Max validation message.\r\n\t * @type {boolean}\r\n\t * @attr\r\n\t * @default\r\n\t */\r\n\t@property({ type: String, attribute: 'min-message' })\r\n\tmaxMessage = 'This field exceeds the allowed amount of items';\r\n\r\n\t/**\r\n\t * Disables the input\r\n\t * @type {boolean}\r\n\t * @attr\r\n\t * @default\r\n\t */\r\n\t@property({ type: Boolean, reflect: true })\r\n\tpublic set disabled(value) {\r\n\t\tthis.#disabled = value;\r\n\t\tif (value) {\r\n\t\t\tthis.#sorter.disable();\r\n\t\t}\r\n\t}\r\n\tpublic get disabled() {\r\n\t\treturn this.#disabled;\r\n\t}\r\n\t#disabled = false;\r\n\r\n\t/**\r\n\t * Makes the input readonly\r\n\t * @type {boolean}\r\n\t * @attr\r\n\t * @default\r\n\t */\r\n\t@property({ type: Boolean, reflect: true })\r\n\tpublic set readonly(value) {\r\n\t\tthis.#readonly = value;\r\n\t\tif (value) {\r\n\t\t\tthis.#sorter.disable();\r\n\t\t}\r\n\t}\r\n\tpublic get readonly() {\r\n\t\treturn this.#readonly;\r\n\t}\r\n\t#readonly = false;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\t// TODO: we need a way to overwrite the missing value validator. Se we can validate on other properties than value\r\n\t\t/*\r\n\t\tthis.removeValidator('valueMissing');\r\n\r\n\t\tthis.addValidator(\r\n\t\t\t'valueMissing',\r\n\t\t\t() => this.requiredMessage,\r\n\t\t\t() => this.items.length > 0\r\n\t\t);\r\n\t\t*/\r\n\r\n\t\tthis.addValidator(\r\n\t\t\t'rangeUnderflow',\r\n\t\t\t() => this.minMessage,\r\n\t\t\t() => !!this.min && this._items.length < this.min,\r\n\t\t);\r\n\t\tthis.addValidator(\r\n\t\t\t'rangeOverflow',\r\n\t\t\t() => this.maxMessage,\r\n\t\t\t() => !!this.max && this._items.length > this.max,\r\n\t\t);\r\n\t}\r\n\r\n\t@state()\r\n\tprivate _items: Array<string> = [];\r\n\r\n\t@property({ type: Array })\r\n\tpublic get items(): Array<string> {\r\n\t\treturn this._items;\r\n\t}\r\n\tpublic set items(items: Array<string>) {\r\n\t\t// TODO: when we have a way to overwrite the missing value validator we can remove this\r\n\t\tthis.value = items?.length > 0 ? 'some value' : '';\r\n\t\tthis._items = items ?? [];\r\n\t\tthis.#sorter.setModel(this.items);\r\n\t}\r\n\r\n\t// TODO: Some inputs might not have a value that is either FormDataEntryValue or FormData.\r\n\t//  How do we handle this?\r\n\t/*\r\n\t@property()\r\n\tpublic set value(value: FormDataEntryValue | FormData) {\r\n\t\tthrow new Error(`${this} does not support to set the value directly. Use items instead.`);\r\n\t}\r\n\tpublic get value() {\r\n\t\tthrow new Error(`${this} does not support to get the value directly. Use items instead.`);\r\n\t}\r\n\t*/\r\n\r\n\t#onAdd() {\r\n\t\tthis._items = [...this._items, ''];\r\n\t\tthis.pristine = false;\r\n\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t\tthis.#focusNewItem();\r\n\t}\r\n\r\n\t#onInput(event: UmbInputEvent, currentIndex: number) {\r\n\t\tevent.stopPropagation();\r\n\t\tconst target = event.currentTarget as UmbInputMultipleTextStringItemElement;\r\n\t\tconst value = target.value as string;\r\n\t\tthis._items = this._items.map((item, index) => (index === currentIndex ? value : item));\r\n\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t}\r\n\r\n\tasync #focusNewItem() {\r\n\t\tawait this.updateComplete;\r\n\t\tconst items = this.shadowRoot?.querySelectorAll(\r\n\t\t\t'umb-input-multiple-text-string-item',\r\n\t\t) as NodeListOf<UmbInputMultipleTextStringItemElement>;\r\n\t\tconst newItem = items[items.length - 1];\r\n\t\tnewItem.focus();\r\n\t}\r\n\r\n\t#deleteItem(event: UmbDeleteEvent, itemIndex: number) {\r\n\t\tevent.stopPropagation();\r\n\t\tthis._items = this._items.filter((item, index) => index !== itemIndex);\r\n\t\tthis.pristine = false;\r\n\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t}\r\n\r\n\toverride getFormElement() {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`<div id=\"sorter-wrapper\">${this.#renderItems()}</div>\r\n\t\t\t${this.#renderAddButton()}`;\r\n\t}\r\n\r\n\t#renderItems() {\r\n\t\treturn html`\r\n\t\t\t${repeat(\r\n\t\t\t\tthis._items,\r\n\t\t\t\t(item, index) => index,\r\n\t\t\t\t(item, index) => html`\r\n\t\t\t\t\t<umb-input-multiple-text-string-item\r\n\t\t\t\t\t\tname=\"item-${index}\"\r\n\t\t\t\t\t\tdata-sort-entry-id=${item}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\trequired-message=\"Item ${index + 1} is missing a value\"\r\n\t\t\t\t\t\tvalue=${item}\r\n\t\t\t\t\t\t?disabled=${this.disabled}\r\n\t\t\t\t\t\t?readonly=${this.readonly}\r\n\t\t\t\t\t\t@enter=${this.#onAdd}\r\n\t\t\t\t\t\t@delete=${(event: UmbDeleteEvent) => this.#deleteItem(event, index)}\r\n\t\t\t\t\t\t@input=${(event: UmbInputEvent) => this.#onInput(event, index)}>\r\n\t\t\t\t\t</umb-input-multiple-text-string-item>\r\n\t\t\t\t`,\r\n\t\t\t)}\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderAddButton() {\r\n\t\tif (this.disabled || this.readonly) return nothing;\r\n\t\treturn html`\r\n\t\t\t<uui-button\r\n\t\t\t\tcolor=\"default\"\r\n\t\t\t\tid=\"action\"\r\n\t\t\t\tlabel=\"Add\"\r\n\t\t\t\tlook=\"placeholder\"\r\n\t\t\t\t?disabled=${this.disabled}\r\n\t\t\t\t@click=${this.#onAdd}></uui-button>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tcss`\r\n\t\t\t#action {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t}\r\n\r\n\t\t\t.--umb-sorter-placeholder {\r\n\t\t\t\tposition: relative;\r\n\t\t\t\tvisibility: hidden;\r\n\t\t\t}\r\n\t\t\t.--umb-sorter-placeholder::after {\r\n\t\t\t\tcontent: '';\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\tinset: 0px;\r\n\t\t\t\tborder-radius: var(--uui-border-radius);\r\n\t\t\t\tborder: 1px dashed var(--uui-color-divider-emphasis);\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbInputMultipleTextStringElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-input-multiple-text-string': UmbInputMultipleTextStringElement;\r\n\t}\r\n}\r\n","import { css, customElement, html, nothing, property, query, when } from '@umbraco-cms/backoffice/external/lit';\r\nimport { umbConfirmModal } from '@umbraco-cms/backoffice/modal';\r\nimport { UmbChangeEvent, UmbInputEvent, UmbDeleteEvent } from '@umbraco-cms/backoffice/event';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UUIFormControlMixin } from '@umbraco-cms/backoffice/external/uui';\r\nimport type { UUIInputElement, UUIInputEvent } from '@umbraco-cms/backoffice/external/uui';\r\n\r\n/**\r\n * @element umb-input-multiple-text-string-item\r\n */\r\n@customElement('umb-input-multiple-text-string-item')\r\nexport class UmbInputMultipleTextStringItemElement extends UUIFormControlMixin(UmbLitElement, '') {\r\n\t/**\r\n\t * Disables the input\r\n\t * @type {boolean}\r\n\t * @attr\r\n\t * @default false\r\n\t */\r\n\t@property({ type: Boolean, reflect: true })\r\n\tdisabled = false;\r\n\r\n\t/**\r\n\t * Disables the input\r\n\t * @type {boolean}\r\n\t * @attr\r\n\t * @default false\r\n\t */\r\n\t@property({ type: Boolean, reflect: true })\r\n\treadonly = false;\r\n\r\n\t@query('#input')\r\n\tprotected _input?: UUIInputElement;\r\n\r\n\tasync #onDelete() {\r\n\t\tawait umbConfirmModal(this, {\r\n\t\t\theadline: `Delete ${this.value || 'item'}`,\r\n\t\t\tcontent: 'Are you sure you want to delete this item?',\r\n\t\t\tcolor: 'danger',\r\n\t\t\tconfirmLabel: 'Delete',\r\n\t\t});\r\n\r\n\t\tthis.dispatchEvent(new UmbDeleteEvent());\r\n\t}\r\n\r\n\t#onInput(event: UUIInputEvent) {\r\n\t\tevent.stopPropagation();\r\n\t\tconst target = event.currentTarget as UUIInputElement;\r\n\t\tthis.value = target.value as string;\r\n\t\tthis.dispatchEvent(new UmbInputEvent());\r\n\t}\r\n\r\n\t#onKeydown(event: KeyboardEvent) {\r\n\t\tevent.stopPropagation();\r\n\t\tconst target = event.currentTarget as UUIInputElement;\r\n\t\tif (event.key === 'Enter' && target.value) {\r\n\t\t\tthis.dispatchEvent(new CustomEvent('enter'));\r\n\t\t}\r\n\t}\r\n\r\n\t#onChange(event: UUIInputEvent) {\r\n\t\tevent.stopPropagation();\r\n\t\tconst target = event.currentTarget as UUIInputElement;\r\n\t\tthis.value = target.value as string;\r\n\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t}\r\n\r\n\t// Prevent valid events from bubbling outside the message element\r\n\t#onValid(event: Event) {\r\n\t\tevent.stopPropagation();\r\n\t}\r\n\r\n\t// Prevent invalid events from bubbling outside the message element\r\n\t#onInvalid(event: Event) {\r\n\t\tevent.stopPropagation();\r\n\t}\r\n\r\n\tpublic override async focus() {\r\n\t\tawait this.updateComplete;\r\n\t\tthis._input?.focus();\r\n\t}\r\n\r\n\tprotected override getFormElement() {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t${this.disabled || this.readonly ? nothing : html`<uui-icon name=\"icon-navigation\" class=\"handle\"></uui-icon>`}\r\n\r\n\t\t\t<umb-form-validation-message id=\"validation-message\" @invalid=${this.#onInvalid} @valid=${this.#onValid}>\r\n\t\t\t\t<uui-input\r\n\t\t\t\t\tid=\"input\"\r\n\t\t\t\t\tlabel=\"Value\"\r\n\t\t\t\t\tvalue=${this.value}\r\n\t\t\t\t\t@keydown=${this.#onKeydown}\r\n\t\t\t\t\t@input=${this.#onInput}\r\n\t\t\t\t\t@change=${this.#onChange}\r\n\t\t\t\t\t?disabled=${this.disabled}\r\n\t\t\t\t\t?readonly=${this.readonly}\r\n\t\t\t\t\trequired=${this.required}\r\n\t\t\t\t\trequired-message=\"Value is missing\"></uui-input>\r\n\t\t\t</umb-form-validation-message>\r\n\r\n\t\t\t${when(\r\n\t\t\t\t!this.readonly,\r\n\t\t\t\t() => html`\r\n\t\t\t\t\t<uui-button\r\n\t\t\t\t\t\tcompact\r\n\t\t\t\t\t\tcolor=\"danger\"\r\n\t\t\t\t\t\tlabel=\"${this.localize.term('general_remove')} ${this.value}\"\r\n\t\t\t\t\t\tlook=\"outline\"\r\n\t\t\t\t\t\t?disabled=${this.disabled}\r\n\t\t\t\t\t\t@click=${this.#onDelete}>\r\n\t\t\t\t\t\t<uui-icon name=\"icon-trash\"></uui-icon>\r\n\t\t\t\t\t</uui-button>\r\n\t\t\t\t`,\r\n\t\t\t)}\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tmargin-bottom: var(--uui-size-space-3);\r\n\t\t\t\tgap: var(--uui-size-space-3);\r\n\t\t\t}\r\n\r\n\t\t\t#validation-message {\r\n\t\t\t\tflex: 1;\r\n\t\t\t}\r\n\r\n\t\t\t#input {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t}\r\n\r\n\t\t\t.handle {\r\n\t\t\t\tcursor: move;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbInputMultipleTextStringItemElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-input-multiple-text-string-item': UmbInputMultipleTextStringItemElement;\r\n\t}\r\n}\r\n","import { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport { css, html, customElement } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\n\r\n// TODO: maybe move this to UI Library.\r\n// TODO: add overwrites for customization.\r\n\r\n/**\r\n * Popover layout element.\r\n * @element umb-popover-layout\r\n */\r\n@customElement('umb-popover-layout')\r\nexport class UmbPopoverLayoutElement extends UmbLitElement {\r\n\toverride render() {\r\n\t\treturn html`<slot></slot>`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tbackground-color: var(--uui-color-surface);\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\tborder: 1px solid var(--uui-color-border);\r\n\t\t\t\tborder-radius: var(--uui-border-radius);\r\n\t\t\t\tbox-shadow: var(--uui-shadow-depth-3);\r\n\t\t\t\toverflow: clip;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-popover-layout': UmbPopoverLayoutElement;\r\n\t}\r\n}\r\n","import { customElement, css, property, type PropertyValues } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbElementMixin } from '@umbraco-cms/backoffice/element-api';\r\nimport { UUIRefNodeElement } from '@umbraco-cms/backoffice/external/uui';\r\n\r\n@customElement('umb-ref-item')\r\nexport class UmbRefItemElement extends UmbElementMixin(UUIRefNodeElement) {\r\n\t@property({ type: String })\r\n\ticon? = '';\r\n\r\n\t#iconElement = document.createElement('umb-icon');\r\n\r\n\tprotected override firstUpdated(_changedProperties: PropertyValues): void {\r\n\t\tsuper.firstUpdated(_changedProperties);\r\n\r\n\t\tif (this.icon) {\r\n\t\t\t// Temporary fix for the icon appending, this could in the future be changed to override a renderIcon method, or other ways to make this happen without appending children.\r\n\t\t\tthis.#iconElement.setAttribute('slot', 'icon');\r\n\t\t\tthis.#iconElement.setAttribute('name', this.icon);\r\n\t\t\tthis.appendChild(this.#iconElement);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\t...UUIRefNodeElement.styles,\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tpadding-top: var(--uui-size-3);\r\n\t\t\t\tpadding-bottom: var(--uui-size-3);\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-ref-item': UmbRefItemElement;\r\n\t}\r\n}\r\n","import { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { classMap, customElement, css, html, property } from '@umbraco-cms/backoffice/external/lit';\r\n\r\n/**\r\n *  @element umb-stack\r\n *  @description - Element for displaying items in a stack with even spacing between\r\n *  @augments LitElement\r\n */\r\n@customElement('umb-stack')\r\nexport class UmbStackElement extends UmbLitElement {\r\n\t/**\r\n\t * Look\r\n\t * @type {string}\r\n\t * @memberof UmbStackElement\r\n\t */\r\n\t@property({ type: String })\r\n\tlook: 'compact' | 'default' = 'default';\r\n\r\n\t/**\r\n\t * Divide\r\n\t * @type {boolean}\r\n\t * @memberof UmbStackElement\r\n\t */\r\n\t@property({ type: Boolean })\r\n\tdivide: boolean = false;\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<div class=${classMap({ divide: this.divide, compact: this.look === 'compact' })}>\r\n\t\t\t\t<slot></slot>\r\n\t\t\t</div>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tcss`\r\n\t\t\tdiv {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\tposition: relative;\r\n\t\t\t}\r\n\r\n\t\t\t::slotted(*) {\r\n\t\t\t\tposition: relative;\r\n\t\t\t\tmargin-top: var(--uui-size-space-6);\r\n\t\t\t}\r\n\r\n\t\t\t.divide ::slotted(*)::before {\r\n\t\t\t\tcontent: '';\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\ttop: calc((var(--uui-size-space-6) / 2) * -1);\r\n\t\t\t\theight: 0;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tborder-top: solid 1px var(--uui-color-divider-standalone);\r\n\t\t\t}\r\n\r\n\t\t\t::slotted(*:first-child) {\r\n\t\t\t\tmargin-top: 0;\r\n\t\t\t}\r\n\r\n\t\t\t.divide ::slotted(*:first-child)::before {\r\n\t\t\t\tdisplay: none;\r\n\t\t\t}\r\n\r\n\t\t\t.compact ::slotted(*) {\r\n\t\t\t\tmargin-top: var(--uui-size-space-3);\r\n\t\t\t}\r\n\r\n\t\t\t.compact ::slotted(*:first-child) {\r\n\t\t\t\tmargin-top: 0;\r\n\t\t\t}\r\n\r\n\t\t\t.compact.divide ::slotted(*)::before {\r\n\t\t\t\tdisplay: none;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbStackElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-stack': UmbStackElement;\r\n\t}\r\n}\r\n","import {\r\n\ttype PropertyValueMap,\r\n\tLitElement,\r\n\tcss,\r\n\tcustomElement,\r\n\thtml,\r\n\tproperty,\r\n\tquery,\r\n\tstate,\r\n} from '@umbraco-cms/backoffice/external/lit';\r\nimport { clamp } from '@umbraco-cms/backoffice/utils';\r\n\r\n/**\r\n * Custom element for a split panel with adjustable divider.\r\n * @element umb-split-panel\r\n * @slot start - Content for the start panel.\r\n * @slot end - Content for the end panel.\r\n * @cssprop --umb-split-panel-initial-position - Initial position of the divider.\r\n * @cssprop --umb-split-panel-start-min-width - Minimum width of the start panel.\r\n * @cssprop --umb-split-panel-end-min-width - Minimum width of the end panel.\r\n * @cssprop --umb-split-panel-divider-touch-area-width - Width of the divider touch area.\r\n * @cssprop --umb-split-panel-divider-width - Width of the divider.\r\n * @cssprop --umb-split-panel-divider-color - Color of the divider.\r\n */\r\n@customElement('umb-split-panel')\r\nexport class UmbSplitPanelElement extends LitElement {\r\n\t@query('#main') mainElement!: HTMLElement;\r\n\t@query('#divider-touch-area') dividerTouchAreaElement!: HTMLElement;\r\n\t@query('#divider') dividerElement!: HTMLElement;\r\n\r\n\t/**\r\n\t * Snap points for the divider position.\r\n\t * Pixel or percent space-separated values: e.g., \"100px 50% -75% -200px\".\r\n\t * Negative values are relative to the end of the container.\r\n\t */\r\n\t@property({ type: String }) snap?: string; //TODO: Consider using css variables for snap points.\r\n\r\n\t/**\r\n\t * Locking mode for the split panel.\r\n\t * Possible values: \"start\", \"end\", \"none\" (default).\r\n\t */\r\n\t@property({ type: String }) lock: 'start' | 'end' | 'none' = 'none';\r\n\r\n\t/**\r\n\t * Initial position of the divider.\r\n\t * Pixel or percent value: e.g., \"100px\" or \"25%\".\r\n\t * Defaults to a CSS variable if not set: \"var(--umb-split-panel-initial-position) which defaults to 50%\".\r\n\t */\r\n\t@property({ type: String, reflect: true }) position = 'var(--umb-split-panel-initial-position)';\r\n\t//TODO: Add support for negative values (relative to end of container) similar to snap points.\r\n\r\n\t/** Width of the locked panel when in \"start\" or \"end\" lock mode */\r\n\t#lockedPanelWidth: number = 0;\r\n\t/** Pixel value for the snap threshold. Determines how close the divider needs to be to a snap point to snap to it. */\r\n\treadonly #SNAP_THRESHOLD = 25 as const;\r\n\r\n\t@state() _hasStartPanel = false;\r\n\t@state() _hasEndPanel = false;\r\n\tget #hasBothPanels() {\r\n\t\treturn this._hasStartPanel && this._hasEndPanel;\r\n\t}\r\n\r\n\t#hasInitialized = false;\r\n\r\n\toverride disconnectedCallback() {\r\n\t\tsuper.disconnectedCallback();\r\n\t\tthis.#disconnect();\r\n\t}\r\n\r\n\tprotected override updated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\r\n\t\tsuper.updated(_changedProperties);\r\n\r\n\t\tif (!this.#hasInitialized) return;\r\n\r\n\t\tif (_changedProperties.has('position')) {\r\n\t\t\tif (this.lock !== 'none') {\r\n\t\t\t\tconst { width } = this.mainElement.getBoundingClientRect();\r\n\r\n\t\t\t\tlet pos = parseFloat(this.position);\r\n\r\n\t\t\t\tif (this.position.endsWith('%')) {\r\n\t\t\t\t\tpos = (pos / 100) * width;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst lockedPanelWidth = this.lock === 'start' ? pos : width - pos;\r\n\t\t\t\tthis.#lockedPanelWidth = lockedPanelWidth;\r\n\t\t\t}\r\n\r\n\t\t\tthis.#updateSplit();\r\n\t\t}\r\n\t}\r\n\r\n\t#setPosition(pos: number) {\r\n\t\tconst { width } = this.mainElement.getBoundingClientRect();\r\n\t\tconst localPos = clamp(pos, 0, width);\r\n\t\tconst percentagePos = (localPos / width) * 100;\r\n\t\tthis.position = percentagePos + '%';\r\n\t}\r\n\r\n\t#updateSplit() {\r\n\t\t// If lock is none\r\n\t\tlet maxStartWidth = this.position;\r\n\t\tlet maxEndWidth = '1fr';\r\n\r\n\t\tif (this.lock === 'start') {\r\n\t\t\tmaxStartWidth = this.#lockedPanelWidth + 'px';\r\n\t\t\tmaxEndWidth = `1fr`;\r\n\t\t}\r\n\t\tif (this.lock === 'end') {\r\n\t\t\tmaxStartWidth = `1fr`;\r\n\t\t\tmaxEndWidth = this.#lockedPanelWidth + 'px';\r\n\t\t}\r\n\r\n\t\tthis.mainElement.style.gridTemplateColumns = `\r\n      minmax(var(--umb-split-panel-start-min-width), ${maxStartWidth})\r\n      0px\r\n      minmax(var(--umb-split-panel-end-min-width), ${maxEndWidth})\r\n    `;\r\n\t}\r\n\r\n\t#onDragStart = (event: PointerEvent | TouchEvent) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconst move = (event: PointerEvent) => {\r\n\t\t\tconst { clientX } = event;\r\n\t\t\tconst { left, width } = this.mainElement.getBoundingClientRect();\r\n\t\t\tconst localPos = clamp(clientX - left, 0, width);\r\n\t\t\tconst mappedPos = mapXAxisToSnap(localPos, width);\r\n\r\n\t\t\tthis.#lockedPanelWidth = this.lock === 'start' ? mappedPos : width - mappedPos;\r\n\t\t\tthis.#setPosition(mappedPos);\r\n\t\t};\r\n\r\n\t\tconst stop = () => {\r\n\t\t\tdocument.removeEventListener('pointermove', move);\r\n\t\t\tdocument.removeEventListener('pointerup', stop);\r\n\r\n\t\t\tthis.dispatchEvent(new CustomEvent('position-changed', { detail: { position: this.position } }));\r\n\t\t};\r\n\r\n\t\tconst mapXAxisToSnap = (xPos: number, containerWidth: number) => {\r\n\t\t\tconst snaps = this.snap?.split(' ');\r\n\t\t\tif (!snaps) return xPos;\r\n\r\n\t\t\tconst snapsInPixels = snaps.map((snap) => {\r\n\t\t\t\tlet snapPx = parseFloat(snap);\r\n\r\n\t\t\t\tif (snap.endsWith('%')) {\r\n\t\t\t\t\tsnapPx = (snapPx / 100) * containerWidth;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (snap.startsWith('-')) {\r\n\t\t\t\t\tsnapPx = containerWidth + snapPx;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn snapPx;\r\n\t\t\t});\r\n\r\n\t\t\tconst closestSnap = snapsInPixels.reduce((prev, curr) => {\r\n\t\t\t\treturn Math.abs(curr - xPos) < Math.abs(prev - xPos) ? curr : prev;\r\n\t\t\t});\r\n\r\n\t\t\tif (closestSnap < xPos + this.#SNAP_THRESHOLD && closestSnap > xPos - this.#SNAP_THRESHOLD) {\r\n\t\t\t\txPos = closestSnap;\r\n\t\t\t}\r\n\r\n\t\t\treturn xPos;\r\n\t\t};\r\n\r\n\t\tdocument.addEventListener('pointermove', move, { passive: true });\r\n\t\tdocument.addEventListener('pointerup', stop);\r\n\t};\r\n\r\n\t#disconnect() {\r\n\t\tthis.dividerTouchAreaElement.removeEventListener('pointerdown', this.#onDragStart);\r\n\t\tthis.dividerTouchAreaElement.removeEventListener('touchstart', this.#onDragStart);\r\n\t\tthis.dividerElement.style.display = 'none';\r\n\t\tthis.mainElement.style.display = 'flex';\r\n\t\tthis.#hasInitialized = false;\r\n\t}\r\n\r\n\tasync #connect() {\r\n\t\tthis.#hasInitialized = true;\r\n\r\n\t\tthis.mainElement.style.display = 'grid';\r\n\t\tthis.mainElement.style.gridTemplateColumns = `${this.position} 0px 1fr`;\r\n\t\tthis.dividerElement.style.display = 'unset';\r\n\r\n\t\tthis.dividerTouchAreaElement.addEventListener('pointerdown', this.#onDragStart);\r\n\t\tthis.dividerTouchAreaElement.addEventListener('touchstart', this.#onDragStart, { passive: false });\r\n\r\n\t\t// Wait for the next frame to get the correct position of the divider.\r\n\t\tawait new Promise((resolve) => requestAnimationFrame(resolve));\r\n\r\n\t\tconst { left: dividerLeft } = this.shadowRoot!.querySelector('#divider')!.getBoundingClientRect();\r\n\t\tconst { left: mainLeft, width: mainWidth } = this.mainElement.getBoundingClientRect();\r\n\t\tconst percentagePos = ((dividerLeft - mainLeft) / mainWidth) * 100;\r\n\t\tthis.position = `${percentagePos}%`;\r\n\t}\r\n\r\n\t#onSlotChanged(event: Event) {\r\n\t\tconst slot = event.target as HTMLSlotElement;\r\n\t\tconst name = slot.name;\r\n\r\n\t\tif (name === 'start') {\r\n\t\t\tthis._hasStartPanel = slot.assignedElements().length > 0;\r\n\t\t}\r\n\t\tif (name === 'end') {\r\n\t\t\tthis._hasEndPanel = slot.assignedElements().length > 0;\r\n\t\t}\r\n\r\n\t\tif (!this.#hasBothPanels) {\r\n\t\t\tif (this.#hasInitialized) {\r\n\t\t\t\tthis.#disconnect();\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.#connect();\r\n\t}\r\n\r\n\t#onKeydown(event: KeyboardEvent) {\r\n\t\tif (event.key === 'ArrowLeft' || event.key === 'ArrowRight') {\r\n\t\t\tconst { width } = this.mainElement.getBoundingClientRect();\r\n\t\t\tconst divider = this.dividerElement.getBoundingClientRect();\r\n\r\n\t\t\tconst dividerPos = divider.left - this.mainElement.getBoundingClientRect().left;\r\n\t\t\tconst percentageFromWidth = (dividerPos / width) * 100;\r\n\r\n\t\t\tconst multiplier = event.shiftKey ? 10 : 1;\r\n\t\t\tconst step = 1 * multiplier * (event.key === 'ArrowLeft' ? -1 : 1);\r\n\r\n\t\t\tconst newPercent = percentageFromWidth + step;\r\n\t\t\tconst toPixels = (newPercent / 100) * this.mainElement.getBoundingClientRect().width;\r\n\r\n\t\t\tthis.#setPosition(toPixels);\r\n\t\t}\r\n\r\n\t\tif (event.key === 'Home' || event.key === 'End') {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tconst { width } = this.mainElement.getBoundingClientRect();\r\n\t\t\tconst newPos = event.key === 'Home' ? 0 : width;\r\n\t\t\tthis.#setPosition(newPos);\r\n\t\t}\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<div id=\"main\">\r\n\t\t\t\t<slot\r\n\t\t\t\t\tname=\"start\"\r\n\t\t\t\t\t@slotchange=${this.#onSlotChanged}\r\n\t\t\t\t\tstyle=\"width: ${this._hasStartPanel ? '100%' : '0'}\"></slot>\r\n\t\t\t\t<div id=\"divider\">\r\n\t\t\t\t\t<div id=\"divider-touch-area\" tabindex=\"0\" @keydown=${this.#onKeydown}></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<slot name=\"end\" @slotchange=${this.#onSlotChanged} style=\"width: ${this._hasEndPanel ? '100%' : '0'}\"></slot>\r\n\t\t\t</div>\r\n\t\t`;\r\n\t}\r\n\tstatic override styles = css`\r\n\t\t:host {\r\n\t\t\tdisplay: contents;\r\n\t\t\t--umb-split-panel-initial-position: 50%;\r\n\t\t\t--umb-split-panel-start-min-width: 0;\r\n\t\t\t--umb-split-panel-end-min-width: 0;\r\n\t\t\t--umb-split-panel-divider-touch-area-width: 20px;\r\n\t\t\t--umb-split-panel-divider-width: 1px;\r\n\t\t\t--umb-split-panel-divider-color: transparent;\r\n\t\t\t--umb-split-panel-slot-overflow: hidden;\r\n\t\t}\r\n\t\tslot {\r\n\t\t\toverflow: var(--umb-split-panel-slot-overflow);\r\n\t\t\tdisplay: block;\r\n\t\t\tmin-height: 0;\r\n\t\t}\r\n\t\t#main {\r\n\t\t\twidth: 100%;\r\n\t\t\theight: 100%;\r\n\t\t\tdisplay: flex;\r\n\t\t\tposition: relative;\r\n\t\t\tz-index: 0;\r\n\t\t\toverflow: hidden;\r\n\t\t}\r\n\t\t#divider {\r\n\t\t\theight: 100%;\r\n\t\t\tposition: relative;\r\n\t\t\tz-index: 999999;\r\n\t\t\tdisplay: none;\r\n\t\t}\r\n\t\t#divider-touch-area {\r\n\t\t\tposition: absolute;\r\n\t\t\ttop: 0;\r\n\t\t\tleft: 5px;\r\n\t\t\theight: 100%;\r\n\t\t\twidth: var(--umb-split-panel-divider-touch-area-width);\r\n\t\t\ttransform: translateX(-50%);\r\n\t\t\tcursor: col-resize;\r\n\t\t}\r\n\t\t/* Do we want a line that shows the divider? */\r\n\t\t#divider::after {\r\n\t\t\tcontent: '';\r\n\t\t\tposition: absolute;\r\n\t\t\ttop: 0;\r\n\t\t\tleft: 50%;\r\n\t\t\twidth: var(--umb-split-panel-divider-width);\r\n\t\t\theight: 100%;\r\n\t\t\ttransform: round(translateX(-50%));\r\n\t\t\tbackground-color: var(--umb-split-panel-divider-color);\r\n\t\t\tz-index: -1;\r\n\t\t}\r\n\t`;\r\n}\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-split-panel': UmbSplitPanelElement;\r\n\t}\r\n}\r\n","import type { UmbUfmRenderElement } from '../../../ufm/components/ufm-render/index.js';\r\nimport {\r\n\tcss,\r\n\tcustomElement,\r\n\thtml,\r\n\tifDefined,\r\n\tproperty,\r\n\trepeat,\r\n\tstate,\r\n\twhen,\r\n\tLitElement,\r\n} from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\n\r\n// TODO: move to UI Library - entity actions should NOT be moved to UI Library but stay in an UmbTable element\r\nexport interface UmbTableItem {\r\n\tid: string;\r\n\ticon?: string | null;\r\n\tentityType?: string;\r\n\tdata: Array<UmbTableItemData>;\r\n}\r\n\r\nexport interface UmbTableItemData {\r\n\tcolumnAlias: string;\r\n\tvalue: any;\r\n}\r\n\r\nexport interface UmbTableColumn {\r\n\tname: string;\r\n\talias: string;\r\n\telementName?: string;\r\n\twidth?: string;\r\n\tallowSorting?: boolean;\r\n\talign?: 'left' | 'center' | 'right';\r\n\tlabelTemplate?: string;\r\n}\r\n\r\nexport interface UmbTableColumnLayoutElement extends HTMLElement {\r\n\tcolumn: UmbTableColumn;\r\n\titem: UmbTableItem;\r\n\tvalue: any;\r\n}\r\n\r\nexport interface UmbTableConfig {\r\n\tallowSelection: boolean;\r\n\thideIcon?: boolean;\r\n}\r\n\r\nexport class UmbTableSelectedEvent extends Event {\r\n\tpublic constructor() {\r\n\t\tsuper('selected', { bubbles: true, composed: true });\r\n\t}\r\n}\r\n\r\nexport class UmbTableDeselectedEvent extends Event {\r\n\tpublic constructor() {\r\n\t\tsuper('deselected', { bubbles: true, composed: true });\r\n\t}\r\n}\r\n\r\nexport class UmbTableOrderedEvent extends Event {\r\n\tpublic constructor() {\r\n\t\tsuper('ordered', { bubbles: true, composed: true });\r\n\t}\r\n}\r\n\r\n/**\r\n *  @element umb-table\r\n *  @description - Element for displaying a table\r\n *  @fires {UmbTableSelectedEvent} selected - fires when a row is selected\r\n *  @fires {UmbTableDeselectedEvent} deselected - fires when a row is deselected\r\n *  @fires {UmbTableOrderedEvent} sort - fires when a column order is changed\r\n *  @augments LitElement\r\n */\r\n@customElement('umb-table')\r\nexport class UmbTableElement extends LitElement {\r\n\t/**\r\n\t * Table Items\r\n\t * @type {Array<UmbTableItem>}\r\n\t * @memberof UmbTableElement\r\n\t */\r\n\t@property({ type: Array, attribute: false })\r\n\tpublic items: Array<UmbTableItem> = [];\r\n\r\n\t/**\r\n\t * @description Table Columns\r\n\t * @type {Array<UmbTableColumn>}\r\n\t * @memberof UmbTableElement\r\n\t */\r\n\t@property({ type: Array, attribute: false })\r\n\tpublic columns: Array<UmbTableColumn> = [];\r\n\r\n\t/**\r\n\t * @description Table Config\r\n\t * @type {UmbTableConfig}\r\n\t * @memberof UmbTableElement\r\n\t */\r\n\t@property({ type: Object, attribute: false })\r\n\tpublic config: UmbTableConfig = {\r\n\t\tallowSelection: false,\r\n\t\thideIcon: false,\r\n\t};\r\n\r\n\t/**\r\n\t * @description Table Selection\r\n\t * @type {Array<string>}\r\n\t * @memberof UmbTableElement\r\n\t */\r\n\t@property({ type: Array, attribute: false })\r\n\tpublic selection: Array<string> = [];\r\n\r\n\t@property({ type: String, attribute: false })\r\n\tpublic orderingColumn = '';\r\n\r\n\t@property({ type: Boolean, attribute: false })\r\n\tpublic orderingDesc = false;\r\n\r\n\t@state()\r\n\tprivate _selectionMode = false;\r\n\r\n\tprivate _isSelected(key: string) {\r\n\t\treturn this.selection.includes(key);\r\n\t}\r\n\r\n\tprivate _handleRowCheckboxChange(event: Event, item: UmbTableItem) {\r\n\t\tconst checkboxElement = event.target as HTMLInputElement;\r\n\t\tif (checkboxElement.checked) {\r\n\t\t\tthis._selectRow(item.id);\r\n\t\t} else {\r\n\t\t\tthis._deselectRow(item.id);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _handleAllRowsCheckboxChange(event: Event) {\r\n\t\tconst checkboxElement = event.target as HTMLInputElement;\r\n\t\tif (checkboxElement.checked) {\r\n\t\t\tthis._selectAllRows();\r\n\t\t} else {\r\n\t\t\tthis._deselectAllRows();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _handleOrderingChange(column: UmbTableColumn) {\r\n\t\tthis.orderingDesc = this.orderingColumn === column.alias ? !this.orderingDesc : false;\r\n\t\tthis.orderingColumn = column.alias;\r\n\t\tthis.dispatchEvent(new UmbTableOrderedEvent());\r\n\t}\r\n\r\n\tprivate _selectAllRows() {\r\n\t\tthis.selection = this.items.map((item: UmbTableItem) => item.id);\r\n\t\tthis._selectionMode = true;\r\n\t\tthis.dispatchEvent(new UmbTableSelectedEvent());\r\n\t}\r\n\r\n\tprivate _deselectAllRows() {\r\n\t\tthis.selection = [];\r\n\t\tthis._selectionMode = false;\r\n\t\tthis.dispatchEvent(new UmbTableDeselectedEvent());\r\n\t}\r\n\r\n\tprivate _selectRow(key: string) {\r\n\t\tthis.selection = [...this.selection, key];\r\n\t\tthis._selectionMode = this.selection.length > 0;\r\n\t\tthis.dispatchEvent(new UmbTableSelectedEvent());\r\n\t}\r\n\r\n\tprivate _deselectRow(key: string) {\r\n\t\tthis.selection = this.selection.filter((selectionKey) => selectionKey !== key);\r\n\t\tthis._selectionMode = this.selection.length > 0;\r\n\t\tthis.dispatchEvent(new UmbTableDeselectedEvent());\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<uui-table class=\"uui-text\">\r\n\t\t\t\t<uui-table-column\r\n\t\t\t\t\t.style=${when(\r\n\t\t\t\t\t\t!(this.config.allowSelection === false && this.config.hideIcon === true),\r\n\t\t\t\t\t\t() => 'width: 60px',\r\n\t\t\t\t\t)}></uui-table-column>\r\n\t\t\t\t<uui-table-head>\r\n\t\t\t\t\t${this._renderHeaderCheckboxCell()} ${this.columns.map((column) => this._renderHeaderCell(column))}\r\n\t\t\t\t</uui-table-head>\r\n\t\t\t\t${repeat(this.items, (item) => item.id, this._renderRow)}\r\n\t\t\t</uui-table>\r\n\t\t`;\r\n\t}\r\n\r\n\tprivate _renderHeaderCell(column: UmbTableColumn) {\r\n\t\treturn html`\r\n\t\t\t<uui-table-head-cell style=\"--uui-table-cell-padding: 0 var(--uui-size-5)\">\r\n\t\t\t\t${column.allowSorting\r\n\t\t\t\t\t? html`${this._renderSortingUI(column)}`\r\n\t\t\t\t\t: html`<span style=\"text-align:${column.align ?? 'left'};\">${column.name}</span>`}\r\n\t\t\t</uui-table-head-cell>\r\n\t\t`;\r\n\t}\r\n\r\n\tprivate _renderSortingUI(column: UmbTableColumn) {\r\n\t\treturn html`\r\n\t\t\t<button\r\n\t\t\t\tstyle=\"padding: var(--uui-size-5) var(--uui-size-1);\"\r\n\t\t\t\t@click=\"${() => this._handleOrderingChange(column)}\">\r\n\t\t\t\t<span style=\"text-align:${column.align ?? 'left'};\">${column.name}</span>\r\n\t\t\t\t<uui-symbol-sort ?active=${this.orderingColumn === column.alias} ?descending=${this.orderingDesc}>\r\n\t\t\t\t</uui-symbol-sort>\r\n\t\t\t</button>\r\n\t\t`;\r\n\t}\r\n\r\n\tprivate _renderHeaderCheckboxCell() {\r\n\t\tif (this.config.hideIcon && !this.config.allowSelection) return;\r\n\r\n\t\treturn html`\r\n\t\t\t<uui-table-head-cell style=\"--uui-table-cell-padding: 0; text-align: center;\">\r\n\t\t\t\t${when(\r\n\t\t\t\t\tthis.config.allowSelection,\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t\thtml` <uui-checkbox\r\n\t\t\t\t\t\t\tlabel=\"Select All\"\r\n\t\t\t\t\t\t\tstyle=\"padding: var(--uui-size-4) var(--uui-size-5);\"\r\n\t\t\t\t\t\t\t@change=\"${this._handleAllRowsCheckboxChange}\"\r\n\t\t\t\t\t\t\t?checked=\"${this.selection.length === this.items.length}\">\r\n\t\t\t\t\t\t</uui-checkbox>`,\r\n\t\t\t\t)}\r\n\t\t\t</uui-table-head-cell>\r\n\t\t`;\r\n\t}\r\n\r\n\tprivate _renderRow = (item: UmbTableItem) => {\r\n\t\treturn html`\r\n\t\t\t<uui-table-row\r\n\t\t\t\t?selectable=\"${this.config.allowSelection}\"\r\n\t\t\t\t?select-only=${this._selectionMode}\r\n\t\t\t\t?selected=${this._isSelected(item.id)}\r\n\t\t\t\t@selected=${() => this._selectRow(item.id)}\r\n\t\t\t\t@deselected=${() => this._deselectRow(item.id)}>\r\n\t\t\t\t${this._renderRowCheckboxCell(item)} ${this.columns.map((column) => this._renderRowCell(column, item))}\r\n\t\t\t</uui-table-row>\r\n\t\t`;\r\n\t};\r\n\r\n\tprivate _renderRowCheckboxCell(item: UmbTableItem) {\r\n\t\tif (this.config.hideIcon && !this.config.allowSelection) return;\r\n\r\n\t\treturn html`\r\n\t\t\t<uui-table-cell style=\"text-align: center;\">\r\n\t\t\t\t${when(!this.config.hideIcon, () => html`<umb-icon name=\"${ifDefined(item.icon ?? undefined)}\"></umb-icon>`)}\r\n\t\t\t\t${when(\r\n\t\t\t\t\tthis.config.allowSelection,\r\n\t\t\t\t\t() => html`\r\n\t\t\t\t\t\t<uui-checkbox\r\n\t\t\t\t\t\t\tlabel=\"Select Row\"\r\n\t\t\t\t\t\t\t@click=${(e: PointerEvent) => e.stopPropagation()}\r\n\t\t\t\t\t\t\t@change=${(event: Event) => this._handleRowCheckboxChange(event, item)}\r\n\t\t\t\t\t\t\t?checked=\"${this._isSelected(item.id)}\">\r\n\t\t\t\t\t\t</uui-checkbox>\r\n\t\t\t\t\t`,\r\n\t\t\t\t)}\r\n\t\t\t</uui-table-cell>\r\n\t\t`;\r\n\t}\r\n\r\n\tprivate _renderRowCell(column: UmbTableColumn, item: UmbTableItem) {\r\n\t\treturn html`\r\n\t\t\t<uui-table-cell\r\n\t\t\t\tstyle=\"--uui-table-cell-padding: 0 var(--uui-size-5); text-align:${column.align ?? 'left'}; width: ${column.width || 'auto'};\">\r\n\t\t\t\t\t${this._renderCellContent(column, item)}\r\n\t\t\t</uui-table-cell>\r\n\t\t</uui-table-cell>\r\n\t\t`;\r\n\t}\r\n\r\n\tprivate _renderCellContent(column: UmbTableColumn, item: UmbTableItem) {\r\n\t\tconst value = item.data.find((data) => data.columnAlias === column.alias)?.value;\r\n\r\n\t\tif (column.elementName) {\r\n\t\t\tconst element = document.createElement(column.elementName) as UmbTableColumnLayoutElement;\r\n\t\t\telement.column = column;\r\n\t\t\telement.item = item;\r\n\t\t\telement.value = value;\r\n\t\t\treturn element;\r\n\t\t}\r\n\r\n\t\tif (column.labelTemplate) {\r\n\t\t\timport('@umbraco-cms/backoffice/ufm');\r\n\t\t\tconst element = document.createElement('umb-ufm-render') as UmbUfmRenderElement;\r\n\t\t\telement.inline = true;\r\n\t\t\telement.markdown = column.labelTemplate;\r\n\t\t\telement.value = { value };\r\n\t\t\treturn element;\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\theight: fit-content;\r\n\t\t\t}\r\n\r\n\t\t\tuui-table {\r\n\t\t\t\tbox-shadow: var(--uui-shadow-depth-1);\r\n\t\t\t}\r\n\r\n\t\t\tuui-table-head {\r\n\t\t\t\tposition: sticky;\r\n\t\t\t\ttop: 0;\r\n\t\t\t\tz-index: 1;\r\n\t\t\t\tbackground-color: var(--uui-color-surface, #fff);\r\n\t\t\t}\r\n\r\n\t\t\tuui-table-row uui-checkbox {\r\n\t\t\t\tdisplay: none;\r\n\t\t\t}\r\n\r\n\t\t\tuui-table-row[selectable]:focus umb-icon,\r\n\t\t\tuui-table-row[selectable]:focus-within umb-icon,\r\n\t\t\tuui-table-row[selectable]:hover umb-icon,\r\n\t\t\tuui-table-row[select-only] umb-icon {\r\n\t\t\t\tdisplay: none;\r\n\t\t\t}\r\n\r\n\t\t\tuui-table-row[selectable]:focus uui-checkbox,\r\n\t\t\tuui-table-row[selectable]:focus-within uui-checkbox,\r\n\t\t\tuui-table-row[selectable]:hover uui-checkbox,\r\n\t\t\tuui-table-row[select-only] uui-checkbox {\r\n\t\t\t\tdisplay: inline-block;\r\n\t\t\t}\r\n\r\n\t\t\tuui-table-head-cell:focus,\r\n\t\t\tuui-table-head-cell:focus-within,\r\n\t\t\tuui-table-head-cell:hover {\r\n\t\t\t\t--uui-symbol-sort-hover: 1;\r\n\t\t\t}\r\n\r\n\t\t\tuui-table-head-cell button {\r\n\t\t\t\tpadding: 0;\r\n\t\t\t\tbackground-color: transparent;\r\n\t\t\t\tcolor: inherit;\r\n\t\t\t\tborder: none;\r\n\t\t\t\tcursor: pointer;\r\n\t\t\t\tfont-weight: inherit;\r\n\t\t\t\tfont-size: inherit;\r\n\t\t\t\tdisplay: inline-flex;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tjustify-content: space-between;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t}\r\n\r\n\t\t\tuui-table-head-cell button > span {\r\n\t\t\t\tflex: 1 0 auto;\r\n\t\t\t}\r\n\r\n\t\t\tuui-table-cell umb-icon {\r\n\t\t\t\tvertical-align: top;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbTableElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-table': UmbTableElement;\r\n\t}\r\n}\r\n"],"names":["_UmbBackofficeModalContainerElement_instances","createModalElements_fn","onCloseEnd_fn","renderModal_fn","UmbBackofficeModalContainerElement","UmbLitElement","__privateAdd","UMB_MODAL_MANAGER_CONTEXT","instance","modals","__privateMethod","html","repeat","modal","oldValue","oldModal","modalContext","modalElement","UmbModalElement","key","nothing","UmbTextStyles","css","__decorateClass","state","property","customElement","UmbBackofficeNotificationContainerElement","UMB_NOTIFICATION_CONTEXT","notifications","notification","query","_hasNodes","_onScroll","_UmbBodyLayoutElement_instances","setSlotVisibility_fn","UmbBodyLayoutElement","LitElement","__privateGet","target","hasChildren","_UmbCodeBlockElement_instances","renderHeader_fn","UmbCodeBlockElement","text","when","_UmbDropdownElement_instances","onToggle_fn","UmbDropdownElement","_changedProperties","event","_sectionSidebarContext","_entityContext","_UmbEntityActionsBundleElement_instances","observeEntityActions_fn","createFirstActionApi_fn","openContextMenu_fn","onFirstActionClick_fn","onActionExecuted_fn","onDropdownClick_fn","renderMore_fn","renderFirstAction_fn","UmbEntityActionsBundleElement","UmbEntityContext","UMB_SECTION_SIDEBAR_CONTEXT","sectionContext","__privateSet","UmbExtensionsManifestInitializer","umbExtensionsRegistry","ext","actions","createExtensionApi","ifDefined","UmbFooterLayoutElement","manifest","UmbHeaderAppButtonElement","UmbHistoryItemElement","UmbHistoryListElement","_color","_fallbackColor","_UmbIconElement_instances","updateColorStyle_fn","UmbIconElement","value","icon","color","styleMap","variable","extractUmbColorVariable","styling","_dataTypeModal","_propertyEditorUiAlias","_UmbInputCollectionConfigurationElement_instances","setValue_fn","clearDataType_fn","createDataType_fn","editDataType_fn","renderCreate_fn","renderConfigured_fn","UmbInputCollectionConfigurationElement","UmbFormControlMixin","UmbModalRouteRegistrationController","UMB_DATA_TYPE_PICKER_FLOW_DATA_TYPE_PICKER_MODAL","routingInfo","submitData","routeBuilder","UMB_DATATYPE_WORKSPACE_MODAL","params","UMB_DATA_TYPE_ENTITY_TYPE","UmbChangeEvent","_UmbInputColorElement_instances","onChange_fn","renderColors_fn","UmbInputColorElement","UUIFormControlMixin","map","swatch","UmbInputDateElement","UUIInputElement","type","_UmbInputDropdownListElement_instances","UmbInputDropdownListElement","_sorter","_min","_max","_pickerContext","_UmbInputEntityElement_instances","observePickerContext_fn","openPicker_fn","removeItem_fn","renderAddButton_fn","renderItems_fn","renderItem_fn","UmbInputEntityElement","UmbSorterController","element","modelEntry","model","uniques","selectionString","splitStringToArray","ctor","selection","selectedItems","item","_UmbInputEyeDropperElement_instances","UmbInputEyeDropperElement","swatches","_extensions","_extensionType","_UmbInputManifestElement_instances","observeExtensions_fn","onClick_fn","UmbInputManifestElement","extensions","a","b","modalValue","UMB_ITEM_PICKER_MODAL","_UmbInputNumberRangeElement_instances","onMinInput_fn","onMaxInput_fn","getNumberOrUndefined","num","UmbInputNumberRangeElement","newValue","valueString","splittedValue","x","_value","_UmbInputRadioButtonListElement_instances","renderRadioButton_fn","UmbInputRadioButtonListElement","UUIRadioElement","classMap","_UmbInputSliderElement_instances","renderSlider_fn","renderRangeSlider_fn","UmbInputSliderElement","_checked","_UmbInputToggleElement_instances","UmbInputToggleElement","toggle","label","_UmbInputWithAliasElement_instances","onNameChange_fn","onAliasChange_fn","onAliasBlur_fn","onToggleAliasLock_fn","UmbInputWithAliasElement","UMB_VALIDATION_EMPTY_LOCALIZATION_KEY","nameLabel","aliasLabel","UUIInputEvent","generateAlias","_UmbMultipleColorPickerInputElement_instances","onAdd_fn","focusNewItem_fn","deleteItem_fn","UmbMultipleColorPickerInputElement","UMB_PROPERTY_DATASET_CONTEXT","workspace","items","currentIndex","index","itemIndex","_UmbMultipleColorPickerItemInputElement_instances","onDelete_fn","onLabelInput_fn","onLabelKeydown_fn","onLabelChange_fn","onValueKeydown_fn","onValueChange_fn","onValueInput_fn","onColorChange_fn","onValid_fn","onInvalid_fn","onColorClick_fn","UmbMultipleColorPickerItemInputElement","umbConfirmModal","UmbDeleteEvent","UmbInputEvent","_disabled","_readonly","_UmbInputMultipleTextStringElement_instances","onInput_fn","UmbInputMultipleTextStringElement","_UmbInputMultipleTextStringItemElement_instances","onKeydown_fn","UmbInputMultipleTextStringItemElement","UmbPopoverLayoutElement","_iconElement","UmbRefItemElement","UmbElementMixin","UUIRefNodeElement","UmbStackElement","_lockedPanelWidth","_SNAP_THRESHOLD","_UmbSplitPanelElement_instances","hasBothPanels_get","_hasInitialized","setPosition_fn","updateSplit_fn","_onDragStart","disconnect_fn","connect_fn","onSlotChanged_fn","UmbSplitPanelElement","move","clientX","left","width","localPos","clamp","mappedPos","mapXAxisToSnap","stop","xPos","containerWidth","snaps","closestSnap","snap","snapPx","prev","curr","pos","lockedPanelWidth","percentagePos","maxStartWidth","maxEndWidth","resolve","dividerLeft","mainLeft","mainWidth","slot","name","percentageFromWidth","step","toPixels","newPos","UmbTableSelectedEvent","UmbTableDeselectedEvent","UmbTableOrderedEvent","UmbTableElement","column","selectionKey","e","data"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;oPAAAA,IAAAC,IAAAC,IAAAC;AAQa,IAAAC,KAAN,cAAiDC,EAAc;AAAA,EAYrE,cAAc;AACP,UAAA,GAbDC,GAAA,MAAAN,EAAA,GAEE,KAAA,uCAAqD,IAAI,GAGjE,KAAA,UAAkC,CAAC,GAGlB,KAAA,iBAAA,IAOX,KAAA,eAAeO,IAA2B,CAACC,MAAa;AAE5D,WAAK,gBAAgBA,GACrB,KAAK,eAAe;AAAA,IAAA,CACpB;AAAA,EAAA;AAAA,EAGM,iBAAiB;AACpB,IAAC,KAAK,iBACV,KAAK,QAAQ,KAAK,cAAc,QAAQ,CAACC,MAAW;AACnDC,MAAAA,GAAA,MAAKV,QAAL,KAA0B,MAAAS,CAAA;AAAA,IAAA,CAC1B;AAAA,EAAA;AAAA,EA4DO,SAAS;AACV,WAAAE;AAAA;AAAA,MAEH,KAAK,QAAQ,SAAS,IACrBC;AAAA,MACA,KAAK;AAAA,MACL,CAACC,MAAUA,EAAM;AAAA,MACjB,CAACA,MAAUH,GAAK,MAAAV,IAAAG,EAAA,EAAL,WAAkBU,EAAM,GAAA;AAAA,IAAA,IAEnC,EAAE;AAAA;AAAA;AAAA,EAAA;AAuBT;AAtHOb,KAAA,oBAAA,QAAA;AAkCNC,KAAoB,SAACQ,GAAgC;AACpD,OAAK,iBAAiB;AACtB,QAAMK,IAAW,KAAK;AAWlB,EAVJ,KAAK,UAAUL,GAEGK,EAAS,OAAO,CAACC,MAAa,CAACN,EAAO,KAAK,CAACI,MAAUA,EAAM,QAAQE,EAAS,GAAG,CAAC,EAEzF,QAAQ,CAACF,MAAU;AAE5B,SAAK,iBAAiB,IAAIA,EAAM,GAAG,GAAG,oBAAoB,aAAaH,GAAA,MAAKV,IAAYE,EAAA,EAAA,KAAK,MAAMW,EAAM,GAAG,CAAC,GACxG,KAAA,iBAAiB,OAAOA,EAAM,GAAG;AAAA,EAAA,CACtC,GAEG,KAAK,QAAQ,WAAW,KAKvB,KAAA,QAAQ,QAAQ,OAAOG,MAAiB;AAC5C,QAAI,KAAK,iBAAiB,IAAIA,EAAa,GAAG,EAAG;AAE3C,UAAAC,IAAe,IAAIC,GAAgB;AACnC,UAAAD,EAAa,KAAKD,CAAY,GAEvBC,EAAA,SAAS,iBAAiB,aAAaP,GAAA,MAAKV,QAAY,KAAK,MAAMgB,EAAa,GAAG,CAAC,GACpFA,EAAA,iBAAiB,eAAeN,GAAK,MAAAV,IAAAE,EAAA,EAAY,KAAK,MAAMc,EAAa,GAAG,CAAC,GAE1F,KAAK,iBAAiB,IAAIA,EAAa,KAAKC,CAAY,GAGpDD,EAAa,uBAChB,KAAK,iBAAiB,IACjB,KAAA,YACF,eAAe,WAAW,GAC1B,MAAM,YAAY,yBAAyBA,EAAa,kBAAkB,IAG9E,KAAK,cAAc,kBAAkB;AAAA,EAAA,CACrC;AACF;AAEAd,KAAW,SAACiB,GAAa;AACnB,OAAA,eAAe,OAAOA,CAAG;AAC/B;AAEAhB,KAAY,SAACgB,GAAa;AACzB,QAAMF,IAAe,KAAK,iBAAiB,IAAIE,CAAG;AAC9C,SAACF,IAEEA,EAAa,OAAO,IAFDG;AAG3B;AApFYhB,GAoGI,SAAyB;AAAA,EACxCiB;AAAA,EACAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeD;AAnHQC,GAAA;AAAA,EADPC,EAAM;AAAA,GADKpB,GAEJ,WAAA,oBAAA,CAAA;AAGRmB,GAAA;AAAA,EADCC,EAAM;AAAA,GAJKpB,GAKZ,WAAA,WAAA,CAAA;AAGAmB,GAAA;AAAA,EADCE,EAAS,EAAE,MAAM,SAAS,SAAS,IAAM,WAAW,kBAAmB,CAAA;AAAA,GAP5DrB,GAQZ,WAAA,kBAAA,CAAA;AARYA,KAANmB,GAAA;AAAA,EADNG,EAAc,gCAAgC;AAAA,GAClCtB,EAAA;;;;;;ACAA,IAAAuB,KAAN,cAAwDtB,EAAc;AAAA,EAS5E,cAAc;AACP,UAAA,GAED,KAAA,eAAeuB,IAA0B,CAACpB,MAAa;AAC3D,WAAK,uBAAuBA,GAC5B,KAAK,sBAAsB;AAAA,IAAA,CAC3B;AAAA,EAAA;AAAA,EAGM,wBAAwB;AAC3B,IAAC,KAAK,wBAEV,KAAK,QAAQ,KAAK,qBAAqB,eAAe,CAACqB,MAAkB;AACxE,WAAK,iBAAiBA,GAMtB,KAAK,uBAAuB,cAAc,GAI1C,KAAK,uBAAuB,cAAc;AAAA,IAAA,CAC1C;AAAA,EAAA;AAAA,EAGO,SAAS;AACV,WAAAlB;AAAA;AAAA,MAEH,KAAK,iBACJC;AAAA,MACA,KAAK;AAAA,MACL,CAACkB,MAAyCA,EAAa;AAAA,MACvD,CAACA,MAAiBnB,IAAOmB,EAAa,OAAO;AAAA,IAAA,IAE7C,EAAE;AAAA;AAAA;AAAA,EAAA;AAyBT;AAtEaH,GAkDI,SAAyB;AAAA,EACxCN;AAAA,EACAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBD;AAnEQC,GAAA;AAAA,EADPQ,EAAM,gBAAgB;AAAA,GADXJ,GAEJ,WAAA,yBAAA,CAAA;AAGAJ,GAAA;AAAA,EADPC,EAAM;AAAA,GAJKG,GAKJ,WAAA,kBAAA,CAAA;AALIA,KAANJ,GAAA;AAAA,EADNG,EAAc,uCAAuC;AAAA,GACzCC,EAAA;;;;;;;uUCRbK,IAAAC,IAAAC,IAAAC;AA6Ba,IAAAC,IAAN,cAAmCC,GAAW;AAAA,EAA9C,cAAA;AAAA,UAAA,GAAA,SAAA,GAAA/B,GAAA,MAAA4B,EAAA,GAKN,KAAO,WAAW,IAGlB,KAAO,oBAAoB,IAGjB,KAAA,UAAA,IAGV,KAAQ,yBAAyB,IAGjC,KAAQ,6BAA6B,IAGrC,KAAQ,8BAA8B,IAGtC,KAAQ,yBAAyB,IAGjC,KAAQ,0BAA0B,IAElC5B,GAAA,MAAA0B,IAAY,CAAC,MACJ,EAAE,OAA2B,cAAc,EAAE,SAAS,GAAM,CAAA,EAAE,SAAS,CAChF,GAgBA1B,GAAA,MAAA2B,IAAY,MAAM;AACb,MAAC,KAAK,oBACV,KAAK,gBAAgB,aAAa,KAAK,iBAAiB,YAAY,CAAC;AAAA,IAAA,CACtE;AAAA,EAAA;AAAA,EAjBS,oBAA0B;AAClC,UAAM,kBAAkB,GACpB,KAAK,qBACR,sBAAsB,MAAM;AAC3B,WAAK,kBAAkB,iBAAiB,UAAUK,GAAA,MAAKL,EAAS,CAAA;AAAA,IAAA,CAChE;AAAA,EACF;AAAA,EAGQ,uBAA6B;AACrC,UAAM,qBAAqB,GAC3B,KAAK,kBAAkB,oBAAoB,UAAUK,GAAA,MAAKL,EAAS,CAAA;AAAA,EAAA;AAAA,EAY3D,SAAS;AACV,WAAAtB;AAAA;AAAA;AAAA,sBAGa,KAAK,YACvB,KAAK,0BACL,KAAK,+BACL,KAAK,6BACF,KACA,MAAM;AAAA,MACP,KAAK,WAAWA,sBAAyB,KAAK,QAAQ,UAAUS,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,mBAK1D,CAAC,MAAa;AACtB,WAAA,yBAAyBkB,GAAK,MAAAN,EAAA,EAAL,KAAe,MAAA,CAAA,GAC7CtB,GAAA,MAAKwB,IAALC,EAAA,EAAA,KAAA,MAAwB,EAAE,QAAuB,KAAK,sBAAA;AAAA,IAAA,CACtD;AAAA;AAAA;AAAA;AAAA,mBAIa,CAAC,MAAa;AACtB,WAAA,6BAA6BG,GAAK,MAAAN,EAAA,EAAL,KAAe,MAAA,CAAA,GACjDtB,GAAA,MAAKwB,IAALC,EAAA,EAAA,KAAA,MAAwB,EAAE,QAAuB,KAAK,0BAAA;AAAA,IAAA,CACtD;AAAA;AAAA;AAAA;AAAA,mBAIa,CAAC,MAAa;AACtB,WAAA,8BAA8BG,GAAK,MAAAN,EAAA,EAAL,KAAe,MAAA,CAAA,GAClDtB,GAAA,MAAKwB,IAALC,EAAA,EAAA,KAAA,MAAwB,EAAE,QAAuB,KAAK,2BAAA;AAAA,IAAA,CACtD;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA,KAAK,UAAUxB,uCAA0CS,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA,uCAK/B,KAAK,0BAA0B,KAAK,0BAA0B,KAAK,MAAM;AAAA;AAAA;AAAA,mBAG7F,CAAC,MAAa;AACtB,WAAA,yBAAyBkB,GAAK,MAAAN,EAAA,EAAL,KAAe,MAAA,CAAA;AAAA,IAAA,CAC7C;AAAA;AAAA;AAAA;AAAA,mBAIa,CAAC,MAAa;AACtB,WAAA,0BAA0BM,GAAK,MAAAN,EAAA,EAAL,KAAe,MAAA,CAAA;AAAA,IAAA,CAC9C;AAAA;AAAA;AAAA,EAAA;AA6FN;AA7KCA,KAAA,oBAAA,QAAA;AAkBAC,KAAA,oBAAA,QAAA;AA9CMC,KAAA,oBAAA,QAAA;AAmDNC,KAAkB,SAACI,GAAqBC,GAAsB;AACtD,EAAAD,EAAA,MAAM,UAAUC,IAAc,SAAS;AAC/C;AArDYJ,EAiHI,SAAS;AAAA,EACxBf;AAAA,EACAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqFD;AAtMQC,EAAA;AAAA,EADPQ,EAAM,OAAO;AAAA,GADFK,EAEJ,WAAA,oBAAA,CAAA;AAGDb,EAAA;AAAA,EADNE,EAAS;AAAA,GAJEW,EAKL,WAAA,YAAA,CAAA;AAGAb,EAAA;AAAA,EADNE,EAAS,EAAE,MAAM,SAAS,SAAS,IAAM,WAAW,qBAAsB,CAAA;AAAA,GAP/DW,EAQL,WAAA,qBAAA,CAAA;AAGPb,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAVfW,EAWZ,WAAA,WAAA,CAAA;AAGQb,EAAA;AAAA,EADPC,EAAM;AAAA,GAbKY,EAcJ,WAAA,0BAAA,CAAA;AAGAb,EAAA;AAAA,EADPC,EAAM;AAAA,GAhBKY,EAiBJ,WAAA,8BAAA,CAAA;AAGAb,EAAA;AAAA,EADPC,EAAM;AAAA,GAnBKY,EAoBJ,WAAA,+BAAA,CAAA;AAGAb,EAAA;AAAA,EADPC,EAAM;AAAA,GAtBKY,EAuBJ,WAAA,0BAAA,CAAA;AAGAb,EAAA;AAAA,EADPC,EAAM;AAAA,GAzBKY,EA0BJ,WAAA,2BAAA,CAAA;AA1BIA,IAANb,EAAA;AAAA,EADNG,EAAc,iBAAiB;AAAA,GACnBU,CAAA;;;;;;;oPC7BbK,IAAAC;AAUa,IAAAC,KAAN,cAAkCN,GAAW;AAAA,EAA7C,cAAA;AAAA,UAAA,GAAA,SAAA,GAAA/B,GAAA,MAAAmC,EAAA,GAEK,KAAA,WAAA,IAGJ,KAAA,OAAA,IAGP,KAAQ,aAAiC;AAAA,EAAA;AAAA,EAEzC,MAAM,WAAW;AAChB,UAAMG,IAAO,KAAK;AAClB,IAAIA,MACG,MAAA,UAAU,UAAU,UAAUA,CAAI,GACxC,KAAK,aAAa,WAClB,WAAW,MAAM;AAChB,WAAK,aAAa;AAAA,OAChB,GAAI;AAAA,EACR;AAAA,EAGQ,SAAS;AACV,WAAAjC;AAAA,KACJD,GAAA,MAAK+B,QAAL,KAAoB,IAAA,CAAA;AAAA;AAAA;AAAA,EAAA;AAwFzB;AA/GOA,KAAA,oBAAA,QAAA;AA4BNC,KAAa,WAAG;AACf,MAAI,GAAC,KAAK,YAAY,CAAC,KAAK;AACrB,WAAA/B;AAAA;AAAA,sBAEa,KAAK,QAAQ;AAAA,MAC7BkC;AAAA,MACD,KAAK;AAAA,MACL,MAAMlC;AAAA,0BACe,KAAK,eAAe,SAAS,YAAY,UAAU,WAAW,KAAK,QAAQ;AAAA,SAC5FkC;AAAA,QACD,KAAK,eAAe;AAAA,QACpB,MAAMlC;AAAA,QACN,MACCA;AAAA,MACD,CAAA;AAAA;AAAA;AAAA,IAGH,CAAA;AAAA;AAAA;AAGJ;AAhDYgC,GAkDa,SAAS;AAAA,EACjCtB;AAAA,EACAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0DD;AA5GAC,GAAA;AAAA,EADCE,EAAS;AAAA,GADEkB,GAEZ,WAAA,YAAA,CAAA;AAGApB,GAAA;AAAA,EADCE,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAJfkB,GAKZ,WAAA,QAAA,CAAA;AAGQpB,GAAA;AAAA,EADPC,EAAM;AAAA,GAPKmB,GAQJ,WAAA,cAAA,CAAA;AARIA,KAANpB,GAAA;AAAA,EADNG,EAAc,gBAAgB;AAAA,GAClBiB,EAAA;;;;;;;oPCVbG,IAAAC;AAaa,IAAAC,IAAN,cAAiC3C,EAAc;AAAA,EAA/C,cAAA;AAAA,UAAA,GAAA,SAAA,GAAAC,GAAA,MAAAwC,EAAA,GAIC,KAAA,OAAA,IAGC,KAAA,QAAA,IAGiB,KAAA,OAAA,WAGE,KAAA,QAAA,WAGY,KAAA,YAAA,gBAG7B,KAAA,UAAA,IAGG,KAAA,aAAA;AAAA,EAAA;AAAA,EAEM,QAAQG,GAA6E;AACvG,UAAM,QAAQA,CAAkB,GAC5BA,EAAmB,IAAI,MAAM,KAAK,KAAK,4BACtC,KAAK,OAIR,KAAK,wBAAwB,YAAY,IAKzC,KAAK,wBAAwB,YAAY;AAAA,EAE3C;AAAA,EAUQ,SAAS;AACV,WAAAtC;AAAA;AAAA;AAAA;AAAA,YAIG,KAAK,IAAI;AAAA,aACR,KAAK,KAAK;AAAA,aACV,KAAK,KAAK;AAAA,eACR,KAAK,OAAO;AAAA;AAAA,MAErBkC;AAAA,MACD,CAAC,KAAK;AAAA,MACN,MAAMlC,gDAAmD,KAAK,IAAI;AAAA,IAClE,CAAA;AAAA;AAAA,6DAEwD,KAAK,SAAS,YAAYD,GAAA,MAAKoC,IAASC,EAAA,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAuBrG;AAtFOD,KAAA,oBAAA,QAAA;AAyCNC,KAAS,SAACG,GAAoB;AAIxB,OAAA,OAAOA,EAAM,aAAa;AAChC;AA9CYF,EAuEI,SAAS;AAAA,EACxB3B;AAAA,EACAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYD;AAnFAC,EAAA;AAAA,EADCQ,EAAM,mBAAmB;AAAA,GADdiB,EAEZ,WAAA,2BAAA,CAAA;AAEAzB,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAH9BuB,EAIZ,WAAA,QAAA,CAAA;AAGAzB,EAAA;AAAA,EADCE,EAAS;AAAA,GANEuB,EAOZ,WAAA,SAAA,CAAA;AAGAzB,EAAA;AAAA,EADCE,EAAS;AAAA,GATEuB,EAUZ,WAAA,QAAA,CAAA;AAGAzB,EAAA;AAAA,EADCE,EAAS;AAAA,GAZEuB,EAaZ,WAAA,SAAA,CAAA;AAGAzB,EAAA;AAAA,EADCE,EAAS;AAAA,GAfEuB,EAgBZ,WAAA,aAAA,CAAA;AAGAzB,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAlBfuB,EAmBZ,WAAA,WAAA,CAAA;AAGAzB,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,SAAS,WAAW,cAAe,CAAA;AAAA,GArBzCuB,EAsBZ,WAAA,cAAA,CAAA;AAtBYA,IAANzB,EAAA;AAAA,EADNG,EAAc,cAAc;AAAA,GAChBsB,CAAA;;;;;;;kZCbbG,IAAAC,IAAAC,GAAAC,IAAAC,IAAAC,IAAAC,IAAAC,IAAAC,IAAAC,IAAAC;AAWa,IAAAC,IAAN,cAA4CzD,EAAc;AAAA,EA8BhE,cAAc;AACP,UAAA,GA/BDC,GAAA,MAAA+C,CAAA,GAWN,KAAQ,mBAAmB,GAYT,KAAA,kBAAA,IAElB/C,GAAA,MAAA6C,EAAA,GAGiB7C,GAAA,MAAA8C,IAAA,IAAIW,GAAiB,IAAI,CAAA,GAKpC,KAAA,eAAeC,IAA6B,CAACC,MAAmB;AACpEC,MAAAA,GAAA,MAAKf,IAAyBc,CAAA;AAAA,IAAA,CAC9B;AAAA,EAAA;AAAA,EAGiB,QAAQhB,GAA6E;AACvG,IAAIA,EAAmB,IAAI,YAAY,KAAKA,EAAmB,IAAI,QAAQ,MACrEX,GAAA,MAAAc,EAAA,EAAe,cAAc,KAAK,UAAU,GACjDd,GAAA,MAAKc,EAAe,EAAA,UAAU,KAAK,UAAU,IAAI,GACjD1C,GAAA,MAAK2C,GAALC,EAAA,EAAA,KAAA,IAAA;AAAA,EACD;AAAA,EA+DQ,SAAS;AACb,WAAA,KAAK,qBAAqB,IAAUlC,IACjCT,mCAAsCD,GAAK,MAAA2C,GAAAO,EAAA,EAAL,UAAkB,IAAIlD,GAAA,MAAK2C,OAAL,KAAyB,IAAA,CAAA;AAAA,EAAA;AAgC9F;AAnHCF,KAAA,oBAAA,QAAA;AAGAC,KAAA,oBAAA,QAAA;AA5BMC,IAAA,oBAAA,QAAA;AA8CNC,KAAqB,WAAG;AACnB,MAAAa;AAAA,IACH;AAAA,IACAC;AAAA,IACA;AAAA,IACA,CAACC,MAAQA,EAAI,eAAe,SAAS,KAAK,UAAW;AAAA,IACrD,OAAOC,MAAY;AAClB,WAAK,mBAAmBA,EAAQ,QAChC,KAAK,uBACJ,KAAK,mBAAmB,IAAKA,EAAQ,CAAC,EAAE,WAA+C,QACxF5D,GAAA,MAAK2C,GAALE,EAAA,EAAA,KAAA,IAAA;AAAA,IACD;AAAA,IACA;AAAA,EACD;AACD;AAEMA,KAAqB,iBAAG;AACzB,EAAC,KAAK,yBACV,KAAK,kBAAkB,MAAMgB,GAAmB,MAAM,KAAK,sBAAsB;AAAA,IAChF,EAAE,QAAQ,KAAK,QAAQ,YAAY,KAAK,YAAY,MAAM,KAAK,qBAAqB,KAAK;AAAA,EAAA,CACzF,GAED,KAAK,mBAAmB,MAAM,KAAK,iBAAiB,QAAQ;AAC7D;AAEAf,KAAgB,WAAG;AAClB,MAAI,CAAC,KAAK,WAAkB,OAAA,IAAI,MAAM,4BAA4B;AAClE,MAAI,KAAK,WAAW,OAAiB,OAAA,IAAI,MAAM,uBAAuB;AAEtE,EAAIlB,SAAKa,EAAwB,IAC3Bb,GAAA,MAAAa,EAAA,EAAuB,kBAAkB,MAAM;AAAA,IACnD,YAAY,KAAK;AAAA,IACjB,QAAQ,KAAK;AAAA,IACb,UAAU,KAAK;AAAA,EAAA,CACf,IAEI,KAAA,kBAAkB,CAAC,KAAK;AAE/B;AAEMM,KAAmB,eAACP,GAAqB;AAI9C,EAHAZ,GAAA,MAAKa,KAAwB,iBAAiB,GAG1C,MAAK,qBAITD,EAAM,gBAAgB,GAChB,MAAA,KAAK,iBAAiB,QAAQ;AACrC;AAEAQ,KAAiB,WAAG;AACnB,OAAK,kBAAkB;AACxB;AAEAC,KAAgB,SAACT,GAAc;AAC9B,EAAAA,EAAM,gBAAgB;AACvB;AAOAU,KAAW,WAAG;AACT,SAAA,KAAK,qBAAqB,IAAUxC,IAEpCkB,SAAKa,EAAwB,IACzBxC,uBAA0BD,SAAK2C,GAAgBG,EAAA,CAAA;AAAA;AAAA,oBAKhD7C;AAAA,yBACgB,KAAK,eAAe,WAAWD,GAAA,MAAK2C,GAAgBM,EAAA,CAAA;AAAA;AAAA;AAAA,wBAGrDjD,SAAK2C,GAAiBK,EAAA,CAAA;AAAA,mBAC3B,KAAK,UAAU;AAAA,eACnB,KAAK,MAAM;AAAA;AAAA;AAGzB;AAEAG,KAAkB,WAAG;AAChB,SAAC,KAAK,kBACHlD;AAAA,WACE6D,EAAU,KAAK,sBAAsB,KAAK,KAAK,CAAC;AAAA,YAC/C9D,SAAK2C,GAAmBI,EAAA,CAAA;AAAA,WACzBe,EAAU,KAAK,gBAAgB,CAAC;AAAA,oBACvBA,EAAU,KAAK,sBAAsB,KAAK,IAAI,CAAC;AAAA,mBAL/BpD;AAOnC;AAzIAG,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,QAAQ,WAAW,cAAe,CAAA;AAAA,GADxCqC,EAEZ,WAAA,cAAA,CAAA;AAGAvC,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAJdqC,EAKZ,WAAA,UAAA,CAAA;AAGOvC,EAAA;AAAA,EADNE,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAPdqC,EAQL,WAAA,SAAA,CAAA;AAGCvC,EAAA;AAAA,EADPC,EAAM;AAAA,GAVKsC,EAWJ,WAAA,oBAAA,CAAA;AAGAvC,EAAA;AAAA,EADPC,EAAM;AAAA,GAbKsC,EAcJ,WAAA,wBAAA,CAAA;AAGAvC,EAAA;AAAA,EADPC,EAAM;AAAA,GAhBKsC,EAiBJ,WAAA,mBAAA,CAAA;AAGAvC,EAAA;AAAA,EADPC,EAAM;AAAA,GAnBKsC,EAoBJ,WAAA,oBAAA,CAAA;AAGRvC,EAAA;AAAA,EADCC,EAAM;AAAA,GAtBKsC,EAuBZ,WAAA,mBAAA,CAAA;AAvBYA,IAANvC,EAAA;AAAA,EADNG,EAAc,2BAA2B;AAAA,GAC7BoC,CAAA;;;;;;ACCA,IAAAW,KAAN,cAAqCpC,GAAW;AAAA,EAC7C,SAAS;AACV,WAAA1B;AAAA;AAAA;AAAA;AAAA,EAAA;AA4BT;AA9Ba8D,GAQI,SAAS;AAAA,EACxBpD;AAAA,EACAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBD;AA7BYmD,KAANlD,GAAA;AAAA,EADNG,EAAc,mBAAmB;AAAA,GACrB+C,EAAA;;;;;;ACLb,MAAMC,KAAqC;AAAA,EAC1C,MAAM;AAAA,EACN,OAAO;AAAA,EACP,WAAW;AAAA,EACX,WAAW;AAAA,EACX,UAAU;AAAA,IACT,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,EAAA;AAEf;AACAN,GAAsB,SAASM,EAAQ;AAG1B,IAAAC,KAAN,cAAwCtE,EAAc;AAAA,EAGnD,SAAS;AACV,WAAAM;AAAA;AAAA;AAAA,aAGI6D,EAAU,KAAK,UAAU,KAAK,KAAK,CAAC;AAAA,YACrCA,EAAU,KAAK,UAAU,KAAK,IAAI,CAAC;AAAA;AAAA,sBAEzBA,EAAU,KAAK,UAAU,KAAK,IAAI,CAAC;AAAA;AAAA;AAAA,EAAA;AAkBzD;AA5BaG,GAeI,SAAyB;AAAA,EACxCtD;AAAA,EACAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUD;AA3BYqD,KAANpD,GAAA;AAAA,EADNG,EAAc,uBAAuB;AAAA,GACzBiD,EAAA;;;;;;AChBA,IAAAC,KAAN,cAAoCvE,EAAc;AAAA,EAO/C,SAAS;AACV,WAAAM;AAAA;AAAA;AAAA;AAAA,0BAIiB,KAAK,IAAI;AAAA,4BACP,KAAK,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAyDvC;AAtEaiE,GAqBI,SAAS;AAAA,EACxBvD;AAAA,EACAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8CD;AAnEAC,GAAA;AAAA,EADCE,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GADdmD,GAEZ,WAAA,QAAA,CAAA;AAGArD,GAAA;AAAA,EADCE,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAJdmD,GAKZ,WAAA,UAAA,CAAA;AALYA,KAANrD,GAAA;AAAA,EADNG,EAAc,kBAAkB;AAAA,GACpBkD,EAAA;;;;;;ACAA,IAAAC,KAAN,cAAoCxE,EAAc;AAAA,EAC/C,SAAS;AACV,WAAAM;AAAA,EAAA;AAqCT;AAvCakE,GAKI,SAAS;AAAA,EACxBxD;AAAA,EACAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+BD;AAtCYuD,KAANtD,GAAA;AAAA,EADNG,EAAc,kBAAkB;AAAA,GACpBmD,EAAA;;;;;;;kZCLbC,IAAAC,IAAAC,IAAAC;AAYa,IAAAC,KAAN,cAA6B7E,EAAc;AAAA,EAA3C,cAAA;AAAA,UAAA,GAAA,SAAA,GAAAC,GAAA,MAAA0E,EAAA,GACN1E,GAAA,MAAAwE,EAAA,GACAxE,GAAA,MAAAyE,EAAA,GAMA,KAAQ,SAAoB,CAAC;AAAA,EAAA;AAAA,EAO7B,IAAW,MAAMI,GAAe;AAC/BjB,IAAAA,GAAA,MAAKY,IAASK,CAAA,GACdzE,GAAA,MAAKsE,IAALC,EAAA,EAAA,KAAA,IAAA;AAAA,EAAA;AAAA,EAED,IAAW,QAA4B;AAC/B,WAAA3C,GAAA,MAAKwC,OAAUxC,GAAK,MAAAyC,EAAA;AAAA,EAAA;AAAA,EAQ5B,IAAW,KAAKI,GAA2B;AACpC,UAAA,CAACC,GAAMC,CAAK,IAAIF,IAAQA,EAAM,MAAM,GAAG,IAAI,CAAC;AAClDjB,IAAAA,GAAA,MAAKa,IAAiBM,CAAA,GACtB,KAAK,QAAQD,GACb1E,GAAA,MAAKsE,IAALC,EAAA,EAAA,KAAA,IAAA;AAAA,EAAA;AAAA,EAED,IAAW,OAA2B;AACrC,WAAO,KAAK;AAAA,EAAA;AAAA,EAkBJ,SAAS;AACV,WAAAtE,mBAAsB6D,EAAU,KAAK,KAAK,CAAC,UAAUc,GAAS,KAAK,MAAM,CAAC;AAAA,EAAA;AAanF;AAlECR,KAAA,oBAAA,QAAA;AACAC,KAAA,oBAAA,QAAA;AAFMC,KAAA,oBAAA,QAAA;AAsCNC,KAAiB,WAAG;AACb,QAAAE,IAAQ7C,GAAK,MAAAwC,EAAA,KAAUxC,GAAK,MAAAyC,EAAA;AAElC,MAAI,CAACI,GAAO;AACN,SAAA,SAAS,EAAE,oBAAoB,UAAU;AAC9C;AAAA,EAAA;AAGD,QAAME,IAAQF,EAAM,QAAQ,UAAU,EAAE,GAClCI,IAAWC,GAAwBH,CAAK,GACxCI,IAAUF,IAAW,OAAOA,CAAQ,MAAMF;AAE3C,OAAA,SAAS,EAAE,oBAAoBI,EAAQ;AAC7C;AAnDYP,GAyDI,SAAS;AAAA,EACxB7D;AAAA,EACAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOD;AA7DQC,GAAA;AAAA,EADPC,EAAM;AAAA,GAJK0D,GAKJ,WAAA,SAAA,CAAA;AAGA3D,GAAA;AAAA,EADPC,EAAM;AAAA,GAPK0D,GAQJ,WAAA,UAAA,CAAA;AAOG3D,GAAA;AAAA,EADVE,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAddyD,GAeD,WAAA,SAAA,CAAA;AAaA3D,GAAA;AAAA,EADVE,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GA3BdyD,GA4BD,WAAA,QAAA,CAAA;AA5BCA,KAAN3D,GAAA;AAAA,EADNG,EAAc,UAAU;AAAA,GACZwD,EAAA;;;;;;;kZCZbQ,IAAAC,IAAAC,GAAAC,IAAAC,IAAAC,IAAAC,IAAAC,IAAAC;AAYO,IAAMC,KAAN,cAAqDC;AAAA,EAC3D/F;AACD,EAAE;AAAA,EAoBD,cAAc;AACP,UAAA,GAvBDC,GAAA,MAAAsF,CAAA,GAONtF,GAAA,MAAAoF,EAAA,GAEyBpF,GAAA,MAAAqF,IAAA,iCAAA,GAgBpB,IAAAU,GAAoC,MAAMC,EAAgD,EAC5F,kBAAkB,UAAU,EAC5B,QAAQ,CAACC,OACF;AAAA,MACN,MAAM;AAAA,QACL,uBAAuBA,EAAY;AAAA,MACpC;AAAA,MACA,OAAO;AAAA,IACR,EACA,EACA,SAAS,CAACC,MAAe;AACzB,MAAIA,GAAY,qCACf9F,GAAA,MAAKkF,GAALG,EAAA,EAAA,KAAA,IAAA,IAEArF,GAAA,MAAKkF,GAALC,EAAA,EAAA,KAAA,MAAeW,GAAY,cAAc,KAAK,gBAAgB,EAAA;AAAA,IAC/D,CACA,EACA,oBAAoB,CAACC,MAAiB;AACtC,WAAK,2BAA2BA,EAAa,EAAE,SAASnE,GAAA,MAAKqD,KAAwB;AAAA,IAAA,CACrF,GAEGzB,GAAA,MAAAwB,IAAiB,IAAIW,GAAoC,MAAMK,EAA4B,EAC9F,kBAAkB,UAAU,EAC5B,QAAQ,CAACC,OACF,EAAE,MAAM,EAAE,YAAYC,IAA2B,QAAQ,EAAE,eAAeD,EAAO,QAAQ,IAAI,EACpG,EACA,SAAS,CAACxB,MAAU;AACpBzE,MAAAA,GAAA,MAAKkF,GAALC,EAAA,EAAA,KAAA,MAAeV,GAAO,UAAU,KAAK,gBAAgB,EAAA;AAAA,IAAA,CACrD,CAAA;AAAA,EAAA;AAAA,EAlDgB,iBAAiB;AAAA,EAC5B;AAAA,EAmEC,SAAS;AACjB,WAAQ,KAAK,QAA+BzE,SAAKkF,GAALM,EAAA,EAAA,KAAA,IAAA,IAAvBxF,SAAKkF,GAALK,EAAA,EAAA,KAAA,IAAA;AAAA,EAAuB;AAsC9C;AAvGCP,KAAA,oBAAA,QAAA;AAEAC,KAAA,oBAAA,QAAA;AATMC,IAAA,oBAAA,QAAA;AAiBNC,KAAS,SAACV,GAA2B;AACpC,OAAK,QAAQA,GACR,KAAA,cAAc,IAAI0B,GAAgB;AACxC;AAoCAf,KAAc,WAAG;AAChBpF,EAAAA,GAAA,MAAKkF,OAAL,KAAe,MAAA,MAAA;AAChB;AAEAG,KAAe,WAAG;AACjBzD,EAAAA,GAAA,MAAKoD,EAAe,EAAA;AAAA,IACnB,EAAE,SAASpD,GAAA,MAAKqD,EAAuB,EAAA;AAAA,IACvC,iBAAiBiB,EAAyB;AAAA,EAC3C;AACD;AAEAZ,KAAa,WAAG;AACf1D,EAAAA,GAAA,MAAKoD,KAAgB,KAAK,IAAI,QAAQ,KAAK,KAAK,EAAE;AACnD;AAMAO,KAAa,WAAG;AACX,SAAC,KAAK,2BACHtF;AAAA;AAAA;AAAA;AAAA;AAAA,YAKG,KAAK,SAAS,KAAK,uCAAuC,CAAC;AAAA,WAC5D,KAAK,wBAAwB;AAAA,MAPKS;AAS5C;AAEA8E,KAAiB,WAAG;AACnB,SAAI,CAAC,KAAK,SAAS,CAAC,KAAK,2BAAiC9E,IACnDT;AAAA;AAAA,iDAEwC,KAAK,KAAK,UAAUD,GAAA,MAAKkF,GAAaI,EAAA,CAAA;AAAA;AAAA;AAAA,eAGxE,KAAK,SAAS,KAAK,gBAAgB,CAAC;AAAA,cACrC,KAAK,wBAAwB;AAAA,2BAChBtF,SAAKkF,GAAcE,EAAA,CAAA,UAAU,KAAK,SAAS,KAAK,gBAAgB,CAAC;AAAA;AAAA;AAAA;AAAA;AAK3F;AArGYK,GAuGI,SAAS;AAAA,EACxB7E;AAAA;AAAA;AAAA;AAAA;AAKD;AAjGQC,GAAA;AAAA,EADPC,EAAM;AAAA,GAXK2E,GAYJ,WAAA,4BAAA,CAAA;AAGR5E,GAAA;AAAA,EADCE,EAAS,EAAE,WAAW,gBAAiB,CAAA;AAAA,GAd5B0E,GAeZ,WAAA,gBAAA,CAAA;AAfYA,KAAN5E,GAAA;AAAA,EADNG,EAAc,oCAAoC;AAAA,GACtCyE,EAAA;;;;;;;oPCZbW,IAAAC,IAAAC;AAYO,IAAMC,KAAN,cAAmCC,GAAoB7G,GAAe,EAAE,EAAE;AAAA,EAA1E,cAAA;AAAA,UAAA,GAAA,SAAA,GAAAC,GAAA,MAAAwG,EAAA,GAWK,KAAA,WAAA,IAGE,KAAA,aAAA;AAAA,EAAA;AAAA,EAbM,iBAAiB;AAAA,EAC5B;AAAA,EAsBC,SAAS;AACV,WAAAnG;AAAA;AAAA,gBAEO,KAAK,QAAQ;AAAA;AAAA,YAEjB,KAAK,SAAS,EAAE;AAAA,cACdD,SAAKoG,IAASC,EAAA,CAAA;AAAA,MACtBrG,GAAA,MAAKoG,QAAL,KAAoB,IAAA,CAAA;AAAA;AAAA;AAAA,EAAA;AAc1B;AA7COA,KAAA,oBAAA,QAAA;AAmBNC,KAAS,SAAC7D,GAA8B;AAClC,OAAA,QAAQA,EAAM,OAAO,OACrB,KAAA,cAAc,IAAI2D,GAAgB;AACxC;AAcAG,KAAa,WAAG;AACX,SAAC,KAAK,WACHG;AAAA,IACN,KAAK;AAAA,IACL,CAACC,MAAWzG;AAAA,8BACeyG,EAAO,KAAK,UAAUA,EAAO,KAAK,eAAe,KAAK,UAAU;AAAA;AAAA,EAE5F,IAN2BhG;AAO5B;AAjCAG,GAAA;AAAA,EADCE,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAV9BwF,GAWZ,WAAA,YAAA,CAAA;AAGA1F,GAAA;AAAA,EADCE,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAbfwF,GAcZ,WAAA,cAAA,CAAA;AAGA1F,GAAA;AAAA,EADCE,EAAS,EAAE,MAAM,MAAO,CAAA;AAAA,GAhBbwF,GAiBZ,WAAA,YAAA,CAAA;AAjBYA,KAAN1F,GAAA;AAAA,EADNG,EAAc,iBAAiB;AAAA,GACnBuF,EAAA;;;;;;ACCA,IAAAI,KAAN,cAAkCC,GAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMxD,IAAa,KAAKC,GAAqB;AACtC,UAAM,OAAOA;AAAA,EAAA;AAAA,EAEd,IAAa,OAAsB;AAClC,WAAO,MAAM;AAAA,EAAA;AAAA,EAGd,cAAc;AACP,UAAA,GACN,KAAK,OAAO;AAAA,EAAA;AAEd;AAjBaF,KAAN9F,GAAA;AAAA,EADNG,EAAc,gBAAgB;AAAA,GAClB2F,EAAA;;;;;;;oPCbbG,IAAAT;AAOO,IAAMU,KAAN,cAA0CP,GAAoB7G,GAAe,MAAS,EAAE;AAAA,EAAxF,cAAA;AAAA,UAAA,GAAA,SAAA,GAAAC,GAAA,MAAAkH,EAAA,GAkBK,KAAA,WAAA;AAAA,EAAA;AAAA,EAKQ,iBAAiB;AACnC,WAAO,KAAK;AAAA,EAAA;AAAA,EASJ,SAAS;AACV,WAAA7G;AAAA,WACE,KAAK,SAAS,KAAK,qCAAqC,CAAC;AAAA,kBAClD,KAAK,eAAe,EAAE;AAAA,cAC1B,KAAK,WAAW,CAAE,CAAA;AAAA,aACnBD,SAAK8G,IAAST,EAAA,CAAA;AAAA,eACZ,KAAK,QAAQ;AAAA,EAAA;AAU5B;AAjDOS,KAAA,oBAAA,QAAA;AA2BNT,KAAS,SAAC,GAAmB;AAC5B,IAAE,gBAAgB,GACd,EAAE,OAAO,UAAY,KAAA,QAAQ,EAAE,OAAO,QACrC,KAAA,cAAc,IAAIF,GAAgB;AACxC;AA/BYY,GA0CI,SAAS;AAAA,EACxBnG;AAAA;AAAA;AAAA;AAAA;AAKD;AA9COC,GAAA;AAAA,EADNE,EAAS,EAAE,MAAM,MAAO,CAAA;AAAA,GADbgG,GAEL,WAAA,WAAA,CAAA;AAGAlG,GAAA;AAAA,EADNE,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAJdgG,GAKL,WAAA,eAAA,CAAA;AAIAlG,GAAA;AAAA,EADNE,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GARfgG,GASL,WAAA,YAAA,CAAA;AASPlG,GAAA;AAAA,EADCE,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAjB9BgG,GAkBZ,WAAA,YAAA,CAAA;AAGQlG,GAAA;AAAA,EADPQ,EAAM,YAAY;AAAA,GApBP0F,GAqBJ,WAAA,aAAA,CAAA;AArBIA,KAANlG,GAAA;AAAA,EADNG,EAAc,yBAAyB;AAAA,GAC3B+F,EAAA;;;;;;;iZCPbC,IAAAC,IAAAC,IAAAC,GAAAC,IAAAC,IAAAC,IAAAC,IAAAC,IAAAC,IAAAC;AAWO,IAAMC,IAAN,cAAoCjC;AAAA,EAC1C/F;AACD,EAAE;AAAA,EAsFD,cAAc;AACP,UAAA,GAzFDC,GAAA,MAAAwH,EAAA,GAGIxH,GAAA,MAAAoH,IAAA,IAAIY,GAA4B,MAAM;AAAA,MAC/C,oBAAoB,CAACC,MACbA,EAAQ;AAAA,MAEhB,kBAAkB,CAACC,MACXA;AAAA,MAER,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,mBAAmB;AAAA,MACnB,UAAU,CAAC,EAAE,OAAAC,QAAY;AACxB,aAAK,YAAYA,GACZ,KAAA,cAAc,IAAI5B,GAAgB;AAAA,MAAA;AAAA,IACxC,CACA,CAAA,GAgBcvG,GAAA,MAAAqH,IAAA,CAAA,GAGF,KAAA,aAAA,8BAYErH,GAAA,MAAAsH,IAAA,KAAA,GAMF,KAAA,aAAA,kDAgCbtH,GAAA,MAAAuH,CAAA,GAKM,KAAA;AAAA,MACJ;AAAA,MACA,MAAM,KAAK;AAAA,MACX,MAAM,CAAC,CAAC,KAAK,QAAQvF,EAAK,MAAAuF,CAAA,GAAgB,aAAa,EAAE,UAAU,KAAK,KAAK;AAAA,IAC9E,GAEK,KAAA;AAAA,MACJ;AAAA,MACA,MAAM,KAAK;AAAA,MACX,MAAM,CAAC,CAAC,KAAK,QAAQvF,EAAK,MAAAuF,CAAA,GAAgB,aAAa,EAAE,UAAU,KAAK,KAAK;AAAA,IAC9E;AAAA,EAAA;AAAA,EAlFkB,iBAAiB;AAAA,EAC5B;AAAA,EAIR,IAAW,IAAI1C,GAAe;AAC7BjB,IAAAA,GAAA,MAAKyD,IAAOxC,CAAA,GACR7C,QAAKuF,CAAgB,MACxBvF,EAAA,MAAKuF,GAAe,MAAM1C;AAAA,EAC3B;AAAA,EAED,IAAW,MAAc;AACxB,WAAO7C,EAAK,MAAAqF,EAAA;AAAA,EAAA;AAAA,EAQb,IAAW,IAAIxC,GAAe;AAC7BjB,IAAAA,GAAA,MAAK0D,IAAOzC,CAAA,GACR7C,QAAKuF,CAAgB,MACxBvF,EAAA,MAAKuF,GAAe,MAAM1C;AAAA,EAC3B;AAAA,EAED,IAAW,MAAc;AACxB,WAAO7C,EAAK,MAAAsF,EAAA;AAAA,EAAA;AAAA,EAWb,IAAW,UAAUc,GAAwB;AACvCpG,IAAAA,EAAA,MAAAuF,CAAA,GAAgB,aAAaa,CAAO,GACpCpG,EAAA,MAAAoF,EAAA,EAAQ,SAASgB,CAAO;AAAA,EAAA;AAAA,EAE9B,IAAW,YAA2B;AACrC,WAAOpG,EAAK,MAAAuF,CAAA,GAAgB,aAAa,KAAK,CAAC;AAAA,EAAA;AAAA,EAIhD,IAAoB,MAAMc,GAAqC;AACzD,SAAA,YAAYC,GAAmBD,CAAe;AAAA,EAAA;AAAA,EAEpD,IAAoB,QAA4B;AACxC,WAAA,KAAK,UAAU,SAAS,IAAI,KAAK,UAAU,KAAK,GAAG,IAAI;AAAA,EAAA;AAAA,EAI/D,IAAW,cAAcE,GAA4E;AACpG,IAAIvG,QAAKuF,CAAgB,MACzB3D,GAAA,MAAK2D,GAAiBgB,IAAO,IAAIA,EAAK,IAAI,IAAI,MAAA,GAC9CnI,GAAA,MAAKoH,IAALC,EAAA,EAAA,KAAA,IAAA;AAAA,EAAA;AAAA,EAED,IAAW,gBAAmD;AAC7D,WAAOzF,EAAK,MAAAuF,CAAA;AAAA,EAAA;AAAA,EAgDJ,SAAS;AACjB,WAAOlH,IAAOD,GAAK,MAAAoH,IAAAK,EAAA,EAAL,UAAmB,IAAIzH,GAAA,MAAKoH,QAAL,KAAuB,IAAA,CAAA;AAAA,EAAA;AA+C9D;AA7KCJ,KAAA,oBAAA,QAAA;AA8BAC,KAAA,oBAAA,QAAA;AAeAC,KAAA,oBAAA,QAAA;AAsCAC,IAAA,oBAAA,QAAA;AAtFMC,KAAA,oBAAA,QAAA;AAwGAC,KAAqB,iBAAG;AACzB,EAACzF,QAAKuF,CAAgB,MAErBvF,EAAA,MAAAuF,CAAA,EAAe,MAAM,KAAK,KAC1BvF,EAAA,MAAAuF,CAAA,EAAe,MAAM,KAAK,KAE/B,KAAK,QAAQvF,EAAA,MAAKuF,CAAe,EAAA,WAAW,CAACiB,MAAe,KAAK,QAAQA,EAAU,KAAK,GAAG,GAAI,mBAAmB,GAC7G,KAAA,QAAQxG,QAAKuF,CAAe,EAAA,eAAe,CAACkB,MAAmB,KAAK,SAASA,GAAgB,gBAAgB;AACnH;AAEAf,KAAW,WAAG;AACb1F,EAAAA,EAAA,MAAKuF,IAAgB,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,IAK/B,cAAc;AAAA,EAAA,CACd;AACF;AAEAI,KAAW,SAACe,GAA0B;AAChC1G,EAAAA,EAAA,MAAAuF,CAAA,GAAgB,kBAAkBmB,EAAK,MAAM;AACnD;AAMAd,KAAgB,WAAG;AACd,MAAA,OAAK,QAAQ,KAAK,KAAK,aAAa,KAAK,UAAU,UAAU,KAAK;AAC/D,WAAAvH;AAAA;AAAA;AAAA;AAAA,aAIID,SAAKoH,IAAWE,EAAA,CAAA;AAAA,YACjB,KAAK,SAAS,KAAK,gBAAgB,CAAC;AAAA;AAE/C;AAEAG,KAAY,WAAG;AACV,MAAC,KAAK;AACH,WAAAxH;AAAA;AAAA,MAEHC;AAAA,MACD,KAAK;AAAA,MACL,CAACoI,MAASA,EAAK;AAAA,MACf,CAACA,MAAStI,GAAK,MAAAoH,IAAAM,EAAA,EAAL,KAAiB,MAAAY,CAAA;AAAA,IAC3B,CAAA;AAAA;AAAA;AAGJ;AAEAZ,KAAW,SAACY,GAA0B;AACjC,MAAA,CAACA,EAAK,OAAQ;AAClB,QAAM5D,IAAO,KAAK,UAAU4D,CAAI,KAAKA,EAAK,QAAQ;AAC3C,SAAArI;AAAA,wBACeqI,EAAK,IAAI,OAAOA,EAAK,MAAM;AAAA,MAC7CnG,EAAKuC,GAAM,MAAMzE,+BAAkCyE,CAAI,cAAc,CAAC;AAAA;AAAA,0BAElD,MAAM1E,GAAK,MAAAoH,IAAAG,EAAA,EAAL,KAAiB,MAAAe,CAAA,CAAK,UAAU,KAAK,SAAS,KAAK,gBAAgB,CAAC;AAAA;AAAA;AAAA;AAInG;AAvKYX,EAyKI,SAAS;AAAA,EACxB/G;AAAA;AAAA;AAAA;AAAA;AAKD;AAvJWC,EAAA;AAAA,EADVE,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAvBd4G,EAwBD,WAAA,OAAA,CAAA;AAYX9G,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,QAAQ,WAAW,cAAe,CAAA;AAAA,GAnCxC4G,EAoCZ,WAAA,cAAA,CAAA;AAGW9G,EAAA;AAAA,EADVE,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAtCd4G,EAuCD,WAAA,OAAA,CAAA;AAYX9G,EAAA;AAAA,EADCE,EAAS,EAAE,WAAW,GAAO,CAAA;AAAA,GAlDlB4G,EAmDZ,WAAA,WAAA,CAAA;AAGA9G,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,QAAQ,WAAW,cAAe,CAAA;AAAA,GArDxC4G,EAsDZ,WAAA,cAAA,CAAA;AAGW9G,EAAA;AAAA,EADVE,EAAS,EAAE,MAAM,MAAO,CAAA;AAAA,GAxDb4G,EAyDD,WAAA,aAAA,CAAA;AASS9G,EAAA;AAAA,EADnBE,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAjEd4G,EAkEQ,WAAA,SAAA,CAAA;AAQT9G,EAAA;AAAA,EADVE,EAAS,EAAE,WAAW,GAAO,CAAA;AAAA,GAzElB4G,EA0ED,WAAA,iBAAA,CAAA;AAUH9G,EAAA;AAAA,EADPC,EAAM;AAAA,GAnFK6G,EAoFJ,WAAA,UAAA,CAAA;AApFIA,IAAN9G,EAAA;AAAA,EADNG,EAAc,kBAAkB;AAAA,GACpB2G,CAAA;;;;;;;oPCXbY,IAAAlC;AAOO,IAAMmC,KAAN,cAAwChC,GAAoB7G,GAAe,EAAE,EAAE;AAAA,EAA/E,cAAA;AAAA,UAAA,GAAA,SAAA,GAAAC,GAAA,MAAA2I,EAAA,GAYI,KAAA,UAAA,IAGI,KAAA,cAAA;AAAA,EAAA;AAAA,EAdK,iBAAiB;AAAA,EAC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA0BC,SAAS;AACjB,UAAME,IAAW,KAAK,cAAc,KAAK,WAAW;AAC7C,WAAAtG;AAAA,MACN,KAAK,eAAe,CAACsG;AAAA,MACrB,MAAMxI;AAAA;AAAA;AAAA,gBAGO,KAAK,OAAO;AAAA,cACd,KAAK,KAAe;AAAA,eACnBD,SAAKuI,IAASlC,EAAA,CAAA;AAAA;AAAA;AAAA,MAG1B,MAAMpG;AAAA;AAAA;AAAA,gBAGO,KAAK,OAAO;AAAA,iBACXwI,CAAS;AAAA,cACZ,KAAK,KAAe;AAAA,eACnBzI,SAAKuI,IAASlC,EAAA,CAAA;AAAA;AAAA;AAAA,IAG3B;AAAA,EAAA;AAEF;AAnDOkC,KAAA,oBAAA,QAAA;AAKNlC,KAAS,SAAC,GAA8B;AACvC,IAAE,gBAAgB,GACb,KAAA,QAAQ,EAAE,OAAO,OACjB,KAAA,cAAc,IAAIF,GAAgB;AACxC;AAGAtF,GAAA;AAAA,EADCE,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAXfyH,GAYZ,WAAA,WAAA,CAAA;AAGA3H,GAAA;AAAA,EADCE,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAdfyH,GAeZ,WAAA,eAAA,CAAA;AAGA3H,GAAA;AAAA,EADCE,EAAS,EAAE,MAAM,MAAO,CAAA;AAAA,GAjBbyH,GAkBZ,WAAA,YAAA,CAAA;AAlBYA,KAAN3H,GAAA;AAAA,EADNG,EAAc,uBAAuB;AAAA,GACzBwH,EAAA;;;;;;;kZCPbE,IAAAC,IAAAC,IAAAC,IAAAC;AAOa,IAAAC,KAAN,cAAsCpJ,EAAc;AAAA,EAApD,cAAA;AAAA,UAAA,GAAA,SAAA,GAAAC,GAAA,MAAAgJ,EAAA,GACNhJ,GAAA,MAAA8I,IAAkE,EAAC,GAEnE9I,GAAA,MAAA+I,EAAA,GAcM,KAAA,MAAA;AAAA,EAAA;AAAA,EAZN,IAAW,cAAclE,GAA2B;AACnDjB,IAAAA,GAAA,MAAKmF,IAAiBlE,CAAA,GACtBzE,GAAA,MAAK4I,IAALC,EAAA,EAAA,KAAA,IAAA;AAAA,EAAA;AAAA,EAED,IAAW,gBAAoC;AAC9C,WAAOjH,GAAK,MAAA+G,EAAA;AAAA,EAAA;AAAA,EAyCJ,SAAS;AACV,WAAA1I;AAAA;AAAA,YAEG,KAAK,SAAS,KAAK,gBAAgB,CAAC;AAAA;AAAA;AAAA,aAGnCD,SAAK4I,IAAQE,EAAA,CAAA;AAAA;AAAA,EAAA;AAY1B;AApECJ,KAAA,oBAAA,QAAA;AAEAC,KAAA,oBAAA,QAAA;AAHMC,KAAA,oBAAA,QAAA;AAmBNC,KAAkB,WAAG;AAChB,EAACjH,SAAK+G,EAAgB,KAC1B,KAAK,QAAQjF,GAAsB,OAAO9B,SAAK+G,EAAc,CAAA,GAAG,CAACK,MAAe;AAC/ExF,IAAAA,GAAA,MAAKkF,IAAcM,EAAW,KAAK,CAACC,GAAGC,MAAMD,EAAE,KAAK,cAAcC,EAAE,IAAI,KAAKD,EAAE,MAAM,cAAcC,EAAE,KAAK,CAAC,CAAA;AAAA,EAAA,CAC3G;AACF;AAEMJ,KAAQ,iBAAG;AAgBV,QAAAK,IAAa,OAfE,MAAM,KAAK,WAAWtJ,EAAyB,GAClC,KAAK,MAAMuJ,IAAuB;AAAA,IACnE,MAAM;AAAA,MACL,UAAU,GAAG,KAAK,SAAS,KAAK,gBAAgB,CAAC;AAAA,MACjD,OAAOxH,GAAA,MAAK8G,EACV,EAAA,OAAO,CAAC/E,MAAQA,EAAI,SAAS,KAAK,aAAa,EAC/C,IAAI,CAACA,OAAS;AAAA,QACd,OAAOA,EAAI;AAAA,QACX,OAAOA,EAAI;AAAA,QACX,aAAaA,EAAI;AAAA,QACjB,MAAOA,EAAY,MAAM;AAAA;AAAA,MAAA,EACxB;AAAA,IAAA;AAAA,EACJ,CACA,EAEqC,SAAS;AAE/C,EAAKwF,MAEL,KAAK,QAAQA,GAER,KAAA,cAAc,IAAIhD,GAAgB;AACxC;AAjDY4C,GA6DI,SAAS;AAAA,EACxBnI;AAAA;AAAA;AAAA;AAAA;AAAA;AAMD;AA/DWC,GAAA;AAAA,EADVE,EAAS,EAAE,MAAM,QAAQ,WAAW,iBAAkB,CAAA;AAAA,GAJ3CgI,GAKD,WAAA,iBAAA,CAAA;AASXlI,GAAA;AAAA,EADCE,EAAS,EAAE,WAAW,GAAO,CAAA;AAAA,GAblBgI,GAcZ,WAAA,SAAA,CAAA;AAGAlI,GAAA;AAAA,EADCE,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAhBdgI,GAiBZ,WAAA,OAAA,CAAA;AAjBYA,KAANlI,GAAA;AAAA,EADNG,EAAc,oBAAoB;AAAA,GACtB+H,EAAA;;;;;;;oPCPbM,IAAAC,IAAAC;AAWA,SAASC,GAAqB/E,GAAe;AACtC,QAAAgF,IAAM,SAAShF,GAAO,EAAE;AACvB,SAAA,MAAMgF,CAAG,IAAI,SAAYA;AACjC;AAGO,IAAMC,IAAN,cAAyChE,GAAoB/F,CAAa,EAAE;AAAA,EA0DlF,cAAc;AACP,UAAA,GA3DDC,GAAA,MAAAyJ,EAAA,GAEK,KAAA,WAAA,aAGA,KAAA,WAAA,cAwDL,KAAA;AAAA,MACJ;AAAA,MACA,MACQ;AAAA,MAER,MACQ,KAAK,cAAc,UAAa,KAAK,cAAc,SAAY,KAAK,YAAY,KAAK,YAAY;AAAA,IAE1G;AAAA,EAAA;AAAA,EA1DD,IAAW,SAAS5E,GAA2B;AAC9C,SAAK,YAAYA,GACjB,KAAK,YAAY;AAAA,EAAA;AAAA,EAElB,IAAW,WAAW;AACrB,WAAO,KAAK;AAAA,EAAA;AAAA,EAOb,IAAW,SAASA,GAA2B;AAC9C,SAAK,YAAYA,GACjB,KAAK,YAAY;AAAA,EAAA;AAAA,EAElB,IAAW,WAAW;AACrB,WAAO,KAAK;AAAA,EAAA;AAAA,EAML,cAAc;AACf,UAAAkF,IACL,KAAK,aAAa,KAAK,aAAa,KAAK,aAAa,MAAM,OAAO,KAAK,aAAa,MAAM;AACxF,IAAA,MAAM,UAAUA,MACnB,MAAM,QAAQA;AAAA,EACf;AAAA,EAID,IAAoB,MAAMC,GAAiC;AACtD,QAAAA,MAAgB,KAAK,OAAO;AAC/B,UAAIA,MAAgB,QAAW;AACzB,aAAA,WAAW,KAAK,WAAW;AAChC;AAAA,MAAA;AAEK,YAAAC,IAAgBD,EAAY,MAAM,OAAO;AAC/C,WAAK,WAAWJ,GAAqBK,EAAc,CAAC,CAAC,GACrD,KAAK,WAAWL,GAAqBK,EAAc,CAAC,CAAC;AAAA,IAAA;AAAA,EACtD;AAAA,EAED,IAAoB,QAA4B;AACxC,WAAA,KAAK,YAAY,KAAK,YAAY,KAAK,YAAY,MAAM,OAAO,KAAK,YAAY,MAAM;AAAA,EAAA;AAAA,EAiBtF,eAAe;AAClB,SAAA,YAAY,iBAAkC,WAAW,EAAE,QAAQ,CAACC,MAAM,KAAK,sBAAsBA,CAAC,CAAC;AAAA,EAAA;AAAA,EAGpG,QAAQ;AAChB,WAAO,KAAK,YAAY,cAA+B,WAAW,GAAG,MAAM;AAAA,EAAA;AAAA,EAenE,SAAS;AACV,WAAA7J;AAAA;AAAA;AAAA,YAGG,KAAK,QAAQ;AAAA,UACf6D,EAAU,KAAK,iBAAiB,GAAG,CAAC;AAAA,UACpCA,EAAU,KAAK,iBAAiB,GAAG,CAAC;AAAA,kBAC5B,KAAK,iBAAiB,OAAO,EAAE;AAAA,aACpC,KAAK,SAAS;AAAA,aACd9D,SAAKqJ,IAAWC,EAAA,CAAA;AAAA;AAAA;AAAA;AAAA,YAIjB,KAAK,QAAQ;AAAA,UACfxF,EAAU,KAAK,iBAAiB,GAAG,CAAC;AAAA,UACpCA,EAAU,KAAK,iBAAiB,GAAG,CAAC;AAAA,kBAC5B,KAAK,iBAAiB,OAAO,GAAG;AAAA,aACrC,KAAK,SAAS;AAAA,aACd9D,SAAKqJ,IAAWE,EAAA,CAAA;AAAA;AAAA,EAAA;AAY7B;AA1HOF,KAAA,oBAAA,QAAA;AAgFNC,KAAW,SAAC,GAA8C;AACnD,QAAA7E,IAAQ,EAAE,OAAO;AACvB,OAAK,WAAWA,IAAQ,OAAOA,CAAK,IAAI,QACnC,KAAA,cAAc,IAAI0B,GAAgB;AACxC;AAEAoD,KAAW,SAAC,GAA8C;AACnD,QAAA9E,IAAQ,EAAE,OAAO;AACvB,OAAK,WAAWA,IAAQ,OAAOA,CAAK,IAAI,QACnC,KAAA,cAAc,IAAI0B,GAAgB;AACxC;AA1FYuD,EAkHI,SAAS9I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhHzBC,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,QAAQ,WAAW,YAAa,CAAA;AAAA,GADtC2I,EAEZ,WAAA,YAAA,CAAA;AAGA7I,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,QAAQ,WAAW,YAAa,CAAA;AAAA,GAJtC2I,EAKZ,WAAA,YAAA,CAAA;AAGQ7I,EAAA;AAAA,EADPC,EAAM;AAAA,GAPK4I,EAQJ,WAAA,aAAA,CAAA;AAGG7I,EAAA;AAAA,EADVE,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAVd2I,EAWD,WAAA,YAAA,CAAA;AASH7I,EAAA;AAAA,EADPC,EAAM;AAAA,GAnBK4I,EAoBJ,WAAA,aAAA,CAAA;AAGG7I,EAAA;AAAA,EADVE,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAtBd2I,EAuBD,WAAA,YAAA,CAAA;AASX7I,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GA/Bd2I,EAgCZ,WAAA,mBAAA,CAAA;AAWoB7I,EAAA;AAAA,EADnBE,EAAS;AAAA,GA1CE2I,EA2CQ,WAAA,SAAA,CAAA;AA3CRA,IAAN7I,EAAA;AAAA,EADNG,EAAc,wBAAwB;AAAA,GAC1B0I,CAAA;;;;;;;kZCjBbK,IAAAC,IAAA3D,IAAA4D;AASO,IAAMC,KAAN,cAA6C1D,GAAoB7G,GAAe,EAAE,EAAE;AAAA,EAApF,cAAA;AAAA,UAAA,GAAA,SAAA,GAAAC,GAAA,MAAAoK,EAAA,GACWpK,GAAA,MAAAmK,IAAA,EAAA,GAWjB,KAAO,OAAkC,CAAC,GAS/B,KAAA,WAAA;AAAA,EAAA;AAAA,EAjBX,IAAoB,MAAMtF,GAAe;AACxCjB,IAAAA,GAAA,MAAKuG,IAAStF,CAAA;AAAA,EAAA;AAAA,EAEf,IAAoB,QAAgB;AACnC,WAAO7C,GAAK,MAAAmI,EAAA;AAAA,EAAA;AAAA,EAeM,iBAAiB;AAAA,EAC5B;AAAA,EAUC,SAAS;AACb,WAAC,KAAK,OAEH9J;AAAA,6BACoB,KAAK,KAAK,YAAYD,SAAKgK,IAAS3D,EAAA,CAAA,cAAc,KAAK,QAAQ;AAAA,MACtFnG;AAAA,MACD,KAAK;AAAA,MACL,CAACoI,MAASA;AAAA,MACV,CAACA,MAAStI,GAAK,MAAAgK,IAAAC,EAAA,EAAL,KAAwB,MAAA3B,CAAA;AAAA,IAClC,CAAA;AAAA;AAAA,MARoB5H;AAAA,EAQpB;AA0BL;AApECqJ,KAAA,oBAAA,QAAA;AADMC,KAAA,oBAAA,QAAA;AA2BN3D,KAAS,SAAC7D,GAAsB;AAE3B,EADJA,EAAM,gBAAgB,GAChBA,EAAM,kBAAkB2H,OACzB,KAAA,QAAQ3H,EAAM,OAAO,OACrB,KAAA,cAAc,IAAI2D,GAAgB;AACxC;AAgBA8D,KAAkB,SAAC3B,GAA6B;AACxC,SAAArI;AAAA,WACEqI,EAAK,KAAK;AAAA,WACV8B,GAAS,EAAE,SAAS,CAAC,CAAC9B,EAAK,QAAA,CAAS,CAAC;AAAA,WACrCA,EAAK,SAASA,EAAK,UAAU,KAAK,KAAK,SAAS,KAAK,yBAAyB,CAAC,MAAM,GAAG;AAAA,WACxFA,EAAK,UAAU,KAAK,SAAS,KAAK,oCAAoC,IAAI,EAAE;AACtF;AAtDY4B,GAwDa,SAAS;AAAA,EACjCtJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWD;AAhEoBC,GAAA;AAAA,EADnBE,EAAS;AAAA,GAHEmJ,GAIQ,WAAA,SAAA,CAAA;AAQbrJ,GAAA;AAAA,EADNE,EAAS,EAAE,MAAM,MAAO,CAAA;AAAA,GAXbmJ,GAYL,WAAA,QAAA,CAAA;AASPrJ,GAAA;AAAA,EADCE,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GApB9BmJ,GAqBZ,WAAA,YAAA,CAAA;AArBYA,KAANrJ,GAAA;AAAA,EADNG,EAAc,6BAA6B;AAAA,GAC/BkJ,EAAA;;;;;;;oPCTbG,IAAAhE,IAAAiE,IAAAC;AAOO,IAAMC,IAAN,cAAoChE,GAAoB7G,GAAe,EAAE,EAAE;AAAA,EAA3E,cAAA;AAAA,UAAA,GAAA,SAAA,GAAAC,GAAA,MAAAyK,EAAA,GAEU,KAAA,QAAA,IAGV,KAAA,MAAA,GAGA,KAAA,MAAA,KAGC,KAAA,OAAA,GAGI,KAAA,WAAA,GAGC,KAAA,YAAA,GAGE,KAAA,cAAA,IASH,KAAA,WAAA;AAAA,EAAA;AAAA,EAEQ,iBAAiB;AAAA,EAC5B;AAAA,EASC,SAAS;AACjB,WAAO,KAAK,cAAcrK,GAAA,MAAKqK,IAALE,EAAA,EAAA,KAAA,IAAA,IAA4BvK,SAAKqK,IAALC,EAAA,EAAA,KAAA,IAAA;AAAA,EAAA;AA8BxD;AAxEOD,KAAA,oBAAA,QAAA;AAmCNhE,KAAS,SAAC7D,GAAuB;AAChC,EAAAA,EAAM,gBAAgB,GACjB,KAAA,QAAQA,EAAM,OAAO,OACrB,KAAA,cAAc,IAAI2D,GAAgB;AACxC;AAMAmE,KAAa,WAAG;AACR,SAAArK;AAAA;AAAA,aAEI,KAAK,KAAK;AAAA,WACZ,KAAK,GAAG;AAAA,WACR,KAAK,GAAG;AAAA,YACP,KAAK,IAAI;AAAA,aACR,KAAK,SAAS,SAAU,CAAA;AAAA,cACvBD,SAAKqK,IAAShE,EAAA,CAAA;AAAA,gBACZ,KAAK,QAAQ;AAAA;AAAA;AAG5B;AAEAkE,KAAkB,WAAG;AACb,SAAAtK;AAAA;AAAA,aAEI,KAAK,KAAK;AAAA,WACZ,KAAK,GAAG;AAAA,WACR,KAAK,GAAG;AAAA,YACP,KAAK,IAAI;AAAA,cACP,KAAK,QAAQ,IAAI,KAAK,SAAS;AAAA,cAC/BD,SAAKqK,IAAShE,EAAA,CAAA;AAAA,gBACZ,KAAK,QAAQ;AAAA;AAAA;AAG5B;AArEAxF,EAAA;AAAA,EADCE,EAAS;AAAA,GADEyJ,EAEZ,WAAA,SAAA,CAAA;AAGA3J,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAJdyJ,EAKZ,WAAA,OAAA,CAAA;AAGA3J,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAPdyJ,EAQZ,WAAA,OAAA,CAAA;AAGA3J,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAVdyJ,EAWZ,WAAA,QAAA,CAAA;AAGA3J,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAbdyJ,EAcZ,WAAA,YAAA,CAAA;AAGA3J,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAhBdyJ,EAiBZ,WAAA,aAAA,CAAA;AAGA3J,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,SAAS,WAAW,eAAgB,CAAA;AAAA,GAnB1CyJ,EAoBZ,WAAA,eAAA,CAAA;AASA3J,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GA5B9ByJ,EA6BZ,WAAA,YAAA,CAAA;AA7BYA,IAAN3J,EAAA;AAAA,EADNG,EAAc,kBAAkB;AAAA,GACpBwJ,CAAA;;;;;;;kZCPbC,IAAAC,IAAArE;AAOO,IAAMsE,IAAN,cAAoCjF,GAAoB/F,GAAe,EAAE,EAAE;AAAA,EAA3E,cAAA;AAAA,UAAA,GAAA,SAAA,GAAAC,GAAA,MAAA8K,EAAA,GAmBK9K,GAAA,MAAA6K,IAAA,EAAA,GAGE,KAAA,aAAA,IASb,KAAS,YAA2B,MAQzB,KAAA,WAAA;AAAA,EAAA;AAAA,EA3BX,IAAW,QAAQG,GAAiB;AACnCpH,IAAAA,GAAA,MAAKiH,IAAWG,CAAA,GACV,MAAA,QAAQA,EAAO,SAAS;AAAA,EAAA;AAAA,EAE/B,IAAW,UAAmB;AAC7B,WAAOhJ,GAAK,MAAA6I,EAAA;AAAA,EAAA;AAAA,EA2BM,eAAqB;AACvC,SAAK,sBAAsB,KAAK,WAAY,cAAc,YAAY,CAAE;AAAA,EAAA;AAAA,EAShE,SAAS;AACX,UAAAI,IAAQ,KAAK,aAAc,KAAK,UAAU,KAAK,UAAU,KAAK,WAAY;AACzE,WAAA5K;AAAA,cACK2B,SAAK6I,EAAQ,CAAA;AAAA,YACf,KAAK,SAAS;AAAA,eACX,KAAK,QAAQ;AAAA,sBACN,KAAK,eAAe;AAAA,aAC7BzK,SAAK0K,IAASrE,EAAA,CAAA;AAAA,eACZ,KAAK,QAAQ;AAAA,YAChBwE,CAAK;AAAA;AAAA,EAAA;AAWjB;AAvDCJ,KAAA,oBAAA,QAAA;AAnBMC,KAAA,oBAAA,QAAA;AAgDNrE,KAAS,SAAC7D,GAA6B;AACtC,EAAAA,EAAM,gBAAgB,GACjB,KAAA,UAAUA,EAAM,OAAO,SACvB,KAAA,cAAc,IAAI2D,GAAgB;AACxC;AApDYwE,EAmEI,SAAS;AAAA,EACxB/J;AAAA;AAAA;AAAA;AAAA;AAKD;AAnEAC,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GALf4J,EAMZ,WAAA,YAAA,CAAA;AAGA9J,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GARd4J,EASZ,WAAA,mBAAA,CAAA;AAGW9J,EAAA;AAAA,EADVE,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAXf4J,EAYD,WAAA,WAAA,CAAA;AAUX9J,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GArBf4J,EAsBZ,WAAA,cAAA,CAAA;AAGA9J,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAxBd4J,EAyBZ,WAAA,WAAA,CAAA;AAGA9J,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GA3Bd4J,EA4BZ,WAAA,YAAA,CAAA;AAGS9J,EAAA;AAAA,EADRE,EAAS,EAAE,MAAM,QAAQ,WAAW,aAAc,CAAA;AAAA,GA9BvC4J,EA+BH,WAAA,aAAA,CAAA;AAQT9J,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAtC9B4J,EAuCZ,WAAA,YAAA,CAAA;AAGA9J,EAAA;AAAA,EADCC,EAAM;AAAA,GAzCK6J,EA0CZ,WAAA,iBAAA,CAAA;AA1CYA,IAAN9J,EAAA;AAAA,EADNG,EAAc,kBAAkB;AAAA,GACpB2J,CAAA;;;;;;;oPCPbG,IAAAC,IAAAC,IAAAC,IAAAC;AASO,IAAMC,IAAN,cAAuCzF;AAAA,EAC7C/F;AACD,EAAE;AAAA,EAFK,cAAA;AAAA,UAAA,GAAA,SAAA,GAAAC,GAAA,MAAAkL,EAAA,GAIU,KAAA,QAAA,IAGR,KAAA,QAAA,IAGY,KAAA,WAAA,IAGT,KAAA,WAAA,IAGK,KAAA,gBAAA,IAMhB,KAAQ,eAAe;AAAA,EAAA;AAAA,EAEJ,eAAqB;AAClC,SAAA;AAAA,MACJ;AAAA,MACA,MAAMM;AAAA,MACN,MAAM,KAAK,YAAY,CAAC,KAAK;AAAA,IAC9B,GAEK,KAAA,YAAY,iBAAkC,WAAW,EAAE,QAAQ,CAACtB,MAAM,KAAK,sBAAsBA,CAAC,CAAC;AAAA,EAAA;AAAA,EAGpG,QAAQ;AAChB,WAAO,KAAK,YAAY,cAA+B,WAAW,GAAG,MAAM;AAAA,EAAA;AAAA,EAoDnE,SAAS;AACjB,UAAMuB,IAAY,KAAK,SAAS,KAAK,SAAS,KAAK,wBAAwB,GACrEC,IAAa,KAAK,SAAS,KAAK,yBAAyB;AAExD,WAAArL;AAAA;AAAA;AAAA,kBAGSoL,CAAS;AAAA,YACfA,CAAS;AAAA,aACR,KAAK,KAAK;AAAA,aACVrL,SAAK8K,IAAaC,EAAA,CAAA;AAAA,gBACf,KAAK,QAAQ;AAAA,gBACb,KAAK,QAAQ;AAAA,MACtB,KAAK,WAkBL9K,iDAAoD,KAAK,KAAK,YAjB9DA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAKSqL,CAAU;AAAA,sBACJA,CAAU;AAAA,iBACf,KAAK,KAAK;AAAA,sBACL,CAAC,CAAC,KAAK,KAAK;AAAA,kBAChB,KAAK,gBAAgB,CAAC,KAAK,aAAa;AAAA,oBACtC,KAAK,aAAa;AAAA,oBAClB,KAAK,QAAQ;AAAA,iBAChBtL,SAAK8K,IAAcE,EAAA,CAAA;AAAA,gBACpBhL,SAAK8K,IAAYG,EAAA,CAAA;AAAA,uBACVjL,SAAK8K,IAAkBI,EAAA,CAAA;AAAA;AAAA,OAGgC;AAAA;AAAA;AAAA,EAAA;AA4B9E;AAlJOJ,KAAA,oBAAA,QAAA;AAsCNC,KAAa,SAAC,GAAkB;AAC3B,MAAA,EAAE,aAAaQ,IAAgB;AAI/B,EAAA,OAFW,EAAE,aAAa,EAAE,CAAC,GAEd,SAAU,aAC5B,KAAK,QAAQ,EAAE,OAAO,MAAM,SAAS,GACjC,KAAK,qBAAqB,KAAK,iBAE7B,KAAA,QAAQC,GAAc,KAAK,KAAK,IAGjC,KAAA,cAAc,IAAIrF,GAAgB;AAEzC;AAEA6E,KAAc,SAAC,GAAkB;AAE5B,MADJ,EAAE,gBAAgB,GACd,EAAE,aAAaO,IAAgB;AAEnC,QAAM1J,IAAS,EAAE,aAAa,EAAE,CAAC;AAE7B,EAAA,OAAOA,GAAQ,SAAU,aAC5B,KAAK,QAAQA,EAAO,OACf,KAAA,cAAc,IAAIsE,GAAgB;AAEzC;AACA8E,KAAY,WAAG;AAEd,EAAI,CAAC,KAAK,SAAS,KAAK,iBAAiB,OACxC,KAAK,QAAQO,GAAc,KAAK,SAAS,EAAE,GACtC,KAAA,cAAc,IAAIrF,GAAgB;AAEzC;AAEA+E,KAAkB,SAAC1I,GAAoB;AACjC,OAAA,eAAe,CAAC,KAAK,cACtB,CAAC,KAAK,SAAS,KAAK,eAEvB,KAAK,oBAAoB,KAEzB,KAAK,oBAAoB,IAGrB,KAAK,gBACRA,EAAM,QAA4B,MAAM;AAE3C;AArFY2I,EA2Ha,SAASvK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAvHlCC,GAAA;AAAA,EADCE,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAHdoK,EAIZ,WAAA,SAAA,CAAA;AAGAtK,GAAA;AAAA,EADCE,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAO,CAAA;AAAA,GAN9BoK,EAOZ,WAAA,SAAA,CAAA;AAGAtK,GAAA;AAAA,EADCE,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAT9BoK,EAUZ,WAAA,YAAA,CAAA;AAGAtK,GAAA;AAAA,EADCE,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAZ9BoK,EAaZ,WAAA,YAAA,CAAA;AAGAtK,GAAA;AAAA,EADCE,EAAS,EAAE,MAAM,SAAS,SAAS,IAAM,WAAW,iBAAkB,CAAA;AAAA,GAf3DoK,EAgBZ,WAAA,iBAAA,CAAA;AAGAtK,GAAA;AAAA,EADCE,EAAS,EAAE,MAAM,SAAS,WAAW,sBAAuB,CAAA;AAAA,GAlBjDoK,EAmBZ,WAAA,qBAAA,CAAA;AAGQtK,GAAA;AAAA,EADPC,EAAM;AAAA,GArBKqK,EAsBJ,WAAA,gBAAA,CAAA;AAtBIA,IAANtK,GAAA;AAAA,EADNG,EAAc,sBAAsB;AAAA,GACxBmK,CAAA;;;;;;;uUCTbnE,IAAAyE,GAAAC,IAAArF,IAAAsF,IAAAC,IAAAnE,IAAAD;AAcO,IAAMqE,IAAN,cAAiDrF,GAAoB7G,GAAe,EAAE,EAAE;AAAA,EA4E9F,cAAc;AACP,UAAA,GA7EDC,GAAA,MAAA6L,CAAA,GACI7L,GAAA,MAAAoH,IAAA,IAAIY,GAAoB,MAAM;AAAA,MACvC,oBAAoB,CAACC,MACbA,EAAQ,MAAM,SAAS;AAAA,MAE/B,kBAAkB,CAACC,MACXA,EAAW;AAAA,MAEnB,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,mBAAmB;AAAA,MACnB,UAAU,CAAC,EAAE,OAAAC,QAAY;AACxB,cAAM3H,IAAW,KAAK;AACtB,aAAK,SAAS2H,GACT,KAAA,cAAc,UAAU3H,CAAQ,GAChC,KAAA,cAAc,IAAI+F,GAAgB;AAAA,MAAA;AAAA,IACxC,CACA,CAAA,GAkBY,KAAA,aAAA,8BAkBA,KAAA,aAAA,kDASF,KAAA,WAAA,IASA,KAAA,WAAA,IAGE,KAAA,aAAA,IA6Bb,KAAQ,SAAkC,CAAC,GAxBrC,KAAA,eAAe2F,IAA8B,OAAOhM,MAAa;AACrE,YAAMiM,IAAYjM;AACb,WAAA;AAAA,QACJ,MAAMiM,EAAU,qBAA8B,UAAU;AAAA,QACxD,CAACtH,MAAU;AACL,eAAA,aAAa,CAAC,CAACA;AAAA,QACrB;AAAA,QACA;AAAA,MACD;AAAA,IAAA,CACA,GAEI,KAAA;AAAA,MACJ;AAAA,MACA,MAAM,KAAK;AAAA,MACX,MAAM,CAAC,CAAC,KAAK,OAAO,KAAK,OAAO,SAAS,KAAK;AAAA,IAC/C,GACK,KAAA;AAAA,MACJ;AAAA,MACA,MAAM,KAAK;AAAA,MACX,MAAM,CAAC,CAAC,KAAK,OAAO,KAAK,OAAO,SAAS,KAAK;AAAA,IAC/C;AAAA,EAAA;AAAA,EAOD,IAAW,MAAMuH,GAAgC;AAC3C,SAAA,SAASA,KAAS,CAAC,GACnBpK,GAAA,MAAAoF,EAAA,EAAQ,SAAS,KAAK,KAAK;AAAA,EAAA;AAAA,EAEjC,IAAW,QAAiC;AAC3C,WAAO,KAAK;AAAA,EAAA;AAAA,EAuCM,iBAAiB;AAAA,EAC5B;AAAA,EAGC,SAAS;AACjB,WAAO/G,IAAOD,GAAK,MAAAyL,GAAAhE,EAAA,EAAL,UAAmB,IAAIzH,GAAA,MAAKyL,OAAL,KAAuB,IAAA,CAAA;AAAA,EAAA;AA4D9D;AAtNCzE,KAAA,oBAAA,QAAA;AADMyE,IAAA,oBAAA,QAAA;AAkHNC,KAAM,WAAG;AACH,OAAA,QAAQ,CAAC,GAAG,KAAK,QAAQ,EAAE,OAAO,IAAI,OAAO,IAAI,GACtD,KAAK,WAAW,IACX,KAAA,cAAc,IAAIvF,GAAgB,GACvCnG,GAAA,MAAKyL,GAALE,EAAA,EAAA,KAAA,IAAA;AACD;AAEAtF,KAAS,SAAC7D,GAAsByJ,GAAsB;AACrD,EAAAzJ,EAAM,gBAAgB;AACtB,QAAMX,IAASW,EAAM,eACfiC,IAAQ5C,EAAO,OACfgJ,IAAQhJ,EAAO;AAErB,OAAK,QAAQ,KAAK,OAAO,IAAI,CAACyG,GAAM4D,MAAWA,MAAUD,IAAe,EAAE,OAAAxH,GAAO,OAAAoG,EAAA,IAAUvC,CAAK,GAE3F,KAAA,cAAc,IAAInC,GAAgB;AACxC;AAEMwF,KAAa,iBAAG;AACrB,QAAM,KAAK;AACL,QAAAK,IAAQ,KAAK,YAAY;AAAA,IAC9B;AAAA,EACD;AACA,EAAIA,KACaA,EAAMA,EAAM,SAAS,CAAC,EAC9B,MAAM;AAEhB;AAEAJ,KAAW,SAACpJ,GAAuB2J,GAAmB;AACrD,EAAA3J,EAAM,gBAAgB,GACjB,KAAA,QAAQ,KAAK,OAAO,OAAO,CAAC8F,GAAM4D,MAAUA,MAAUC,CAAS,GACpE,KAAK,WAAW,IACX,KAAA,cAAc,IAAIhG,GAAgB;AACxC;AAUAsB,KAAY,WAAG;AACP,SAAAxH;AAAA;AAAA,MAEHC;AAAA,IACD,KAAK;AAAA,IACL,CAACoI,GAAM4D,MAAUA;AAAA,IACjB,CAAC5D,GAAM4D,MAAUjM;AAAA;AAAA,eAEPqI,EAAK,KAAK;AAAA,eACVA,EAAK,KAAK;AAAA;AAAA,gCAEO4D,IAAQ,CAAC;AAAA,mBACtB,KAAK,QAAQ;AAAA,mBACb,KAAK,QAAQ;AAAA,qBACX,KAAK,UAAU;AAAA,gBACpBlM,SAAKyL,GAAMC,EAAA,CAAA;AAAA,iBACV,CAAClJ,MAA0BxC,GAAA,MAAKyL,GAALpF,EAAA,EAAA,KAAA,MAAe7D,GAAO0J,CAAM,CAAA;AAAA,iBACvD,CAAC1J,MAA0BxC,GAAA,MAAKyL,GAALG,EAAA,EAAA,KAAA,MAAiBpJ,GAAO0J,CAAM,CAAA;AAAA;AAAA;AAAA,EAGrE,CAAA;AAAA;AAAA;AAGJ;AAEA1E,KAAgB,WAAG;AAClB,SAAI,KAAK,YAAY,KAAK,WAAiB9G,IACpCT;AAAA;AAAA;AAAA,YAGG,KAAK,SAAS,KAAK,aAAa,CAAC;AAAA;AAAA;AAAA,gBAG7B,KAAK,QAAQ;AAAA,aAChBD,SAAKyL,GAAMC,EAAA,CAAA;AAAA;AAEvB;AAlMYG,EAoMI,SAAS;AAAA,EACxBjL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBD;AA5LAC,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAzBd8K,EA0BZ,WAAA,OAAA,CAAA;AASAhL,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,QAAQ,WAAW,cAAe,CAAA;AAAA,GAlCxC8K,EAmCZ,WAAA,cAAA,CAAA;AASAhL,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GA3Cd8K,EA4CZ,WAAA,OAAA,CAAA;AASAhL,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,QAAQ,WAAW,cAAe,CAAA;AAAA,GApDxC8K,EAqDZ,WAAA,cAAA,CAAA;AASAhL,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GA7D9B8K,EA8DZ,WAAA,YAAA,CAAA;AASAhL,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAtE9B8K,EAuEZ,WAAA,YAAA,CAAA;AAGAhL,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAzEf8K,EA0EZ,WAAA,cAAA,CAAA;AA6BQhL,EAAA;AAAA,EADPC,EAAM;AAAA,GAtGK+K,EAuGJ,WAAA,UAAA,CAAA;AAGGhL,EAAA;AAAA,EADVE,EAAS,EAAE,MAAM,MAAO,CAAA;AAAA,GAzGb8K,EA0GD,WAAA,SAAA,CAAA;AA1GCA,IAANhL,EAAA;AAAA,EADNG,EAAc,iCAAiC;AAAA,GACnC6K,CAAA;;;;;;;mPCdbO,GAAAC,IAAAC,IAAAC,IAAAC,IAAAC,IAAAC,IAAAC,IAAAC,IAAAC,IAAAC,IAAAC;AAqBO,IAAMC,IAAN,cAAqDxG,GAAoB7G,GAAe,EAAE,EAAE;AAAA,EAA5F,cAAA;AAAA,UAAA,GAAA,SAAA,GAAAC,GAAA,MAAAwM,CAAA,GAgBN,KAAQ,YAAY,IAST,KAAA,WAAA,IASA,KAAA,WAAA,IAYE,KAAA,aAAA;AAAA,EAAA;AAAA,EA5Cb,IAAoB,MAAM3H,GAAe;AACpC,IAAAA,EAAM,WAAW,GAAG,KACvB,KAAK,YAAYA,GACX,MAAA,QAAQA,EAAM,UAAU,CAAC,MAE/B,MAAM,QAAQA,GACT,KAAA,YAAY,IAAIA,CAAK;AAAA,EAC3B;AAAA,EAED,IAAoB,QAAQ;AAC3B,WAAO,MAAM;AAAA,EAAA;AAAA,EAoGd,MAAsB,QAAQ;AAC7B,UAAM,KAAK,gBACX,KAAK,QAAQ,MAAM;AAAA,EAAA;AAAA,EAGD,iBAAiB;AAAA,EAC5B;AAAA,EAOC,SAAS;AAEV,WAAAxE;AAAA,mEAC0DD,EAAK,MAAAoM,GAAAU,EAAA,CAAU,WAAW9M,EAAA,MAAKoM,GAAQS,EAAA,CAAA;AAAA;AAAA,OAEnG,KAAK,YAAY,KAAK,WAAWnM,IAAUT,+CAAkD;AAAA;AAAA;AAAA;AAAA,eAIrF,KAAK,KAAK;AAAA,eACV,KAAK,SAAS,KAAK,eAAe,CAAC;AAAA,qBAC7B,KAAK,SAAS,KAAK,eAAe,CAAC;AAAA,kBACtC,KAAK,QAAQ;AAAA;AAAA,kBAEbD,QAAKoM,GAAeK,EAAA,CAAA;AAAA,gBACtBzM,QAAKoM,GAAaO,EAAA,CAAA;AAAA,iBACjB3M,QAAKoM,GAAcM,EAAA,CAAA;AAAA;AAAA;AAAA,gBAGpB,KAAK,KAAK;AAAA,gBACV,KAAK,SAAS;AAAA,iBACb1M,QAAKoM,GAAaW,EAAA,CAAA;AAAA;AAAA,4BAEP,EAAI,mCAAmC,KAAK,KAAK,YAAY/M,QAAKoM,GAAcQ,EAAA,CAAA;AAAA;AAAA,OAErGzK;AAAA,MACD,KAAK;AAAA,MACL,MAAMlC;AAAA;AAAA,gBAEI,KAAK,SAAS,KAAK,oBAAoB,CAAC;AAAA,sBAClC,KAAK,SAAS,KAAK,oBAAoB,CAAC;AAAA,gBAC9C6D,EAAU,KAAK,KAAK,CAAC;AAAA,mBAClB9D,QAAKoM,GAAeG,EAAA,CAAA;AAAA,kBACrBvM,QAAKoM,GAAaE,EAAA,CAAA;AAAA,mBACjBtM,QAAKoM,GAAcI,EAAA,CAAA;AAAA,oBAClB,KAAK,QAAQ;AAAA,oBACb,KAAK,QAAQ;AAAA;AAAA,IAE3B,CAAA;AAAA,OACCrK;AAAA,MACD,CAAC,KAAK;AAAA,MACN,MAAMlC;AAAA;AAAA;AAAA;AAAA,gBAII,KAAK,SAAS,KAAK,gBAAgB,CAAC;AAAA;AAAA,oBAEhC,KAAK,QAAQ;AAAA,iBAChBD,QAAKoM,GAASC,EAAA,CAAA;AAAA;AAAA;AAAA;AAAA,IAIzB,CAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAwDN;AAzOOD,IAAA,oBAAA,QAAA;AAgDAC,KAAS,iBAAG;AACjB,QAAMY,GAAgB,MAAM;AAAA,IAC3B,UAAU,GAAG,KAAK,SAAS,KAAK,gBAAgB,CAAC,IAAI,KAAK,SAAS,EAAE;AAAA,IACrE,SAAS,KAAK,SAAS,KAAK,iCAAiC;AAAA,IAC7D,OAAO;AAAA,IACP,cAAc,KAAK,SAAS,KAAK,gBAAgB;AAAA,EAAA,CACjD,GAEI,KAAA,cAAc,IAAIC,IAAgB;AACxC;AAEAZ,KAAa,SAAC9J,GAAsB;AACnC,EAAAA,EAAM,gBAAgB,GACjB,KAAA,QAAQA,EAAM,OAAO,OACrB,KAAA,cAAc,IAAI2K,IAAe;AACvC;AAEAZ,KAAe,SAAC/J,GAAsB;AACrC,EAAAA,EAAM,gBAAgB;AACtB,QAAMX,IAASW,EAAM;AACrB,EAAIA,EAAM,QAAQ,WAAWX,EAAO,SACnC,KAAK,cAAc,IAAI,YAAY,OAAO,CAAC;AAE7C;AAEA2K,KAAc,SAAChK,GAAsB;AACpC,EAAAA,EAAM,gBAAgB,GACjB,KAAA,QAAQA,EAAM,OAAO,OACrB,KAAA,cAAc,IAAI2D,GAAgB;AACxC;AAEAsG,KAAe,SAACjK,GAAsB;AACrC,EAAAA,EAAM,gBAAgB,GAClBA,EAAM,QAAQ,WAASxC,EAAA,MAAKoM,GAALW,EAAA,EAAA,KAAA,IAAA;AAC5B;AAEAL,KAAc,SAAClK,GAAsB;AACpC,EAAAA,EAAM,gBAAgB,GACjB,KAAA,QAAQA,EAAM,OAAO,OACrB,KAAA,cAAc,IAAI2D,GAAgB;AACxC;AAEAwG,KAAa,SAACnK,GAAsB;AACnC,EAAAA,EAAM,gBAAgB,GACjB,KAAA,QAAQA,EAAM,OAAO,OACrB,KAAA,cAAc,IAAI2K,IAAe;AACvC;AAEAP,KAAc,SAACpK,GAAc;AAC5B,EAAAA,EAAM,gBAAgB,GACjB,KAAA,QAAQ,KAAK,aAAa,OAC1B,KAAA,cAAc,IAAI2D,GAAgB;AACxC;AAGA0G,KAAQ,SAACrK,GAAY;AACpB,EAAAA,EAAM,gBAAgB;AACvB;AAGAsK,KAAU,SAACtK,GAAY;AACtB,EAAAA,EAAM,gBAAgB;AACvB;AAWAuK,KAAa,WAAG;AACf,OAAK,aAAa,MAAM;AACzB;AA3HYC,EAuLI,SAAS;AAAA,EACxBpM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgDD;AAtOoBC,EAAA;AAAA,EADnBE,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GADdiM,EAEQ,WAAA,SAAA,CAAA;AAcZnM,EAAA;AAAA,EADPC,EAAM;AAAA,GAfKkM,EAgBJ,WAAA,aAAA,CAAA;AASRnM,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAxB9BiM,EAyBZ,WAAA,YAAA,CAAA;AASAnM,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAjC9BiM,EAkCZ,WAAA,YAAA,CAAA;AAGAnM,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GApCdiM,EAqCZ,WAAA,SAAA,CAAA;AAGUnM,EAAA;AAAA,EADTQ,EAAM,QAAQ;AAAA,GAvCH2L,EAwCF,WAAA,UAAA,CAAA;AAGAnM,EAAA;AAAA,EADTQ,EAAM,QAAQ;AAAA,GA1CH2L,EA2CF,WAAA,gBAAA,CAAA;AAGVnM,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GA7CfiM,EA8CZ,WAAA,cAAA,CAAA;AA9CYA,IAANnM,EAAA;AAAA,EADNG,EAAc,sCAAsC;AAAA,GACxCgM,CAAA;;;;;;;kZCrBbhG,IAAAoG,IAAAC,IAAAC,GAAA5B,IAAA6B,IAAA5B,IAAAC,IAAAnE,IAAAD;AAYO,IAAMgG,IAAN,cAAgD9H;AAAA,EACtD/F;AAAA,EACA;AACD,EAAE;AAAA,EA2FD,cAAc;AACP,UAAA,GA/FDC,GAAA,MAAA0N,CAAA,GAII1N,GAAA,MAAAoH,IAAA,IAAIY,GAAoB,MAAM;AAAA,MACvC,oBAAoB,CAACC,MACbA,EAAQ,aAAa,oBAAoB;AAAA,MAEjD,kBAAkB,CAACC,MACXA;AAAA,MAER,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,mBAAmB;AAAA,MACnB,UAAU,CAAC,EAAE,OAAAC,QAAY;AACxB,cAAM3H,IAAW,KAAK;AACtB,aAAK,SAAS2H,GACT,KAAA,cAAc,UAAU3H,CAAQ,GAChC,KAAA,cAAc,IAAI+F,GAAgB;AAAA,MAAA;AAAA,IACxC,CACA,CAAA,GAkBY,KAAA,aAAA,8BAkBA,KAAA,aAAA,kDAkBDvG,GAAA,MAAAwN,IAAA,EAAA,GAkBAxN,GAAA,MAAAyN,IAAA,EAAA,GA6BZ,KAAQ,SAAwB,CAAC,GAb3B,KAAA;AAAA,MACJ;AAAA,MACA,MAAM,KAAK;AAAA,MACX,MAAM,CAAC,CAAC,KAAK,OAAO,KAAK,OAAO,SAAS,KAAK;AAAA,IAC/C,GACK,KAAA;AAAA,MACJ;AAAA,MACA,MAAM,KAAK;AAAA,MACX,MAAM,CAAC,CAAC,KAAK,OAAO,KAAK,OAAO,SAAS,KAAK;AAAA,IAC/C;AAAA,EAAA;AAAA,EApDD,IAAW,SAAS5I,GAAO;AAC1BjB,IAAAA,GAAA,MAAK4J,IAAY3I,CAAA,GACbA,KACH7C,GAAA,MAAKoF,IAAQ,QAAQ;AAAA,EACtB;AAAA,EAED,IAAW,WAAW;AACrB,WAAOpF,GAAK,MAAAwL,EAAA;AAAA,EAAA;AAAA,EAWb,IAAW,SAAS3I,GAAO;AAC1BjB,IAAAA,GAAA,MAAK6J,IAAY5I,CAAA,GACbA,KACH7C,GAAA,MAAKoF,IAAQ,QAAQ;AAAA,EACtB;AAAA,EAED,IAAW,WAAW;AACrB,WAAOpF,GAAK,MAAAyL,EAAA;AAAA,EAAA;AAAA,EAkCb,IAAW,QAAuB;AACjC,WAAO,KAAK;AAAA,EAAA;AAAA,EAEb,IAAW,MAAMrB,GAAsB;AAEtC,SAAK,QAAQA,GAAO,SAAS,IAAI,eAAe,IAC3C,KAAA,SAASA,KAAS,CAAC,GACnBpK,GAAA,MAAAoF,EAAA,EAAQ,SAAS,KAAK,KAAK;AAAA,EAAA;AAAA,EA8CxB,iBAAiB;AAAA,EAClB;AAAA,EAGC,SAAS;AACV,WAAA/G,6BAAgCD,GAAK,MAAAsN,GAAA7F,EAAA,EAAL,KAAmB,IAAA,CAAA;AAAA,KACvDzH,GAAA,MAAKsN,OAAL,KAAuB,IAAA,CAAA;AAAA,EAAA;AA0D5B;AA7OCtG,KAAA,oBAAA,QAAA;AAsEAoG,KAAA,oBAAA,QAAA;AAkBAC,KAAA,oBAAA,QAAA;AA5FMC,IAAA,oBAAA,QAAA;AAkJN5B,KAAM,WAAG;AACR,OAAK,SAAS,CAAC,GAAG,KAAK,QAAQ,EAAE,GACjC,KAAK,WAAW,IACX,KAAA,cAAc,IAAIvF,GAAgB,GACvCnG,GAAA,MAAKsN,GAAL3B,EAAA,EAAA,KAAA,IAAA;AACD;AAEA4B,KAAQ,SAAC/K,GAAsByJ,GAAsB;AACpD,EAAAzJ,EAAM,gBAAgB;AAEtB,QAAMiC,IADSjC,EAAM,cACA;AAChB,OAAA,SAAS,KAAK,OAAO,IAAI,CAAC8F,GAAM4D,MAAWA,MAAUD,IAAexH,IAAQ6D,CAAK,GACjF,KAAA,cAAc,IAAInC,GAAgB;AACxC;AAEMwF,KAAa,iBAAG;AACrB,QAAM,KAAK;AACL,QAAAK,IAAQ,KAAK,YAAY;AAAA,IAC9B;AAAA,EACD;AAEA,EADgBA,EAAMA,EAAM,SAAS,CAAC,EAC9B,MAAM;AACf;AAEAJ,KAAW,SAACpJ,GAAuB2J,GAAmB;AACrD,EAAA3J,EAAM,gBAAgB,GACjB,KAAA,SAAS,KAAK,OAAO,OAAO,CAAC8F,GAAM4D,MAAUA,MAAUC,CAAS,GACrE,KAAK,WAAW,IACX,KAAA,cAAc,IAAIhG,GAAgB;AACxC;AAWAsB,KAAY,WAAG;AACP,SAAAxH;AAAA,KACJC;AAAA,IACD,KAAK;AAAA,IACL,CAACoI,GAAM4D,MAAUA;AAAA,IACjB,CAAC5D,GAAM4D,MAAUjM;AAAA;AAAA,mBAEFiM,CAAK;AAAA,2BACG5D,CAAI;AAAA;AAAA,+BAEA4D,IAAQ,CAAC;AAAA,cAC1B5D,CAAI;AAAA,kBACA,KAAK,QAAQ;AAAA,kBACb,KAAK,QAAQ;AAAA,eAChBtI,SAAKsN,GAAM5B,EAAA,CAAA;AAAA,gBACV,CAAClJ,MAA0BxC,GAAA,MAAKsN,GAAL1B,EAAA,EAAA,KAAA,MAAiBpJ,GAAO0J,CAAM,CAAA;AAAA,eAC1D,CAAC1J,MAAyBxC,GAAA,MAAKsN,GAALC,EAAA,EAAA,KAAA,MAAc/K,GAAO0J,CAAM,CAAA;AAAA;AAAA;AAAA,EAGhE,CAAA;AAAA;AAEH;AAEA1E,KAAgB,WAAG;AAClB,SAAI,KAAK,YAAY,KAAK,WAAiB9G,IACpCT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAMO,KAAK,QAAQ;AAAA,aAChBD,SAAKsN,GAAM5B,EAAA,CAAA;AAAA;AAEvB;AA5NY8B,EA8NI,SAAS;AAAA,EACxB5M;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBD;AAnNAC,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GA5BdyM,EA6BZ,WAAA,OAAA,CAAA;AASA3M,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,QAAQ,WAAW,cAAe,CAAA;AAAA,GArCxCyM,EAsCZ,WAAA,cAAA,CAAA;AASA3M,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GA9CdyM,EA+CZ,WAAA,OAAA,CAAA;AASA3M,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,QAAQ,WAAW,cAAe,CAAA;AAAA,GAvDxCyM,EAwDZ,WAAA,cAAA,CAAA;AASW3M,EAAA;AAAA,EADVE,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAhE9ByM,EAiED,WAAA,YAAA,CAAA;AAkBA3M,EAAA;AAAA,EADVE,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAlF9ByM,EAmFD,WAAA,YAAA,CAAA;AAsCH3M,EAAA;AAAA,EADPC,EAAM;AAAA,GAxHK0M,EAyHJ,WAAA,UAAA,CAAA;AAGG3M,EAAA;AAAA,EADVE,EAAS,EAAE,MAAM,MAAO,CAAA;AAAA,GA3HbyM,EA4HD,WAAA,SAAA,CAAA;AA5HCA,IAAN3M,EAAA;AAAA,EADNG,EAAc,gCAAgC;AAAA,GAClCwM,CAAA;;;;;;;oPCZbC,IAAApB,IAAAkB,IAAAG,IAAArH,IAAAwG,IAAAC;AAWO,IAAMa,KAAN,cAAoDnH,GAAoB7G,GAAe,EAAE,EAAE;AAAA,EAA3F,cAAA;AAAA,UAAA,GAAA,SAAA,GAAAC,GAAA,MAAA6N,EAAA,GAQK,KAAA,WAAA,IASA,KAAA,WAAA;AAAA,EAAA;AAAA,EAgDX,MAAsB,QAAQ;AAC7B,UAAM,KAAK,gBACX,KAAK,QAAQ,MAAM;AAAA,EAAA;AAAA,EAGD,iBAAiB;AAAA,EAC5B;AAAA,EAGC,SAAS;AACV,WAAAxN;AAAA,KACJ,KAAK,YAAY,KAAK,WAAWS,IAAUT,8DAAiE;AAAA;AAAA,mEAE9CD,GAAK,MAAAyN,IAAAX,EAAA,CAAU,WAAW9M,GAAA,MAAKyN,IAAQZ,EAAA,CAAA;AAAA;AAAA;AAAA;AAAA,aAI7F,KAAK,KAAK;AAAA,gBACP7M,SAAKyN,IAAUC,EAAA,CAAA;AAAA,cACjB1N,SAAKyN,IAAQF,EAAA,CAAA;AAAA,eACZvN,SAAKyN,IAASpH,EAAA,CAAA;AAAA,iBACZ,KAAK,QAAQ;AAAA,iBACb,KAAK,QAAQ;AAAA,gBACd,KAAK,QAAQ;AAAA;AAAA;AAAA;AAAA,KAIxBlE;AAAA,MACD,CAAC,KAAK;AAAA,MACN,MAAMlC;AAAA;AAAA;AAAA;AAAA,eAIK,KAAK,SAAS,KAAK,gBAAgB,CAAC,IAAI,KAAK,KAAK;AAAA;AAAA,kBAE/C,KAAK,QAAQ;AAAA,eAChBD,SAAKyN,IAASpB,EAAA,CAAA;AAAA;AAAA;AAAA;AAAA,IAIzB,CAAA;AAAA;AAAA,EAAA;AA0BJ;AAnIOoB,KAAA,oBAAA,QAAA;AAsBApB,KAAS,iBAAG;AACjB,QAAMY,GAAgB,MAAM;AAAA,IAC3B,UAAU,UAAU,KAAK,SAAS,MAAM;AAAA,IACxC,SAAS;AAAA,IACT,OAAO;AAAA,IACP,cAAc;AAAA,EAAA,CACd,GAEI,KAAA,cAAc,IAAIC,IAAgB;AACxC;AAEAK,KAAQ,SAAC/K,GAAsB;AAC9B,EAAAA,EAAM,gBAAgB;AACtB,QAAMX,IAASW,EAAM;AACrB,OAAK,QAAQX,EAAO,OACf,KAAA,cAAc,IAAIsL,IAAe;AACvC;AAEAO,KAAU,SAAClL,GAAsB;AAChC,EAAAA,EAAM,gBAAgB;AACtB,QAAMX,IAASW,EAAM;AACrB,EAAIA,EAAM,QAAQ,WAAWX,EAAO,SACnC,KAAK,cAAc,IAAI,YAAY,OAAO,CAAC;AAE7C;AAEAwE,KAAS,SAAC7D,GAAsB;AAC/B,EAAAA,EAAM,gBAAgB;AACtB,QAAMX,IAASW,EAAM;AACrB,OAAK,QAAQX,EAAO,OACf,KAAA,cAAc,IAAIsE,GAAgB;AACxC;AAGA0G,KAAQ,SAACrK,GAAc;AACtB,EAAAA,EAAM,gBAAgB;AACvB;AAGAsK,KAAU,SAACtK,GAAc;AACxB,EAAAA,EAAM,gBAAgB;AACvB;AA/DYmL,GA6GI,SAAS;AAAA,EACxB/M;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBD;AA1HAC,GAAA;AAAA,EADCE,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAP9B4M,GAQZ,WAAA,YAAA,CAAA;AASA9M,GAAA;AAAA,EADCE,EAAS,EAAE,MAAM,SAAS,SAAS,GAAM,CAAA;AAAA,GAhB9B4M,GAiBZ,WAAA,YAAA,CAAA;AAGU9M,GAAA;AAAA,EADTQ,EAAM,QAAQ;AAAA,GAnBHsM,GAoBF,WAAA,UAAA,CAAA;AApBEA,KAAN9M,GAAA;AAAA,EADNG,EAAc,qCAAqC;AAAA,GACvC2M,EAAA;;;;;;ACCA,IAAAC,KAAN,cAAsCjO,EAAc;AAAA,EACjD,SAAS;AACV,WAAAM;AAAA,EAAA;AAgBT;AAlBa2N,GAKI,SAAS;AAAA,EACxBjN;AAAA,EACAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUD;AAjBYgN,KAAN/M,GAAA;AAAA,EADNG,EAAc,oBAAoB;AAAA,GACtB4M,EAAA;;;;;;;6QCZbC;AAKO,IAAMC,KAAN,cAAgCC,GAAgBC,EAAiB,EAAE;AAAA,EAAnE,cAAA;AAAA,UAAA,GAAA,SAAA,GAEE,KAAA,OAAA,IAEOpO,GAAA,MAAAiO,IAAA,SAAS,cAAc,UAAU,CAAA;AAAA,EAAA;AAAA,EAE7B,aAAatL,GAA0C;AACzE,UAAM,aAAaA,CAAkB,GAEjC,KAAK,SAEHX,GAAA,MAAAiM,EAAA,EAAa,aAAa,QAAQ,MAAM,GAC7CjM,GAAA,MAAKiM,EAAa,EAAA,aAAa,QAAQ,KAAK,IAAI,GAC3C,KAAA,YAAYjM,SAAKiM,EAAY,CAAA;AAAA,EACnC;AAYF;AAtBCA,KAAA,oBAAA,QAAA;AAJYC,GAiBI,SAAS;AAAA,EACxB,GAAGE,GAAkB;AAAA,EACrBpN;AAAA;AAAA;AAAA;AAAA;AAAA;AAMD;AAvBAC,GAAA;AAAA,EADCE,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GADd+M,GAEZ,WAAA,QAAA,CAAA;AAFYA,KAANjN,GAAA;AAAA,EADNG,EAAc,cAAc;AAAA,GAChB8M,EAAA;;;;;;ACIA,IAAAG,KAAN,cAA8BtO,EAAc;AAAA,EAA5C,cAAA;AAAA,UAAA,GAAA,SAAA,GAOwB,KAAA,OAAA,WAQZ,KAAA,SAAA;AAAA,EAAA;AAAA,EAET,SAAS;AACV,WAAAM;AAAA,gBACOmK,GAAS,EAAE,QAAQ,KAAK,QAAQ,SAAS,KAAK,SAAS,UAAU,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA,EAAA;AAgDnF;AAnEa6D,GAyBI,SAAS;AAAA,EACxBrN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwCD;AA3DAC,GAAA;AAAA,EADCE,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GANdkN,GAOZ,WAAA,QAAA,CAAA;AAQApN,GAAA;AAAA,EADCE,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GAdfkN,GAeZ,WAAA,UAAA,CAAA;AAfYA,KAANpN,GAAA;AAAA,EADNG,EAAc,WAAW;AAAA,GACbiN,EAAA;;;;;;;gZCTbC,IAAAC,IAAAC,GAAAC,IAAAC,IAAAC,IAAAC,IAAAC,IAAAC,IAAAC,IAAAC,IAAAlB;AAyBa,IAAAmB,IAAN,cAAmClN,GAAW;AAAA,EAA9C,cAAA;AAAA,UAAA,GAAA,SAAA,GAAA/B,GAAA,MAAAwO,CAAA,GAgBuD,KAAA,OAAA,QAOP,KAAA,WAAA,2CAI1BxO,GAAA,MAAAsO,IAAA,CAAA,GAE5BtO,GAAA,MAASuO,IAAkB,EAAA,GAED,KAAA,iBAAA,IACF,KAAA,eAAA,IAKNvO,GAAA,MAAA0O,IAAA,EAAA,GA0DlB1O,GAAA,MAAA6O,IAAe,CAACjM,MAAqC;AACpD,MAAAA,EAAM,eAAe;AAEf,YAAAsM,IAAO,CAACtM,MAAwB;AAC/B,cAAA,EAAE,SAAAuM,MAAYvM,GACd,EAAE,MAAAwM,GAAM,OAAAC,GAAA,IAAU,KAAK,YAAY,sBAAsB,GACzDC,KAAWC,GAAMJ,IAAUC,GAAM,GAAGC,EAAK,GACzCG,IAAYC,EAAeH,IAAUD,EAAK;AAEhD,QAAAzL,GAAA,MAAK0K,IAAoB,KAAK,SAAS,UAAUkB,IAAYH,KAAQG,CAAA,GACrEpP,EAAA,MAAKoO,OAAL,KAAkB,MAAAgB,CAAA;AAAA,MACnB,GAEME,IAAO,MAAM;AACT,iBAAA,oBAAoB,eAAeR,CAAI,GACvC,SAAA,oBAAoB,aAAaQ,CAAI,GAE9C,KAAK,cAAc,IAAI,YAAY,oBAAoB,EAAE,QAAQ,EAAE,UAAU,KAAK,SAAA,EAAY,CAAA,CAAC;AAAA,MAChG,GAEMD,IAAiB,CAACE,GAAcC,MAA2B;AAChE,cAAMC,IAAQ,KAAK,MAAM,MAAM,GAAG;AAC9B,YAAA,CAACA,EAAc,QAAAF;AAgBnB,cAAMG,KAdgBD,EAAM,IAAI,CAACE,MAAS;AACrC,cAAAC,KAAS,WAAWD,CAAI;AAExB,iBAAAA,EAAK,SAAS,GAAG,MACpBC,KAAUA,KAAS,MAAOJ,IAGvBG,EAAK,WAAW,GAAG,MACtBC,KAASJ,IAAiBI,KAGpBA;AAAA,QAAA,CACP,EAEiC,OAAO,CAACC,GAAMC,OACxC,KAAK,IAAIA,KAAOP,CAAI,IAAI,KAAK,IAAIM,IAAON,CAAI,IAAIO,KAAOD,CAC9D;AAED,eAAIH,KAAcH,IAAO3N,EAAA,MAAKuM,OAAmBuB,KAAcH,IAAO3N,QAAKuM,EAAiB,MACpFoB,IAAAG,KAGDH;AAAA,MACR;AAEA,eAAS,iBAAiB,eAAeT,GAAM,EAAE,SAAS,IAAM,GACvD,SAAA,iBAAiB,aAAaQ,CAAI;AAAA,IAAA,CAC5C;AAAA,EAAA;AAAA,EA3GS,uBAAuB;AAC/B,UAAM,qBAAqB,GAC3BtP,EAAA,MAAKoO,GAALM,EAAA,EAAA,KAAA,IAAA;AAAA,EAAA;AAAA,EAGkB,QAAQnM,GAA6E;AAGnG,QAFJ,MAAM,QAAQA,CAAkB,GAE5B,EAACX,QAAK0M,EAAiB,KAEvB/L,EAAmB,IAAI,UAAU,GAAG;AACnC,UAAA,KAAK,SAAS,QAAQ;AACzB,cAAM,EAAE,OAAA0M,EAAU,IAAA,KAAK,YAAY,sBAAsB;AAErD,YAAAc,IAAM,WAAW,KAAK,QAAQ;AAElC,QAAI,KAAK,SAAS,SAAS,GAAG,MAC7BA,IAAOA,IAAM,MAAOd;AAGrB,cAAMe,IAAmB,KAAK,SAAS,UAAUD,IAAMd,IAAQc;AAC/D,QAAAvM,GAAA,MAAK0K,IAAoB8B,CAAA;AAAA,MAAA;AAG1B,MAAAhQ,EAAA,MAAKoO,GAALI,EAAA,EAAA,KAAA,IAAA;AAAA,IAAA;AAAA,EACD;AAAA,EA6JQ,SAAS;AACV,WAAAvO;AAAA;AAAA;AAAA;AAAA,mBAIUD,QAAKoO,GAAcQ,EAAA,CAAA;AAAA,qBACjB,KAAK,iBAAiB,SAAS,GAAG;AAAA;AAAA,0DAEG5O,QAAKoO,GAAUV,EAAA,CAAA;AAAA;AAAA,mCAEtC1N,QAAKoO,GAAcQ,EAAA,CAAA,kBAAkB,KAAK,eAAe,SAAS,GAAG;AAAA;AAAA;AAAA,EAAA;AAwDxG;AApQCV,KAAA,oBAAA,QAAA;AAESC,KAAA,oBAAA,QAAA;AA7BHC,IAAA,oBAAA,QAAA;AAiCFC,KAAc,WAAG;AACb,SAAA,KAAK,kBAAkB,KAAK;AACpC;AAEAC,KAAA,oBAAA,QAAA;AA8BAC,KAAY,SAACwB,GAAa;AACzB,QAAM,EAAE,OAAAd,EAAU,IAAA,KAAK,YAAY,sBAAsB,GAEnDgB,IADWd,GAAMY,GAAK,GAAGd,CAAK,IACFA,IAAS;AAC3C,OAAK,WAAWgB,IAAgB;AACjC;AAEAzB,KAAY,WAAG;AAEd,MAAI0B,IAAgB,KAAK,UACrBC,IAAc;AAEd,EAAA,KAAK,SAAS,YACjBD,IAAgBtO,QAAKsM,EAAoB,IAAA,MAC3BiC,IAAA,QAEX,KAAK,SAAS,UACDD,IAAA,OAChBC,IAAcvO,QAAKsM,EAAoB,IAAA,OAGnC,KAAA,YAAY,MAAM,sBAAsB;AAAA,uDACQgC,CAAa;AAAA;AAAA,qDAEfC,CAAW;AAAA;AAE/D;AAEA1B,KAAA,oBAAA,QAAA;AAqDAC,KAAW,WAAG;AACb,OAAK,wBAAwB,oBAAoB,eAAe9M,EAAA,MAAK6M,EAAY,CAAA,GACjF,KAAK,wBAAwB,oBAAoB,cAAc7M,EAAA,MAAK6M,EAAY,CAAA,GAC3E,KAAA,eAAe,MAAM,UAAU,QAC/B,KAAA,YAAY,MAAM,UAAU,QACjCjL,GAAA,MAAK8K,IAAkB,EAAA;AACxB;AAEMK,KAAQ,iBAAG;AAChB,EAAAnL,GAAA,MAAK8K,IAAkB,EAAA,GAElB,KAAA,YAAY,MAAM,UAAU,QACjC,KAAK,YAAY,MAAM,sBAAsB,GAAG,KAAK,QAAQ,YACxD,KAAA,eAAe,MAAM,UAAU,SAEpC,KAAK,wBAAwB,iBAAiB,eAAe1M,EAAA,MAAK6M,EAAY,CAAA,GACzE,KAAA,wBAAwB,iBAAiB,cAAc7M,EAAA,MAAK6M,KAAc,EAAE,SAAS,IAAO,GAGjG,MAAM,IAAI,QAAQ,CAAC2B,MAAY,sBAAsBA,CAAO,CAAC;AAEvD,QAAA,EAAE,MAAMC,MAAgB,KAAK,WAAY,cAAc,UAAU,EAAG,sBAAsB,GAC1F,EAAE,MAAMC,GAAU,OAAOC,MAAc,KAAK,YAAY,sBAAsB,GAC9EN,KAAkBI,IAAcC,KAAYC,IAAa;AAC1D,OAAA,WAAW,GAAGN,CAAa;AACjC;AAEArB,KAAc,SAACpM,GAAc;AAC5B,QAAMgO,IAAOhO,EAAM,QACbiO,IAAOD,EAAK;AASd,MAPAC,MAAS,YACZ,KAAK,iBAAiBD,EAAK,iBAAiB,EAAE,SAAS,IAEpDC,MAAS,UACZ,KAAK,eAAeD,EAAK,iBAAiB,EAAE,SAAS,IAGlD,CAAC5O,QAAKwM,GAAgBC,EAAA,GAAA;AACzB,IAAIzM,QAAK0M,EAAiB,KACzBtO,EAAA,MAAKoO,GAALM,EAAA,EAAA,KAAA,IAAA;AAED;AAAA,EAAA;AAGD,EAAA1O,EAAA,MAAKoO,GAALO,EAAA,EAAA,KAAA,IAAA;AACD;AAEAjB,KAAU,SAAClL,GAAsB;AAChC,MAAIA,EAAM,QAAQ,eAAeA,EAAM,QAAQ,cAAc;AAC5D,UAAM,EAAE,OAAAyM,EAAU,IAAA,KAAK,YAAY,sBAAsB,GAInDyB,KAHU,KAAK,eAAe,sBAAsB,EAE/B,OAAO,KAAK,YAAY,wBAAwB,QACjCzB,IAAS,KAG7C0B,IAAO,KADMnO,EAAM,WAAW,KAAK,MACVA,EAAM,QAAQ,cAAc,KAAK,IAG1DoO,MADaF,IAAsBC,KACV,MAAO,KAAK,YAAY,wBAAwB;AAE/E,IAAA3Q,EAAA,MAAKoO,OAAL,KAAkB,MAAAwC,EAAA;AAAA,EAAA;AAGnB,MAAIpO,EAAM,QAAQ,UAAUA,EAAM,QAAQ,OAAO;AAChD,IAAAA,EAAM,eAAe;AACrB,UAAM,EAAE,OAAAyM,EAAU,IAAA,KAAK,YAAY,sBAAsB,GACnD4B,IAASrO,EAAM,QAAQ,SAAS,IAAIyM;AAC1C,IAAAjP,EAAA,MAAKoO,OAAL,KAAkB,MAAAyC,CAAA;AAAA,EAAA;AAEpB;AA3NYhC,EA2OI,SAASjO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA1OTC,GAAA;AAAA,EAAfQ,EAAM,OAAO;AAAA,GADFwN,EACI,WAAA,eAAA,CAAA;AACchO,GAAA;AAAA,EAA7BQ,EAAM,qBAAqB;AAAA,GAFhBwN,EAEkB,WAAA,2BAAA,CAAA;AACXhO,GAAA;AAAA,EAAlBQ,EAAM,UAAU;AAAA,GAHLwN,EAGO,WAAA,kBAAA,CAAA;AAOShO,GAAA;AAAA,EAA3BE,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAVd8N,EAUgB,WAAA,QAAA,CAAA;AAMAhO,GAAA;AAAA,EAA3BE,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAhBd8N,EAgBgB,WAAA,QAAA,CAAA;AAOehO,GAAA;AAAA,EAA1CE,EAAS,EAAE,MAAM,QAAQ,SAAS,GAAM,CAAA;AAAA,GAvB7B8N,EAuB+B,WAAA,YAAA,CAAA;AAQlChO,GAAA;AAAA,EAARC,EAAM;AAAA,GA/BK+N,EA+BH,WAAA,kBAAA,CAAA;AACAhO,GAAA;AAAA,EAARC,EAAM;AAAA,GAhCK+N,EAgCH,WAAA,gBAAA,CAAA;AAhCGA,IAANhO,GAAA;AAAA,EADNG,EAAc,iBAAiB;AAAA,GACnB6N,CAAA;;;;;;ACuBN,MAAMiC,WAA8B,MAAM;AAAA,EACzC,cAAc;AACpB,UAAM,YAAY,EAAE,SAAS,IAAM,UAAU,IAAM;AAAA,EAAA;AAErD;AAEO,MAAMC,WAAgC,MAAM;AAAA,EAC3C,cAAc;AACpB,UAAM,cAAc,EAAE,SAAS,IAAM,UAAU,IAAM;AAAA,EAAA;AAEvD;AAEO,MAAMC,WAA6B,MAAM;AAAA,EACxC,cAAc;AACpB,UAAM,WAAW,EAAE,SAAS,IAAM,UAAU,IAAM;AAAA,EAAA;AAEpD;AAWa,IAAAC,IAAN,cAA8BtP,GAAW;AAAA,EAAzC,cAAA;AAAA,UAAA,GAAA,SAAA,GAON,KAAO,QAA6B,CAAC,GAQrC,KAAO,UAAiC,CAAC,GAQzC,KAAO,SAAyB;AAAA,MAC/B,gBAAgB;AAAA,MAChB,UAAU;AAAA,IACX,GAQA,KAAO,YAA2B,CAAC,GAGnC,KAAO,iBAAiB,IAGxB,KAAO,eAAe,IAGtB,KAAQ,iBAAiB,IA+GjB,KAAA,aAAa,CAAC2G,MACdrI;AAAA;AAAA,mBAEU,KAAK,OAAO,cAAc;AAAA,mBAC1B,KAAK,cAAc;AAAA,gBACtB,KAAK,YAAYqI,EAAK,EAAE,CAAC;AAAA,gBACzB,MAAM,KAAK,WAAWA,EAAK,EAAE,CAAC;AAAA,kBAC5B,MAAM,KAAK,aAAaA,EAAK,EAAE,CAAC;AAAA,MAC5C,KAAK,uBAAuBA,CAAI,CAAC,IAAI,KAAK,QAAQ,IAAI,CAAC4I,MAAW,KAAK,eAAeA,GAAQ5I,CAAI,CAAC,CAAC;AAAA;AAAA;AAAA,EAGzG;AAAA,EAxHQ,YAAY7H,GAAa;AACzB,WAAA,KAAK,UAAU,SAASA,CAAG;AAAA,EAAA;AAAA,EAG3B,yBAAyB+B,GAAc8F,GAAoB;AAElE,IADwB9F,EAAM,OACV,UACd,KAAA,WAAW8F,EAAK,EAAE,IAElB,KAAA,aAAaA,EAAK,EAAE;AAAA,EAC1B;AAAA,EAGO,6BAA6B9F,GAAc;AAElD,IADwBA,EAAM,OACV,UACnB,KAAK,eAAe,IAEpB,KAAK,iBAAiB;AAAA,EACvB;AAAA,EAGO,sBAAsB0O,GAAwB;AACrD,SAAK,eAAe,KAAK,mBAAmBA,EAAO,QAAQ,CAAC,KAAK,eAAe,IAChF,KAAK,iBAAiBA,EAAO,OACxB,KAAA,cAAc,IAAIF,IAAsB;AAAA,EAAA;AAAA,EAGtC,iBAAiB;AACxB,SAAK,YAAY,KAAK,MAAM,IAAI,CAAC1I,MAAuBA,EAAK,EAAE,GAC/D,KAAK,iBAAiB,IACjB,KAAA,cAAc,IAAIwI,IAAuB;AAAA,EAAA;AAAA,EAGvC,mBAAmB;AAC1B,SAAK,YAAY,CAAC,GAClB,KAAK,iBAAiB,IACjB,KAAA,cAAc,IAAIC,IAAyB;AAAA,EAAA;AAAA,EAGzC,WAAWtQ,GAAa;AAC/B,SAAK,YAAY,CAAC,GAAG,KAAK,WAAWA,CAAG,GACnC,KAAA,iBAAiB,KAAK,UAAU,SAAS,GACzC,KAAA,cAAc,IAAIqQ,IAAuB;AAAA,EAAA;AAAA,EAGvC,aAAarQ,GAAa;AACjC,SAAK,YAAY,KAAK,UAAU,OAAO,CAAC0Q,MAAiBA,MAAiB1Q,CAAG,GACxE,KAAA,iBAAiB,KAAK,UAAU,SAAS,GACzC,KAAA,cAAc,IAAIsQ,IAAyB;AAAA,EAAA;AAAA,EAGxC,SAAS;AACV,WAAA9Q;AAAA;AAAA;AAAA,cAGKkC;AAAA,MACR,EAAE,KAAK,OAAO,mBAAmB,MAAS,KAAK,OAAO,aAAa;AAAA,MACnE,MAAM;AAAA,IAAA,CACN;AAAA;AAAA,OAEC,KAAK,2BAA2B,IAAI,KAAK,QAAQ,IAAI,CAAC+O,MAAW,KAAK,kBAAkBA,CAAM,CAAC,CAAC;AAAA;AAAA,MAEjGhR,GAAO,KAAK,OAAO,CAACoI,MAASA,EAAK,IAAI,KAAK,UAAU,CAAC;AAAA;AAAA;AAAA,EAAA;AAAA,EAKnD,kBAAkB4I,GAAwB;AAC1C,WAAAjR;AAAA;AAAA,MAEHiR,EAAO,eACNjR,IAAO,KAAK,iBAAiBiR,CAAM,CAAC,KACpCjR,4BAA+BiR,EAAO,SAAS,MAAM,MAAMA,EAAO,IAAI,SAAS;AAAA;AAAA;AAAA,EAAA;AAAA,EAK7E,iBAAiBA,GAAwB;AACzC,WAAAjR;AAAA;AAAA;AAAA,cAGK,MAAM,KAAK,sBAAsBiR,CAAM,CAAC;AAAA,8BACxBA,EAAO,SAAS,MAAM,MAAMA,EAAO,IAAI;AAAA,+BACtC,KAAK,mBAAmBA,EAAO,KAAK,gBAAgB,KAAK,YAAY;AAAA;AAAA;AAAA;AAAA,EAAA;AAAA,EAM3F,4BAA4B;AACnC,QAAI,OAAK,OAAO,YAAY,CAAC,KAAK,OAAO;AAElC,aAAAjR;AAAA;AAAA,MAEHkC;AAAA,QACD,KAAK,OAAO;AAAA,QACZ,MACClC;AAAA;AAAA;AAAA,kBAGY,KAAK,4BAA4B;AAAA,mBAChC,KAAK,UAAU,WAAW,KAAK,MAAM,MAAM;AAAA;AAAA,MAEzD,CAAA;AAAA;AAAA;AAAA,EAAA;AAAA,EAkBI,uBAAuBqI,GAAoB;AAClD,QAAI,OAAK,OAAO,YAAY,CAAC,KAAK,OAAO;AAElC,aAAArI;AAAA;AAAA,MAEHkC,EAAK,CAAC,KAAK,OAAO,UAAU,MAAMlC,oBAAuB6D,EAAUwE,EAAK,QAAQ,MAAS,CAAC,eAAe,CAAC;AAAA,MAC1GnG;AAAA,QACD,KAAK,OAAO;AAAA,QACZ,MAAMlC;AAAA;AAAA;AAAA,gBAGK,CAACmR,MAAoBA,EAAE,gBAAiB,CAAA;AAAA,iBACvC,CAAC5O,MAAiB,KAAK,yBAAyBA,GAAO8F,CAAI,CAAC;AAAA,mBAC1D,KAAK,YAAYA,EAAK,EAAE,CAAC;AAAA;AAAA;AAAA,MAGvC,CAAA;AAAA;AAAA;AAAA,EAAA;AAAA,EAKI,eAAe4I,GAAwB5I,GAAoB;AAC3D,WAAArI;AAAA;AAAA,uEAE8DiR,EAAO,SAAS,MAAM,YAAYA,EAAO,SAAS,MAAM;AAAA,OACxH,KAAK,mBAAmBA,GAAQ5I,CAAI,CAAC;AAAA;AAAA;AAAA;AAAA,EAAA;AAAA,EAMnC,mBAAmB4I,GAAwB5I,GAAoB;AAChE,UAAA7D,IAAQ6D,EAAK,KAAK,KAAK,CAAC+I,MAASA,EAAK,gBAAgBH,EAAO,KAAK,GAAG;AAE3E,QAAIA,EAAO,aAAa;AACvB,YAAMrJ,IAAU,SAAS,cAAcqJ,EAAO,WAAW;AACzD,aAAArJ,EAAQ,SAASqJ,GACjBrJ,EAAQ,OAAOS,GACfT,EAAQ,QAAQpD,GACToD;AAAA,IAAA;AAGR,QAAIqJ,EAAO,eAAe;AACzB,aAAO,6BAA6B;AAC9B,YAAArJ,IAAU,SAAS,cAAc,gBAAgB;AACvD,aAAAA,EAAQ,SAAS,IACjBA,EAAQ,WAAWqJ,EAAO,eAClBrJ,EAAA,QAAQ,EAAE,OAAApD,EAAM,GACjBoD;AAAA,IAAA;AAGD,WAAApD;AAAA,EAAA;AAoET;AA9RawM,EA6NI,SAAS;AAAA,EACxBtQ;AAAA,EACAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8DD;AAtROC,GAAA;AAAA,EADNE,EAAS,EAAE,MAAM,OAAO,WAAW,GAAO,CAAA;AAAA,GAN/BkQ,EAOL,WAAA,SAAA,CAAA;AAQApQ,GAAA;AAAA,EADNE,EAAS,EAAE,MAAM,OAAO,WAAW,GAAO,CAAA;AAAA,GAd/BkQ,EAeL,WAAA,WAAA,CAAA;AAQApQ,GAAA;AAAA,EADNE,EAAS,EAAE,MAAM,QAAQ,WAAW,GAAO,CAAA;AAAA,GAtBhCkQ,EAuBL,WAAA,UAAA,CAAA;AAWApQ,GAAA;AAAA,EADNE,EAAS,EAAE,MAAM,OAAO,WAAW,GAAO,CAAA;AAAA,GAjC/BkQ,EAkCL,WAAA,aAAA,CAAA;AAGApQ,GAAA;AAAA,EADNE,EAAS,EAAE,MAAM,QAAQ,WAAW,GAAO,CAAA;AAAA,GApChCkQ,EAqCL,WAAA,kBAAA,CAAA;AAGApQ,GAAA;AAAA,EADNE,EAAS,EAAE,MAAM,SAAS,WAAW,GAAO,CAAA;AAAA,GAvCjCkQ,EAwCL,WAAA,gBAAA,CAAA;AAGCpQ,GAAA;AAAA,EADPC,EAAM;AAAA,GA1CKmQ,EA2CJ,WAAA,kBAAA,CAAA;AA3CIA,IAANpQ,GAAA;AAAA,EADNG,EAAc,WAAW;AAAA,GACbiQ,CAAA;"}