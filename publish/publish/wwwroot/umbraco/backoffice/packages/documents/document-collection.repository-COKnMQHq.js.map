{"version":3,"file":"document-collection.repository-COKnMQHq.js","sources":["../../../src/packages/documents/documents/collection/repository/document-collection.server.data-source.ts","../../../src/packages/documents/documents/collection/repository/document-collection.repository.ts"],"sourcesContent":["import type { UmbDocumentCollectionFilterModel, UmbDocumentCollectionItemModel } from '../types.js';\r\nimport { UMB_DOCUMENT_ENTITY_TYPE } from '../../entity.js';\r\nimport { DirectionModel, DocumentService } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport { tryExecuteAndNotify } from '@umbraco-cms/backoffice/resources';\r\nimport type { DocumentCollectionResponseModel } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport type { UmbCollectionDataSource } from '@umbraco-cms/backoffice/collection';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\n\r\nexport class UmbDocumentCollectionServerDataSource implements UmbCollectionDataSource<UmbDocumentCollectionItemModel> {\r\n\t#host: UmbControllerHost;\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tthis.#host = host;\r\n\t}\r\n\r\n\tasync getCollection(query: UmbDocumentCollectionFilterModel) {\r\n\t\tif (!query.unique) {\r\n\t\t\tthrow new Error('Unique ID is required to fetch a collection.');\r\n\t\t}\r\n\r\n\t\tconst params = {\r\n\t\t\tid: query.unique,\r\n\t\t\tdataTypeId: query.dataTypeId ?? '',\r\n\t\t\torderBy: query.orderBy ?? 'updateDate',\r\n\t\t\torderCulture: query.orderCulture ?? 'en-US',\r\n\t\t\torderDirection: query.orderDirection === 'asc' ? DirectionModel.ASCENDING : DirectionModel.DESCENDING,\r\n\t\t\tfilter: query.filter,\r\n\t\t\tskip: query.skip || 0,\r\n\t\t\ttake: query.take || 100,\r\n\t\t};\r\n\r\n\t\tconst { data, error } = await tryExecuteAndNotify(this.#host, DocumentService.getCollectionDocumentById(params));\r\n\r\n\t\tif (data) {\r\n\t\t\tconst items = data.items.map((item: DocumentCollectionResponseModel) => {\r\n\t\t\t\t// TODO: remove in v17.0.0\r\n\t\t\t\tconst variant = item.variants[0];\r\n\r\n\t\t\t\tconst model: UmbDocumentCollectionItemModel = {\r\n\t\t\t\t\tunique: item.id,\r\n\t\t\t\t\tentityType: UMB_DOCUMENT_ENTITY_TYPE,\r\n\t\t\t\t\tcontentTypeAlias: item.documentType.alias,\r\n\t\t\t\t\tcreateDate: new Date(variant.createDate),\r\n\t\t\t\t\tcreator: item.creator,\r\n\t\t\t\t\ticon: item.documentType.icon,\r\n\t\t\t\t\tisProtected: item.isProtected,\r\n\t\t\t\t\tisTrashed: item.isTrashed,\r\n\t\t\t\t\tname: variant.name,\r\n\t\t\t\t\tsortOrder: item.sortOrder,\r\n\t\t\t\t\tstate: variant.state,\r\n\t\t\t\t\tupdateDate: new Date(variant.updateDate),\r\n\t\t\t\t\tupdater: item.updater,\r\n\t\t\t\t\tvalues: item.values.map((item) => {\r\n\t\t\t\t\t\treturn { alias: item.alias, value: item.value as string };\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tdocumentType: {\r\n\t\t\t\t\t\tunique: item.documentType.id,\r\n\t\t\t\t\t\ticon: item.documentType.icon,\r\n\t\t\t\t\t\talias: item.documentType.alias,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvariants: item.variants.map((item) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tname: item.name,\r\n\t\t\t\t\t\t\tculture: item.culture ?? null,\r\n\t\t\t\t\t\t\tstate: item.state,\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}),\r\n\t\t\t\t};\r\n\t\t\t\treturn model;\r\n\t\t\t});\r\n\r\n\t\t\treturn { data: { items, total: data.total } };\r\n\t\t}\r\n\r\n\t\treturn { error };\r\n\t}\r\n}\r\n","import type { UmbDocumentCollectionFilterModel } from '../types.js';\r\nimport { UmbDocumentCollectionServerDataSource } from './document-collection.server.data-source.js';\r\nimport { UmbRepositoryBase } from '@umbraco-cms/backoffice/repository';\r\nimport type { UmbCollectionRepository } from '@umbraco-cms/backoffice/collection';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\n\r\nexport class UmbDocumentCollectionRepository extends UmbRepositoryBase implements UmbCollectionRepository {\r\n\t#collectionSource: UmbDocumentCollectionServerDataSource;\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host);\r\n\r\n\t\tthis.#collectionSource = new UmbDocumentCollectionServerDataSource(host);\r\n\t}\r\n\r\n\tasync requestCollection(query: UmbDocumentCollectionFilterModel) {\r\n\t\treturn this.#collectionSource.getCollection(query);\r\n\t}\r\n}\r\n\r\nexport default UmbDocumentCollectionRepository;\r\n"],"names":["UmbDocumentCollectionServerDataSource","#host","host","query","params","DirectionModel","data","error","tryExecuteAndNotify","DocumentService","item","variant","UMB_DOCUMENT_ENTITY_TYPE","UmbDocumentCollectionRepository","UmbRepositoryBase","#collectionSource"],"mappings":";;;;AAQO,MAAMA,EAAyG;AAAA,EACrHC;AAAA,EAEA,YAAYC,GAAyB;AACpC,SAAKD,KAAQC;AAAA,EAAA;AAAA,EAGd,MAAM,cAAcC,GAAyC;AACxD,QAAA,CAACA,EAAM;AACJ,YAAA,IAAI,MAAM,8CAA8C;AAG/D,UAAMC,IAAS;AAAA,MACd,IAAID,EAAM;AAAA,MACV,YAAYA,EAAM,cAAc;AAAA,MAChC,SAASA,EAAM,WAAW;AAAA,MAC1B,cAAcA,EAAM,gBAAgB;AAAA,MACpC,gBAAgBA,EAAM,mBAAmB,QAAQE,EAAe,YAAYA,EAAe;AAAA,MAC3F,QAAQF,EAAM;AAAA,MACd,MAAMA,EAAM,QAAQ;AAAA,MACpB,MAAMA,EAAM,QAAQ;AAAA,IACrB,GAEM,EAAE,MAAAG,GAAM,OAAAC,EAAU,IAAA,MAAMC,EAAoB,KAAKP,IAAOQ,EAAgB,0BAA0BL,CAAM,CAAC;AAE/G,WAAIE,IAsCI,EAAE,MAAM,EAAE,OArCHA,EAAK,MAAM,IAAI,CAACI,MAA0C;AAEjE,YAAAC,IAAUD,EAAK,SAAS,CAAC;AAgCxB,aA9BuC;AAAA,QAC7C,QAAQA,EAAK;AAAA,QACb,YAAYE;AAAA,QACZ,kBAAkBF,EAAK,aAAa;AAAA,QACpC,YAAY,IAAI,KAAKC,EAAQ,UAAU;AAAA,QACvC,SAASD,EAAK;AAAA,QACd,MAAMA,EAAK,aAAa;AAAA,QACxB,aAAaA,EAAK;AAAA,QAClB,WAAWA,EAAK;AAAA,QAChB,MAAMC,EAAQ;AAAA,QACd,WAAWD,EAAK;AAAA,QAChB,OAAOC,EAAQ;AAAA,QACf,YAAY,IAAI,KAAKA,EAAQ,UAAU;AAAA,QACvC,SAASD,EAAK;AAAA,QACd,QAAQA,EAAK,OAAO,IAAI,CAACA,OACjB,EAAE,OAAOA,EAAK,OAAO,OAAOA,EAAK,MAAgB,EACxD;AAAA,QACD,cAAc;AAAA,UACb,QAAQA,EAAK,aAAa;AAAA,UAC1B,MAAMA,EAAK,aAAa;AAAA,UACxB,OAAOA,EAAK,aAAa;AAAA,QAC1B;AAAA,QACA,UAAUA,EAAK,SAAS,IAAI,CAACA,OACrB;AAAA,UACN,MAAMA,EAAK;AAAA,UACX,SAASA,EAAK,WAAW;AAAA,UACzB,OAAOA,EAAK;AAAA,QACb,EACA;AAAA,MACF;AAAA,IACO,CACP,GAEuB,OAAOJ,EAAK,QAAQ,IAGtC,EAAE,OAAAC,EAAM;AAAA,EAAA;AAEjB;ACtEO,MAAMM,UAAwCC,EAAqD;AAAA,EACzGC;AAAA,EAEA,YAAYb,GAAyB;AACpC,UAAMA,CAAI,GAEL,KAAAa,KAAoB,IAAIf,EAAsCE,CAAI;AAAA,EAAA;AAAA,EAGxE,MAAM,kBAAkBC,GAAyC;AACzD,WAAA,KAAKY,GAAkB,cAAcZ,CAAK;AAAA,EAAA;AAEnD;"}