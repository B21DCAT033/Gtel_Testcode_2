{"version":3,"file":"document-publish-modal.element-CZo_df7q.js","sources":["../../../src/packages/documents/documents/publishing/publish/modal/document-publish-modal.element.ts"],"sourcesContent":["import { UmbDocumentVariantState, type UmbDocumentVariantOptionModel } from '../../../types.js';\r\nimport { isNotPublishedMandatory } from '../../utils.js';\r\nimport type { UmbDocumentPublishModalData, UmbDocumentPublishModalValue } from './document-publish-modal.token.js';\r\nimport { css, customElement, html, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbModalBaseElement } from '@umbraco-cms/backoffice/modal';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport { UmbSelectionManager } from '@umbraco-cms/backoffice/utils';\r\n\r\nimport '../../../modals/shared/document-variant-language-picker.element.js';\r\n\r\n@customElement('umb-document-publish-modal')\r\nexport class UmbDocumentPublishModalElement extends UmbModalBaseElement<\r\n\tUmbDocumentPublishModalData,\r\n\tUmbDocumentPublishModalValue\r\n> {\r\n\t#selectionManager = new UmbSelectionManager<string>(this);\r\n\r\n\t@state()\r\n\t_options: Array<UmbDocumentVariantOptionModel> = [];\r\n\r\n\t@state()\r\n\t_hasNotSelectedMandatory?: boolean;\r\n\r\n\t#pickableFilter = (option: UmbDocumentVariantOptionModel) => {\r\n\t\tif (!option.variant || option.variant.state === UmbDocumentVariantState.NOT_CREATED) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn this.data?.pickableFilter ? this.data.pickableFilter(option) : true;\r\n\t};\r\n\r\n\toverride firstUpdated() {\r\n\t\tthis.#configureSelectionManager();\r\n\t}\r\n\r\n\tasync #configureSelectionManager() {\r\n\t\tthis.#selectionManager.setMultiple(true);\r\n\t\tthis.#selectionManager.setSelectable(true);\r\n\r\n\t\t// Only display variants that are relevant to pick from, i.e. variants that are draft, not-published-mandatory or published with pending changes.\r\n\t\t// If we don't know the state (e.g. from a bulk publishing selection) we need to consider it available for selection.\r\n\t\tthis._options =\r\n\t\t\tthis.data?.options.filter(\r\n\t\t\t\t(option) =>\r\n\t\t\t\t\t(option.variant && option.variant.state === null) ||\r\n\t\t\t\t\tisNotPublishedMandatory(option) ||\r\n\t\t\t\t\toption.variant?.state !== UmbDocumentVariantState.NOT_CREATED,\r\n\t\t\t) ?? [];\r\n\r\n\t\tlet selected = this.value?.selection ?? [];\r\n\r\n\t\tconst validOptions = this._options.filter((o) => this.#pickableFilter(o));\r\n\r\n\t\t// Filter selection based on options:\r\n\t\tselected = selected.filter((s) => validOptions.some((o) => o.unique === s));\r\n\r\n\t\t// Additionally select mandatory languages:\r\n\t\t// [NL]: I think for now lets make it an active choice to select the languages. If you just made them, they would be selected. So it just to underline the act of actually selecting these languages.\r\n\t\t/*\r\n\t\tthis._options.forEach((variant) => {\r\n\t\t\tif (variant.language?.isMandatory) {\r\n\t\t\t\tselected.push(variant.unique);\r\n\t\t\t}\r\n\t\t});\r\n\t\t*/\r\n\r\n\t\tthis.#selectionManager.setSelection(selected);\r\n\r\n\t\tthis.observe(\r\n\t\t\tthis.#selectionManager.selection,\r\n\t\t\t(selection: Array<string>) => {\r\n\t\t\t\tif (!this._options && !selection) return;\r\n\r\n\t\t\t\t//Getting not published mandatory options â€” the options that are mandatory and not currently published.\r\n\t\t\t\tconst missingMandatoryOptions = this._options.filter(isNotPublishedMandatory);\r\n\t\t\t\tthis._hasNotSelectedMandatory = missingMandatoryOptions.some((option) => !selection.includes(option.unique));\r\n\t\t\t},\r\n\t\t\t'observeSelection',\r\n\t\t);\r\n\t}\r\n\r\n\t#submit() {\r\n\t\tthis.value = { selection: this.#selectionManager.getSelection() };\r\n\t\tthis.modalContext?.submit();\r\n\t}\r\n\r\n\t#close() {\r\n\t\tthis.modalContext?.reject();\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`<umb-body-layout headline=${this.localize.term('content_readyToPublish')}>\r\n\t\t\t<p id=\"subtitle\">\r\n\t\t\t\t<umb-localize key=\"content_variantsToPublish\">Which variants would you like to publish?</umb-localize>\r\n\t\t\t</p>\r\n\t\t\t<umb-document-variant-language-picker\r\n\t\t\t\t.selectionManager=${this.#selectionManager}\r\n\t\t\t\t.variantLanguageOptions=${this._options}\r\n\t\t\t\t.requiredFilter=${isNotPublishedMandatory}\r\n\t\t\t\t.pickableFilter=${this.#pickableFilter}></umb-document-variant-language-picker>\r\n\r\n\t\t\t<div slot=\"actions\">\r\n\t\t\t\t<uui-button label=${this.localize.term('general_close')} @click=${this.#close}></uui-button>\r\n\t\t\t\t<uui-button\r\n\t\t\t\t\tlabel=\"${this.localize.term('buttons_saveAndPublish')}\"\r\n\t\t\t\t\tlook=\"primary\"\r\n\t\t\t\t\tcolor=\"positive\"\r\n\t\t\t\t\t?disabled=${this._hasNotSelectedMandatory}\r\n\t\t\t\t\t@click=${this.#submit}></uui-button>\r\n\t\t\t</div>\r\n\t\t</umb-body-layout>`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\tmin-width: 460px;\r\n\t\t\t\tmax-width: 90vw;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbDocumentPublishModalElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-document-publish-modal': UmbDocumentPublishModalElement;\r\n\t}\r\n}\r\n"],"names":["_selectionManager","_pickableFilter","_UmbDocumentPublishModalElement_instances","configureSelectionManager_fn","submit_fn","close_fn","UmbDocumentPublishModalElement","UmbModalBaseElement","__privateAdd","UmbSelectionManager","option","UmbDocumentVariantState","__privateMethod","html","__privateGet","isNotPublishedMandatory","selected","validOptions","o","s","selection","missingMandatoryOptions","UmbTextStyles","css","__decorateClass","state","customElement","UmbDocumentPublishModalElement$1"],"mappings":"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"}