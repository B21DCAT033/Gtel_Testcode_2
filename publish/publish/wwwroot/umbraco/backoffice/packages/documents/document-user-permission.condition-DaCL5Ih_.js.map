{"version":3,"file":"document-user-permission.condition-DaCL5Ih_.js","sources":["../../../src/packages/documents/documents/user-permissions/utils.ts","../../../src/packages/documents/documents/user-permissions/conditions/document-user-permission.condition.ts"],"sourcesContent":["import type {\r\n\tDocumentPermissionPresentationModel,\r\n\tUnknownTypePermissionPresentationModel,\r\n} from '@umbraco-cms/backoffice/external/backend-api';\r\n\r\n/**\r\n *\r\n * @param permission\r\n */\r\nexport function isDocumentUserPermission(\r\n\tpermission: DocumentPermissionPresentationModel | UnknownTypePermissionPresentationModel,\r\n): permission is DocumentPermissionPresentationModel {\r\n\treturn (permission as DocumentPermissionPresentationModel).$type === 'DocumentPermissionPresentationModel';\r\n}\r\n","import { isDocumentUserPermission } from '../utils.js';\r\nimport type { UmbDocumentUserPermissionConditionConfig } from './types.js';\r\nimport { UMB_CURRENT_USER_CONTEXT } from '@umbraco-cms/backoffice/current-user';\r\nimport { UMB_ENTITY_CONTEXT } from '@umbraco-cms/backoffice/entity';\r\nimport { observeMultiple } from '@umbraco-cms/backoffice/observable-api';\r\nimport type { UmbConditionControllerArguments, UmbExtensionCondition } from '@umbraco-cms/backoffice/extension-api';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport type { DocumentPermissionPresentationModel } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport { UmbControllerBase } from '@umbraco-cms/backoffice/class-api';\r\n\r\n// Do not export - for internal use only\r\ntype UmbOnChangeCallbackType = (permitted: boolean) => void;\r\n\r\nexport class UmbDocumentUserPermissionCondition extends UmbControllerBase implements UmbExtensionCondition {\r\n\tconfig: UmbDocumentUserPermissionConditionConfig;\r\n\tpermitted = false;\r\n\r\n\t#entityType: string | undefined;\r\n\t#unique: string | null | undefined;\r\n\t#documentPermissions: Array<DocumentPermissionPresentationModel> = [];\r\n\t#fallbackPermissions: string[] = [];\r\n\t#onChange: UmbOnChangeCallbackType;\r\n\r\n\tconstructor(\r\n\t\thost: UmbControllerHost,\r\n\t\targs: UmbConditionControllerArguments<UmbDocumentUserPermissionConditionConfig, UmbOnChangeCallbackType>,\r\n\t) {\r\n\t\tsuper(host);\r\n\t\tthis.config = args.config;\r\n\t\tthis.#onChange = args.onChange;\r\n\r\n\t\tthis.consumeContext(UMB_CURRENT_USER_CONTEXT, (context) => {\r\n\t\t\tthis.observe(\r\n\t\t\t\tcontext.currentUser,\r\n\t\t\t\t(currentUser) => {\r\n\t\t\t\t\tthis.#documentPermissions = currentUser?.permissions?.filter(isDocumentUserPermission) || [];\r\n\t\t\t\t\tthis.#fallbackPermissions = currentUser?.fallbackPermissions || [];\r\n\t\t\t\t\tthis.#checkPermissions();\r\n\t\t\t\t},\r\n\t\t\t\t'umbUserPermissionConditionObserver',\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\tthis.consumeContext(UMB_ENTITY_CONTEXT, (context) => {\r\n\t\t\tif (!context) return;\r\n\r\n\t\t\tthis.observe(\r\n\t\t\t\tobserveMultiple([context.entityType, context.unique]),\r\n\t\t\t\t([entityType, unique]) => {\r\n\t\t\t\t\tthis.#entityType = entityType;\r\n\t\t\t\t\tthis.#unique = unique;\r\n\t\t\t\t\tthis.#checkPermissions();\r\n\t\t\t\t},\r\n\t\t\t\t'umbUserPermissionEntityContextObserver',\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\t#checkPermissions() {\r\n\t\tif (!this.#entityType) return;\r\n\t\tif (this.#unique === undefined) return;\r\n\r\n\t\tconst hasDocumentPermissions = this.#documentPermissions.length > 0;\r\n\r\n\t\t// if there is no permissions for any documents we use the fallback permissions\r\n\t\tif (!hasDocumentPermissions) {\r\n\t\t\tthis.#check(this.#fallbackPermissions);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t/* If there are document permission we check if there are permissions for the current document\r\n\t\t If there aren't we use the fallback permissions */\r\n\t\tif (hasDocumentPermissions) {\r\n\t\t\tconst permissionsForCurrentDocument = this.#documentPermissions.find(\r\n\t\t\t\t(permission) => permission.document.id === this.#unique,\r\n\t\t\t);\r\n\r\n\t\t\t// no permissions for the current document - use the fallback permissions\r\n\t\t\tif (!permissionsForCurrentDocument) {\r\n\t\t\t\tthis.#check(this.#fallbackPermissions);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// we found permissions for the current document - check them\r\n\t\t\tthis.#check(permissionsForCurrentDocument.verbs);\r\n\t\t}\r\n\t}\r\n\r\n\t#check(verbs: Array<string>) {\r\n\t\t/* we default to true se we don't require both allOf and oneOf to be defined\r\n\t\t but they can be combined for more complex scenarios */\r\n\t\tlet allOfPermitted = true;\r\n\t\tlet oneOfPermitted = true;\r\n\r\n\t\t// check if all of the verbs are present\r\n\t\tif (this.config.allOf?.length) {\r\n\t\t\tallOfPermitted = this.config.allOf.every((verb) => verbs.includes(verb));\r\n\t\t}\r\n\r\n\t\t// check if at least one of the verbs is present\r\n\t\tif (this.config.oneOf?.length) {\r\n\t\t\toneOfPermitted = this.config.oneOf.some((verb) => verbs.includes(verb));\r\n\t\t}\r\n\r\n\t\t// if neither allOf or oneOf is defined we default to false\r\n\t\tif (!allOfPermitted && !oneOfPermitted) {\r\n\t\t\tallOfPermitted = false;\r\n\t\t\toneOfPermitted = false;\r\n\t\t}\r\n\r\n\t\tconst permitted = allOfPermitted && oneOfPermitted;\r\n\t\tif (permitted === this.permitted) return;\r\n\r\n\t\tthis.permitted = permitted;\r\n\t\tthis.#onChange(permitted);\r\n\t}\r\n}\r\n\r\nexport { UmbDocumentUserPermissionCondition as api };\r\n"],"names":["isDocumentUserPermission","permission","UmbDocumentUserPermissionCondition","UmbControllerBase","host","args","#documentPermissions","#fallbackPermissions","#onChange","UMB_CURRENT_USER_CONTEXT","context","currentUser","#checkPermissions","UMB_ENTITY_CONTEXT","observeMultiple","entityType","unique","#entityType","#unique","hasDocumentPermissions","#check","permissionsForCurrentDocument","verbs","allOfPermitted","oneOfPermitted","verb","permitted"],"mappings":";;;;AASO,SAASA,EACfC,GACoD;AACpD,SAAQA,EAAmD,UAAU;AACtE;ACAO,MAAMC,UAA2CC,EAAmD;AAAA,EAU1G,YACCC,GACAC,GACC;AACD,UAAMD,CAAI,GAZC,KAAA,YAAA,IAIZ,KAAAE,KAAmE,CAAC,GACpE,KAAAC,KAAiC,CAAC,GAQjC,KAAK,SAASF,EAAK,QACnB,KAAKG,KAAYH,EAAK,UAEjB,KAAA,eAAeI,GAA0B,CAACC,MAAY;AACrD,WAAA;AAAA,QACJA,EAAQ;AAAA,QACR,CAACC,MAAgB;AAChB,eAAKL,KAAuBK,GAAa,aAAa,OAAOX,CAAwB,KAAK,CAAC,GACtF,KAAAO,KAAuBI,GAAa,uBAAuB,CAAC,GACjE,KAAKC,GAAkB;AAAA,QACxB;AAAA,QACA;AAAA,MACD;AAAA,IAAA,CACA,GAEI,KAAA,eAAeC,GAAoB,CAACH,MAAY;AACpD,MAAKA,KAEA,KAAA;AAAA,QACJI,EAAgB,CAACJ,EAAQ,YAAYA,EAAQ,MAAM,CAAC;AAAA,QACpD,CAAC,CAACK,GAAYC,CAAM,MAAM;AACzB,eAAKC,KAAcF,GACnB,KAAKG,KAAUF,GACf,KAAKJ,GAAkB;AAAA,QACxB;AAAA,QACA;AAAA,MACD;AAAA,IAAA,CACA;AAAA,EAAA;AAAA,EAtCFK;AAAA,EACAC;AAAA,EACAZ;AAAA,EACAC;AAAA,EACAC;AAAA,EAqCAI,KAAoB;AAEf,QADA,CAAC,KAAKK,MACN,KAAKC,OAAY,OAAW;AAE1B,UAAAC,IAAyB,KAAKb,GAAqB,SAAS;AAGlE,QAAI,CAACa,GAAwB;AACvB,WAAAC,GAAO,KAAKb,EAAoB;AACrC;AAAA,IAAA;AAKD,QAAIY,GAAwB;AACrB,YAAAE,IAAgC,KAAKf,GAAqB;AAAA,QAC/D,CAACL,MAAeA,EAAW,SAAS,OAAO,KAAKiB;AAAA,MACjD;AAGA,UAAI,CAACG,GAA+B;AAC9B,aAAAD,GAAO,KAAKb,EAAoB;AACrC;AAAA,MAAA;AAII,WAAAa,GAAOC,EAA8B,KAAK;AAAA,IAAA;AAAA,EAChD;AAAA,EAGDD,GAAOE,GAAsB;AAG5B,QAAIC,IAAiB,IACjBC,IAAiB;AAGjB,IAAA,KAAK,OAAO,OAAO,WACLD,IAAA,KAAK,OAAO,MAAM,MAAM,CAACE,MAASH,EAAM,SAASG,CAAI,CAAC,IAIpE,KAAK,OAAO,OAAO,WACLD,IAAA,KAAK,OAAO,MAAM,KAAK,CAACC,MAASH,EAAM,SAASG,CAAI,CAAC,IAInE,CAACF,KAAkB,CAACC,MACND,IAAA,IACAC,IAAA;AAGlB,UAAME,IAAYH,KAAkBC;AAChC,IAAAE,MAAc,KAAK,cAEvB,KAAK,YAAYA,GACjB,KAAKlB,GAAUkB,CAAS;AAAA,EAAA;AAE1B;"}