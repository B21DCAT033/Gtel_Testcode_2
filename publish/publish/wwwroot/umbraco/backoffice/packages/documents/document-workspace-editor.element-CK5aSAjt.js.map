{"version":3,"file":"document-workspace-editor.element-CK5aSAjt.js","sources":["../../../src/packages/documents/documents/workspace/document-workspace-split-view-variant-selector.element.ts","../../../src/packages/documents/documents/workspace/document-workspace-split-view.element.ts","../../../src/packages/documents/documents/workspace/document-workspace-editor.element.ts"],"sourcesContent":["import type { UmbDocumentVariantOptionModel } from '../types.js';\r\nimport { sortVariants } from '../utils.js';\r\nimport { UMB_DOCUMENT_PUBLISHING_WORKSPACE_CONTEXT } from '../publishing/index.js';\r\nimport { customElement, html, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { DocumentVariantStateModel } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport { UmbWorkspaceSplitViewVariantSelectorElement } from '@umbraco-cms/backoffice/workspace';\r\n\r\nconst elementName = 'umb-document-workspace-split-view-variant-selector';\r\n@customElement(elementName)\r\nexport class UmbDocumentWorkspaceSplitViewVariantSelectorElement extends UmbWorkspaceSplitViewVariantSelectorElement<UmbDocumentVariantOptionModel> {\r\n\tprotected override _variantSorter = sortVariants;\r\n\r\n\t@state()\r\n\tprivate _variantsWithPendingChanges: Array<any> = [];\r\n\r\n\t#documentPublishingWorkspaceContext?: typeof UMB_DOCUMENT_PUBLISHING_WORKSPACE_CONTEXT.TYPE;\r\n\r\n\t#publishStateLocalizationMap = {\r\n\t\t[DocumentVariantStateModel.DRAFT]: 'content_unpublished',\r\n\t\t[DocumentVariantStateModel.PUBLISHED]: 'content_published',\r\n\t\t// TODO: The pending changes state can be removed once the management Api removes this state\r\n\t\t// We only keep it here to make typescript happy\r\n\t\t// We should also make our own state model for this\r\n\t\t[DocumentVariantStateModel.PUBLISHED_PENDING_CHANGES]: 'content_published',\r\n\t\t[DocumentVariantStateModel.NOT_CREATED]: 'content_notCreated',\r\n\t};\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.consumeContext(UMB_DOCUMENT_PUBLISHING_WORKSPACE_CONTEXT, (instance) => {\r\n\t\t\tthis.#documentPublishingWorkspaceContext = instance;\r\n\t\t\tthis.#observePendingChanges();\r\n\t\t});\r\n\t}\r\n\r\n\t#observePendingChanges() {\r\n\t\tthis.observe(\r\n\t\t\tthis.#documentPublishingWorkspaceContext?.publishedPendingChanges.variantsWithChanges,\r\n\t\t\t(variants) => {\r\n\t\t\t\tthis._variantsWithPendingChanges = variants || [];\r\n\t\t\t},\r\n\t\t\t'_observePendingChanges',\r\n\t\t);\r\n\t}\r\n\r\n\t#hasPendingChanges(variant: UmbDocumentVariantOptionModel) {\r\n\t\treturn this._variantsWithPendingChanges.some((x) => x.variantId.compare(variant));\r\n\t}\r\n\r\n\t#getVariantState(variantOption: UmbDocumentVariantOptionModel) {\r\n\t\tlet term = this.#publishStateLocalizationMap[variantOption.variant?.state || DocumentVariantStateModel.NOT_CREATED];\r\n\r\n\t\tif (\r\n\t\t\t(variantOption.variant?.state === DocumentVariantStateModel.PUBLISHED ||\r\n\t\t\t\tvariantOption.variant?.state === DocumentVariantStateModel.PUBLISHED_PENDING_CHANGES) &&\r\n\t\t\tthis.#hasPendingChanges(variantOption)\r\n\t\t) {\r\n\t\t\tterm = 'content_publishedPendingChanges';\r\n\t\t}\r\n\r\n\t\treturn this.localize.term(term);\r\n\t}\r\n\r\n\toverride _renderVariantDetails(variantOption: UmbDocumentVariantOptionModel) {\r\n\t\treturn html` ${this.#getVariantState(variantOption)}`;\r\n\t}\r\n}\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t[elementName]: UmbDocumentWorkspaceSplitViewVariantSelectorElement;\r\n\t}\r\n}\r\n","import { UMB_DOCUMENT_WORKSPACE_CONTEXT } from './document-workspace.context-token.js';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport { css, html, nothing, customElement, state, repeat } from '@umbraco-cms/backoffice/external/lit';\r\nimport type { ActiveVariant } from '@umbraco-cms/backoffice/workspace';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\n\r\nimport './document-workspace-split-view-variant-selector.element.js';\r\n\r\n@customElement('umb-document-workspace-split-view')\r\nexport class UmbDocumentWorkspaceSplitViewElement extends UmbLitElement {\r\n\t// TODO: Refactor: use the split view context token:\r\n\tprivate _workspaceContext?: typeof UMB_DOCUMENT_WORKSPACE_CONTEXT.TYPE;\r\n\r\n\t@state()\r\n\t_variants?: Array<ActiveVariant>;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\t// TODO: Refactor: use a split view workspace context token: [NL]\r\n\t\tthis.consumeContext(UMB_DOCUMENT_WORKSPACE_CONTEXT, (context) => {\r\n\t\t\tthis._workspaceContext = context;\r\n\t\t\tthis._observeActiveVariantInfo();\r\n\t\t});\r\n\t}\r\n\r\n\tprivate _observeActiveVariantInfo() {\r\n\t\tif (!this._workspaceContext) return;\r\n\t\tthis.observe(\r\n\t\t\tthis._workspaceContext.splitView.activeVariantsInfo,\r\n\t\t\t(variants) => {\r\n\t\t\t\tthis._variants = variants;\r\n\t\t\t},\r\n\t\t\t'_observeActiveVariantsInfo',\r\n\t\t);\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn this._variants\r\n\t\t\t? html`<div id=\"splitViews\">\r\n\t\t\t\t\t\t${repeat(\r\n\t\t\t\t\t\t\tthis._variants,\r\n\t\t\t\t\t\t\t(view) =>\r\n\t\t\t\t\t\t\t\tview.index + '_' + (view.culture ?? '') + '_' + (view.segment ?? '') + '_' + this._variants!.length,\r\n\t\t\t\t\t\t\t(view) => html`\r\n\t\t\t\t\t\t\t\t<umb-workspace-split-view\r\n\t\t\t\t\t\t\t\t\t.splitViewIndex=${view.index}\r\n\t\t\t\t\t\t\t\t\t.displayNavigation=${view.index === this._variants!.length - 1}>\r\n\t\t\t\t\t\t\t\t\t<umb-document-workspace-split-view-variant-selector\r\n\t\t\t\t\t\t\t\t\t\tslot=\"variant-selector\"></umb-document-workspace-split-view-variant-selector>\r\n\t\t\t\t\t\t\t\t</umb-workspace-split-view>\r\n\t\t\t\t\t\t\t`,\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<umb-workspace-footer alias=\"Umb.Workspace.Document\"></umb-workspace-footer>`\r\n\t\t\t: nothing;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\theight: 100%;\r\n\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex: 1;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t}\r\n\r\n\t\t\t#splitViews {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\theight: calc(100% - var(--umb-footer-layout-height));\r\n\t\t\t}\r\n\r\n\t\t\t#breadcrumbs {\r\n\t\t\t\tmargin: 0 var(--uui-size-layout-1);\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbDocumentWorkspaceSplitViewElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-document-workspace-split-view': UmbDocumentWorkspaceSplitViewElement;\r\n\t}\r\n}\r\n","import type { UmbDocumentVariantOptionModel } from '../types.js';\r\nimport { UmbDocumentWorkspaceSplitViewElement } from './document-workspace-split-view.element.js';\r\nimport { UMB_DOCUMENT_WORKSPACE_CONTEXT } from './document-workspace.context-token.js';\r\nimport { customElement, state, css, html } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport type { UmbRoute, UmbRouterSlotInitEvent } from '@umbraco-cms/backoffice/router';\r\nimport { UMB_APP_LANGUAGE_CONTEXT } from '@umbraco-cms/backoffice/language';\r\n\r\n// TODO: This seem fully identical with Media Workspace Editor, so we can refactor this to a generic component. [NL]\r\n@customElement('umb-document-workspace-editor')\r\nexport class UmbDocumentWorkspaceEditorElement extends UmbLitElement {\r\n\t//\r\n\t// TODO: Refactor: when having a split view/variants context token, we can rename the split view/variants component to a generic and make this component generic as well. [NL]\r\n\tprivate splitViewElement = new UmbDocumentWorkspaceSplitViewElement();\r\n\r\n\t#appLanguage?: typeof UMB_APP_LANGUAGE_CONTEXT.TYPE;\r\n\t#workspaceContext?: typeof UMB_DOCUMENT_WORKSPACE_CONTEXT.TYPE;\r\n\r\n\t#workspaceRoute?: string;\r\n\t#appCulture?: string;\r\n\t#variants?: Array<UmbDocumentVariantOptionModel>;\r\n\r\n\t@state()\r\n\t_routes?: Array<UmbRoute>;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.consumeContext(UMB_APP_LANGUAGE_CONTEXT, (instance) => {\r\n\t\t\tthis.#appLanguage = instance;\r\n\t\t\tthis.observe(this.#appLanguage.appLanguageCulture, (appCulture) => {\r\n\t\t\t\tthis.#appCulture = appCulture;\r\n\t\t\t\tthis.#generateRoutes();\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tthis.consumeContext(UMB_DOCUMENT_WORKSPACE_CONTEXT, (instance) => {\r\n\t\t\tthis.#workspaceContext = instance;\r\n\t\t\tthis.observe(\r\n\t\t\t\tthis.#workspaceContext.variantOptions,\r\n\t\t\t\t(variants) => {\r\n\t\t\t\t\tthis.#variants = variants;\r\n\t\t\t\t\tthis.#generateRoutes();\r\n\t\t\t\t},\r\n\t\t\t\t'_observeVariants',\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\t#handleVariantFolderPart(index: number, folderPart: string) {\r\n\t\tconst variantSplit = folderPart.split('_');\r\n\t\tconst culture = variantSplit[0];\r\n\t\tconst segment = variantSplit[1];\r\n\t\tthis.#workspaceContext?.splitView.setActiveVariant(index, culture, segment);\r\n\t}\r\n\r\n\t#generateRoutes() {\r\n\t\tif (!this.#variants || !this.#appCulture) return;\r\n\r\n\t\t// Generate split view routes for all available routes\r\n\t\tconst routes: Array<UmbRoute> = [];\r\n\r\n\t\t// Split view routes:\r\n\t\tthis.#variants.forEach((variantA) => {\r\n\t\t\tthis.#variants!.forEach((variantB) => {\r\n\t\t\t\troutes.push({\r\n\t\t\t\t\t// TODO: When implementing Segments, be aware if using the unique still is URL Safe, cause its most likely not... [NL]\r\n\t\t\t\t\tpath: variantA.unique + '_&_' + variantB.unique,\r\n\t\t\t\t\tcomponent: this.splitViewElement,\r\n\t\t\t\t\tsetup: (_component, info) => {\r\n\t\t\t\t\t\t// Set split view/active info..\r\n\t\t\t\t\t\tconst variantSplit = info.match.fragments.consumed.split('_&_');\r\n\t\t\t\t\t\tvariantSplit.forEach((part, index) => {\r\n\t\t\t\t\t\t\tthis.#handleVariantFolderPart(index, part);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\t// Single view:\r\n\t\tthis.#variants.forEach((variant) => {\r\n\t\t\troutes.push({\r\n\t\t\t\t// TODO: When implementing Segments, be aware if using the unique still is URL Safe, cause its most likely not... [NL]\r\n\t\t\t\tpath: variant.unique,\r\n\t\t\t\tcomponent: this.splitViewElement,\r\n\t\t\t\tsetup: (_component, info) => {\r\n\t\t\t\t\t// cause we might come from a split-view, we need to reset index 1.\r\n\t\t\t\t\tthis.#workspaceContext?.splitView.removeActiveVariant(1);\r\n\t\t\t\t\tthis.#handleVariantFolderPart(0, info.match.fragments.consumed);\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tif (routes.length !== 0) {\r\n\t\t\t// Using first single view as the default route for now (hence the math below):\r\n\t\t\troutes.push({\r\n\t\t\t\tpath: '',\r\n\t\t\t\tresolve: () => {\r\n\t\t\t\t\tconst route = routes.find((route) => route.path === this.#appCulture);\r\n\r\n\t\t\t\t\tif (!route) {\r\n\t\t\t\t\t\t// TODO: Notice: here is a specific index used for fallback, this could be made more solid [NL]\r\n\t\t\t\t\t\thistory.replaceState({}, '', `${this.#workspaceRoute}/${routes[routes.length - 3].path}`);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\thistory.replaceState({}, '', `${this.#workspaceRoute}/${route?.path}`);\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\troutes.push({\r\n\t\t\tpath: `**`,\r\n\t\t\tcomponent: async () => (await import('@umbraco-cms/backoffice/router')).UmbRouteNotFoundElement,\r\n\t\t});\r\n\r\n\t\tthis._routes = routes;\r\n\t}\r\n\r\n\tprivate _gotWorkspaceRoute = (e: UmbRouterSlotInitEvent) => {\r\n\t\tthis.#workspaceRoute = e.target.absoluteRouterPath;\r\n\t\tthis.#workspaceContext?.splitView.setWorkspaceRoute(this.#workspaceRoute);\r\n\t};\r\n\r\n\toverride render() {\r\n\t\treturn this._routes\r\n\t\t\t? html`<umb-router-slot .routes=${this._routes} @init=${this._gotWorkspaceRoute}></umb-router-slot>`\r\n\t\t\t: '';\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\theight: 100%;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbDocumentWorkspaceEditorElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-document-workspace-editor': UmbDocumentWorkspaceEditorElement;\r\n\t}\r\n}\r\n"],"names":["_documentPublishingWorkspaceContext","_publishStateLocalizationMap","_UmbDocumentWorkspaceSplitViewVariantSelectorElement_instances","observePendingChanges_fn","hasPendingChanges_fn","getVariantState_fn","elementName","UmbDocumentWorkspaceSplitViewVariantSelectorElement","UmbWorkspaceSplitViewVariantSelectorElement","__privateAdd","sortVariants","DocumentVariantStateModel","UMB_DOCUMENT_PUBLISHING_WORKSPACE_CONTEXT","instance","__privateSet","__privateMethod","variantOption","html","__privateGet","variants","variant","x","term","__decorateClass","state","customElement","UmbDocumentWorkspaceSplitViewElement","UmbLitElement","UMB_DOCUMENT_WORKSPACE_CONTEXT","context","repeat","view","nothing","UmbTextStyles","css","_appLanguage","_workspaceContext","_workspaceRoute","_appCulture","_variants","_UmbDocumentWorkspaceEditorElement_instances","handleVariantFolderPart_fn","generateRoutes_fn","UmbDocumentWorkspaceEditorElement","e","UMB_APP_LANGUAGE_CONTEXT","appCulture","index","folderPart","variantSplit","culture","segment","routes","variantA","variantB","_component","info","part","route","UmbDocumentWorkspaceEditorElement$1"],"mappings":"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"}