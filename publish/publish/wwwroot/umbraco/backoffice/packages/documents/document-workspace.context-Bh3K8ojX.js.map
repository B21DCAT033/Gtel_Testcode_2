{"version":3,"file":"document-workspace.context-Bh3K8ojX.js","sources":["../../../src/packages/documents/documents/property-dataset-context/document-property-dataset.context.ts","../../../src/packages/documents/documents/repository/validation/document-validation.server.data-source.ts","../../../src/packages/documents/documents/repository/validation/document-validation.repository.ts","../../../src/packages/documents/documents/workspace/document-workspace.context.ts"],"sourcesContent":["import type { UmbDocumentDetailModel, UmbDocumentVariantModel } from '../types.js';\r\nimport { UmbContentPropertyDatasetContext } from '@umbraco-cms/backoffice/content';\r\nimport type { UmbDocumentTypeDetailModel } from '@umbraco-cms/backoffice/document-type';\r\n\r\nexport class UmbDocumentPropertyDatasetContext extends UmbContentPropertyDatasetContext<\r\n\tUmbDocumentDetailModel,\r\n\tUmbDocumentTypeDetailModel,\r\n\tUmbDocumentVariantModel\r\n> {}\r\n","import type { UmbDocumentDetailModel } from '../../types.js';\r\nimport {\r\n\ttype CreateDocumentRequestModel,\r\n\tDocumentService,\r\n\ttype ValidateUpdateDocumentRequestModel,\r\n} from '@umbraco-cms/backoffice/external/backend-api';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { tryExecute } from '@umbraco-cms/backoffice/resources';\r\nimport type { UmbVariantId } from '@umbraco-cms/backoffice/variant';\r\nimport type { UmbEntityUnique } from '@umbraco-cms/backoffice/entity';\r\n\r\n/**\r\n * A server data source for Document Validation\r\n */\r\nexport class UmbDocumentValidationServerDataSource {\r\n\t//#host: UmbControllerHost;\r\n\r\n\t// TODO: [v15]: ignoring unused var here here to prevent a breaking change\r\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\t//this.#host = host;\r\n\t}\r\n\r\n\t/**\r\n\t * Validate a new Document on the server\r\n\t * @param {UmbDocumentDetailModel} model - Document Model\r\n\t * @param parentUnique - Parent Unique\r\n\t * @returns {*}\r\n\t */\r\n\tasync validateCreate(model: UmbDocumentDetailModel, parentUnique: UmbEntityUnique = null) {\r\n\t\tif (!model) throw new Error('Document is missing');\r\n\t\tif (!model.unique) throw new Error('Document unique is missing');\r\n\t\tif (parentUnique === undefined) throw new Error('Parent unique is missing');\r\n\r\n\t\t// TODO: make data mapper to prevent errors\r\n\t\tconst requestBody: CreateDocumentRequestModel = {\r\n\t\t\tid: model.unique,\r\n\t\t\tparent: parentUnique ? { id: parentUnique } : null,\r\n\t\t\tdocumentType: { id: model.documentType.unique },\r\n\t\t\ttemplate: model.template ? { id: model.template.unique } : null,\r\n\t\t\tvalues: model.values,\r\n\t\t\tvariants: model.variants,\r\n\t\t};\r\n\r\n\t\t// Maybe use: tryExecuteAndNotify\r\n\t\treturn tryExecute(\r\n\t\t\t//this.#host,\r\n\t\t\tDocumentService.postDocumentValidate({\r\n\t\t\t\trequestBody,\r\n\t\t\t}),\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Validate a existing Document\r\n\t * @param {UmbDocumentDetailModel} model - Document Model\r\n\t * @param {Array<UmbVariantId>} variantIds - Variant Ids\r\n\t * @returns {*}\r\n\t */\r\n\tasync validateUpdate(model: UmbDocumentDetailModel, variantIds: Array<UmbVariantId>) {\r\n\t\tif (!model.unique) throw new Error('Unique is missing');\r\n\r\n\t\tconst cultures = variantIds.map((id) => id.culture).filter((culture) => culture !== null) as Array<string>;\r\n\r\n\t\t// TODO: make data mapper to prevent errors\r\n\t\tconst requestBody: ValidateUpdateDocumentRequestModel = {\r\n\t\t\ttemplate: model.template ? { id: model.template.unique } : null,\r\n\t\t\tvalues: model.values,\r\n\t\t\tvariants: model.variants,\r\n\t\t\tcultures,\r\n\t\t};\r\n\r\n\t\t// Maybe use: tryExecuteAndNotify\r\n\t\treturn tryExecute(\r\n\t\t\t//this.#host,\r\n\t\t\tDocumentService.putUmbracoManagementApiV11DocumentByIdValidate11({\r\n\t\t\t\tid: model.unique,\r\n\t\t\t\trequestBody,\r\n\t\t\t}),\r\n\t\t);\r\n\t}\r\n}\r\n","import type { UmbDocumentDetailModel } from '../../types.js';\r\nimport { UmbDocumentValidationServerDataSource } from './document-validation.server.data-source.js';\r\nimport type { UmbVariantId } from '@umbraco-cms/backoffice/variant';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { UmbRepositoryBase } from '@umbraco-cms/backoffice/repository';\r\nimport type { UmbContentValidationRepository } from '@umbraco-cms/backoffice/content';\r\n\r\ntype DetailModelType = UmbDocumentDetailModel;\r\n\r\nexport class UmbDocumentValidationRepository\r\n\textends UmbRepositoryBase\r\n\timplements UmbContentValidationRepository<DetailModelType>\r\n{\r\n\t#validationDataSource: UmbDocumentValidationServerDataSource;\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host);\r\n\r\n\t\tthis.#validationDataSource = new UmbDocumentValidationServerDataSource(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a promise with an observable of the detail for the given unique\r\n\t * @param {DetailModelType} model\r\n\t * @param {string | null} [parentUnique]\r\n\t * @returns {*}\r\n\t * @memberof UmbDetailRepositoryBase\r\n\t */\r\n\tasync validateCreate(model: DetailModelType, parentUnique: string | null) {\r\n\t\tif (!model) throw new Error('Data is missing');\r\n\r\n\t\treturn this.#validationDataSource.validateCreate(model, parentUnique);\r\n\t}\r\n\r\n\t/**\r\n\t * Saves the given data\r\n\t * @param {DetailModelType} model\r\n\t * @param variantIds\r\n\t * @returns {*}\r\n\t * @memberof UmbDetailRepositoryBase\r\n\t */\r\n\tasync validateSave(model: DetailModelType, variantIds: Array<UmbVariantId>) {\r\n\t\tif (!model) throw new Error('Data is missing');\r\n\t\tif (!model.unique) throw new Error('Unique is missing');\r\n\r\n\t\treturn this.#validationDataSource.validateUpdate(model, variantIds);\r\n\t}\r\n}\r\n\r\nexport { UmbDocumentValidationRepository as api };\r\n","import { UmbDocumentTypeDetailRepository } from '../../document-types/repository/detail/document-type-detail.repository.js';\r\nimport { UmbDocumentPropertyDatasetContext } from '../property-dataset-context/document-property-dataset.context.js';\r\nimport type { UmbDocumentDetailRepository } from '../repository/index.js';\r\nimport { UMB_DOCUMENT_DETAIL_REPOSITORY_ALIAS } from '../repository/index.js';\r\nimport type { UmbDocumentDetailModel, UmbDocumentVariantModel } from '../types.js';\r\nimport {\r\n\tUMB_CREATE_DOCUMENT_WORKSPACE_PATH_PATTERN,\r\n\tUMB_CREATE_FROM_BLUEPRINT_DOCUMENT_WORKSPACE_PATH_PATTERN,\r\n\tUMB_DOCUMENT_COLLECTION_ALIAS,\r\n\tUMB_DOCUMENT_ENTITY_TYPE,\r\n\tUMB_DOCUMENT_SAVE_MODAL,\r\n\tUMB_DOCUMENT_USER_PERMISSION_CONDITION_ALIAS,\r\n\tUMB_EDIT_DOCUMENT_WORKSPACE_PATH_PATTERN,\r\n\tUMB_USER_PERMISSION_DOCUMENT_CREATE,\r\n\tUMB_USER_PERMISSION_DOCUMENT_UPDATE,\r\n} from '../constants.js';\r\nimport { UmbDocumentPreviewRepository } from '../repository/preview/index.js';\r\nimport { UMB_DOCUMENT_PUBLISHING_WORKSPACE_CONTEXT, UmbDocumentPublishingRepository } from '../publishing/index.js';\r\nimport { UmbDocumentValidationRepository } from '../repository/validation/index.js';\r\nimport { UMB_DOCUMENT_DETAIL_MODEL_VARIANT_SCAFFOLD, UMB_DOCUMENT_WORKSPACE_ALIAS } from './constants.js';\r\nimport type { UmbEntityModel } from '@umbraco-cms/backoffice/entity';\r\nimport { UMB_INVARIANT_CULTURE, UmbVariantId } from '@umbraco-cms/backoffice/variant';\r\nimport {\r\n\ttype UmbPublishableWorkspaceContext,\r\n\tUmbWorkspaceIsNewRedirectController,\r\n\tUmbWorkspaceIsNewRedirectControllerAlias,\r\n} from '@umbraco-cms/backoffice/workspace';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { UmbDocumentBlueprintDetailRepository } from '@umbraco-cms/backoffice/document-blueprint';\r\nimport {\r\n\tUmbContentDetailWorkspaceContextBase,\r\n\ttype UmbContentCollectionWorkspaceContext,\r\n\ttype UmbContentWorkspaceContext,\r\n} from '@umbraco-cms/backoffice/content';\r\nimport type { UmbDocumentTypeDetailModel } from '@umbraco-cms/backoffice/document-type';\r\nimport { UmbIsTrashedEntityContext } from '@umbraco-cms/backoffice/recycle-bin';\r\nimport { UMB_APP_CONTEXT } from '@umbraco-cms/backoffice/app';\r\nimport { UmbDeprecation } from '@umbraco-cms/backoffice/utils';\r\nimport { createExtensionApiByAlias } from '@umbraco-cms/backoffice/extension-registry';\r\n\r\ntype ContentModel = UmbDocumentDetailModel;\r\ntype ContentTypeModel = UmbDocumentTypeDetailModel;\r\n\r\nexport class UmbDocumentWorkspaceContext\r\n\textends UmbContentDetailWorkspaceContextBase<\r\n\t\tContentModel,\r\n\t\tUmbDocumentDetailRepository,\r\n\t\tContentTypeModel,\r\n\t\tUmbDocumentVariantModel\r\n\t>\r\n\timplements\r\n\t\tUmbContentWorkspaceContext<ContentModel, ContentTypeModel, UmbDocumentVariantModel>,\r\n\t\tUmbPublishableWorkspaceContext,\r\n\t\tUmbContentCollectionWorkspaceContext<UmbDocumentTypeDetailModel>\r\n{\r\n\t/**\r\n\t * The publishing repository for the document workspace.\r\n\t * @deprecated Will be removed in v17. Use the methods on the UMB_DOCUMENT_PUBLISHING_WORKSPACE_CONTEXT instead.\r\n\t * @memberof UmbDocumentWorkspaceContext\r\n\t */\r\n\tpublic readonly publishingRepository = new UmbDocumentPublishingRepository(this);\r\n\r\n\treadonly isTrashed = this._data.createObservablePartOfCurrent((data) => data?.isTrashed);\r\n\treadonly contentTypeUnique = this._data.createObservablePartOfCurrent((data) => data?.documentType.unique);\r\n\treadonly contentTypeHasCollection = this._data.createObservablePartOfCurrent(\r\n\t\t(data) => !!data?.documentType.collection,\r\n\t);\r\n\treadonly urls = this._data.createObservablePartOfCurrent((data) => data?.urls || []);\r\n\treadonly templateId = this._data.createObservablePartOfCurrent((data) => data?.template?.unique || null);\r\n\r\n\t#isTrashedContext = new UmbIsTrashedEntityContext(this);\r\n\t#publishingContext?: typeof UMB_DOCUMENT_PUBLISHING_WORKSPACE_CONTEXT.TYPE;\r\n\t#userCanCreate = false;\r\n\t#userCanUpdate = false;\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host, {\r\n\t\t\tentityType: UMB_DOCUMENT_ENTITY_TYPE,\r\n\t\t\tworkspaceAlias: UMB_DOCUMENT_WORKSPACE_ALIAS,\r\n\t\t\tdetailRepositoryAlias: UMB_DOCUMENT_DETAIL_REPOSITORY_ALIAS,\r\n\t\t\tcontentTypeDetailRepository: UmbDocumentTypeDetailRepository,\r\n\t\t\tcontentValidationRepository: UmbDocumentValidationRepository,\r\n\t\t\tskipValidationOnSubmit: true,\r\n\t\t\tcontentVariantScaffold: UMB_DOCUMENT_DETAIL_MODEL_VARIANT_SCAFFOLD,\r\n\t\t\tcontentTypePropertyName: 'documentType',\r\n\t\t\tsaveModalToken: UMB_DOCUMENT_SAVE_MODAL,\r\n\t\t});\r\n\r\n\t\tthis.observe(this.contentTypeUnique, (unique) => this.structure.loadType(unique), null);\r\n\r\n\t\t// TODO: Remove this in v17 as we have moved the publishing methods to the UMB_DOCUMENT_PUBLISHING_WORKSPACE_CONTEXT.\r\n\t\tthis.consumeContext(UMB_DOCUMENT_PUBLISHING_WORKSPACE_CONTEXT, (context) => {\r\n\t\t\tthis.#publishingContext = context;\r\n\t\t});\r\n\r\n\t\tcreateExtensionApiByAlias(this, UMB_DOCUMENT_USER_PERMISSION_CONDITION_ALIAS, [\r\n\t\t\t{\r\n\t\t\t\tconfig: {\r\n\t\t\t\t\tallOf: [UMB_USER_PERMISSION_DOCUMENT_CREATE],\r\n\t\t\t\t},\r\n\t\t\t\tonChange: (permitted: boolean) => {\r\n\t\t\t\t\tthis.#userCanCreate = permitted;\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t]);\r\n\r\n\t\tcreateExtensionApiByAlias(this, UMB_DOCUMENT_USER_PERMISSION_CONDITION_ALIAS, [\r\n\t\t\t{\r\n\t\t\t\tconfig: {\r\n\t\t\t\t\tallOf: [UMB_USER_PERMISSION_DOCUMENT_UPDATE],\r\n\t\t\t\t},\r\n\t\t\t\tonChange: (permitted: boolean) => {\r\n\t\t\t\t\tthis.#userCanUpdate = permitted;\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t]);\r\n\r\n\t\tthis.routes.setRoutes([\r\n\t\t\t{\r\n\t\t\t\tpath: UMB_CREATE_FROM_BLUEPRINT_DOCUMENT_WORKSPACE_PATH_PATTERN.toString(),\r\n\t\t\t\tcomponent: () => import('./document-workspace-editor.element.js'),\r\n\t\t\t\tsetup: async (_component, info) => {\r\n\t\t\t\t\tconst parentEntityType = info.match.params.parentEntityType;\r\n\t\t\t\t\tconst parentUnique: string | null =\r\n\t\t\t\t\t\tinfo.match.params.parentUnique === 'null' ? null : info.match.params.parentUnique;\r\n\t\t\t\t\tconst documentTypeUnique = info.match.params.documentTypeUnique;\r\n\t\t\t\t\tconst blueprintUnique = info.match.params.blueprintUnique;\r\n\r\n\t\t\t\t\tawait this.create(\r\n\t\t\t\t\t\t{ entityType: parentEntityType, unique: parentUnique },\r\n\t\t\t\t\t\tdocumentTypeUnique,\r\n\t\t\t\t\t\tblueprintUnique,\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tnew UmbWorkspaceIsNewRedirectController(\r\n\t\t\t\t\t\tthis,\r\n\t\t\t\t\t\tthis,\r\n\t\t\t\t\t\tthis.getHostElement().shadowRoot!.querySelector('umb-router-slot')!,\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: UMB_CREATE_DOCUMENT_WORKSPACE_PATH_PATTERN.toString(),\r\n\t\t\t\tcomponent: () => import('./document-workspace-editor.element.js'),\r\n\t\t\t\tsetup: async (_component, info) => {\r\n\t\t\t\t\tconst parentEntityType = info.match.params.parentEntityType;\r\n\t\t\t\t\tconst parentUnique = info.match.params.parentUnique === 'null' ? null : info.match.params.parentUnique;\r\n\t\t\t\t\tconst documentTypeUnique = info.match.params.documentTypeUnique;\r\n\t\t\t\t\tawait this.create({ entityType: parentEntityType, unique: parentUnique }, documentTypeUnique);\r\n\r\n\t\t\t\t\tthis.#setReadOnlyStateForUserPermission(\r\n\t\t\t\t\t\tUMB_USER_PERMISSION_DOCUMENT_CREATE,\r\n\t\t\t\t\t\tthis.#userCanCreate,\r\n\t\t\t\t\t\t'You do not have permission to create documents.',\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tnew UmbWorkspaceIsNewRedirectController(\r\n\t\t\t\t\t\tthis,\r\n\t\t\t\t\t\tthis,\r\n\t\t\t\t\t\tthis.getHostElement().shadowRoot!.querySelector('umb-router-slot')!,\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: UMB_EDIT_DOCUMENT_WORKSPACE_PATH_PATTERN.toString(),\r\n\t\t\t\tcomponent: () => import('./document-workspace-editor.element.js'),\r\n\t\t\t\tsetup: async (_component, info) => {\r\n\t\t\t\t\tthis.removeUmbControllerByAlias(UmbWorkspaceIsNewRedirectControllerAlias);\r\n\t\t\t\t\tconst unique = info.match.params.unique;\r\n\t\t\t\t\tawait this.load(unique);\r\n\t\t\t\t\tthis.#setReadOnlyStateForUserPermission(\r\n\t\t\t\t\t\tUMB_USER_PERMISSION_DOCUMENT_UPDATE,\r\n\t\t\t\t\t\tthis.#userCanUpdate,\r\n\t\t\t\t\t\t'You do not have permission to update documents.',\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t]);\r\n\t}\r\n\r\n\toverride resetState(): void {\r\n\t\tsuper.resetState();\r\n\t\tthis.#isTrashedContext.setIsTrashed(false);\r\n\t}\r\n\r\n\toverride async load(unique: string) {\r\n\t\tconst response = await super.load(unique);\r\n\r\n\t\tif (response?.data) {\r\n\t\t\tthis.#isTrashedContext.setIsTrashed(response.data.isTrashed);\r\n\t\t}\r\n\r\n\t\treturn response;\r\n\t}\r\n\r\n\tasync create(parent: UmbEntityModel, documentTypeUnique: string, blueprintUnique?: string) {\r\n\t\tif (blueprintUnique) {\r\n\t\t\tconst blueprintRepository = new UmbDocumentBlueprintDetailRepository(this);\r\n\t\t\tconst { data } = await blueprintRepository.requestByUnique(blueprintUnique);\r\n\r\n\t\t\treturn this.createScaffold({\r\n\t\t\t\tparent,\r\n\t\t\t\tpreset: {\r\n\t\t\t\t\tdocumentType: data?.documentType,\r\n\t\t\t\t\tvalues: data?.values,\r\n\t\t\t\t\tvariants: data?.variants as Array<UmbDocumentVariantModel>,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn this.createScaffold({\r\n\t\t\tparent,\r\n\t\t\tpreset: {\r\n\t\t\t\tdocumentType: {\r\n\t\t\t\t\tunique: documentTypeUnique,\r\n\t\t\t\t\tcollection: null,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\tgetCollectionAlias() {\r\n\t\treturn UMB_DOCUMENT_COLLECTION_ALIAS;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the unique identifier of the content type.\r\n\t * @deprecated Use `getContentTypeUnique` instead.\r\n\t * @returns { string | undefined} The unique identifier of the content type.\r\n\t * @memberof UmbDocumentWorkspaceContext\r\n\t */\r\n\tgetContentTypeId(): string | undefined {\r\n\t\treturn this.getContentTypeUnique();\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the unique identifier of the content type.\r\n\t * @returns { string | undefined} The unique identifier of the content type.\r\n\t * @memberof UmbDocumentWorkspaceContext\r\n\t */\r\n\tgetContentTypeUnique(): string | undefined {\r\n\t\treturn this.getData()?.documentType.unique;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the template\r\n\t * @param {string} templateUnique The unique identifier of the template.\r\n\t * @memberof UmbDocumentWorkspaceContext\r\n\t */\r\n\tsetTemplate(templateUnique: string) {\r\n\t\tthis._data.updateCurrent({ template: { unique: templateUnique } });\r\n\t}\r\n\r\n\t/**\r\n\t * Request a submit of the workspace, in the case of Document Workspaces the validation does not need to be valid for this to be submitted.\r\n\t * @returns {Promise<void>} a promise which resolves once it has been completed.\r\n\t */\r\n\tpublic override requestSubmit() {\r\n\t\treturn this._handleSubmit();\r\n\t}\r\n\r\n\t// Because we do not make validation prevent submission this also submits the workspace. [NL]\r\n\tpublic override invalidSubmit() {\r\n\t\treturn this._handleSubmit();\r\n\t}\r\n\r\n\tpublic async saveAndPreview(): Promise<void> {\r\n\t\treturn this.#handleSaveAndPreview();\r\n\t}\r\n\r\n\tasync #handleSaveAndPreview() {\r\n\t\tconst unique = this.getUnique();\r\n\t\tif (!unique) throw new Error('Unique is missing');\r\n\r\n\t\tlet culture = UMB_INVARIANT_CULTURE;\r\n\r\n\t\t// Save document (the active variant) before previewing.\r\n\t\tconst { selected } = await this._determineVariantOptions();\r\n\t\tif (selected.length > 0) {\r\n\t\t\tculture = selected[0];\r\n\t\t\tconst variantIds = [UmbVariantId.FromString(culture)];\r\n\t\t\tconst saveData = await this._data.constructData(variantIds);\r\n\t\t\tawait this.runMandatoryValidationForSaveData(saveData);\r\n\t\t\tawait this.performCreateOrUpdate(variantIds, saveData);\r\n\t\t}\r\n\r\n\t\t// Tell the server that we're entering preview mode.\r\n\t\tawait new UmbDocumentPreviewRepository(this).enter();\r\n\r\n\t\tconst appContext = await this.getContext(UMB_APP_CONTEXT);\r\n\r\n\t\tconst previewUrl = new URL(appContext.getBackofficePath() + '/preview', appContext.getServerUrl());\r\n\t\tpreviewUrl.searchParams.set('id', unique);\r\n\r\n\t\tif (culture && culture !== UMB_INVARIANT_CULTURE) {\r\n\t\t\tpreviewUrl.searchParams.set('culture', culture);\r\n\t\t}\r\n\r\n\t\tconst previewWindow = window.open(previewUrl.toString(), `umbpreview-${unique}`);\r\n\t\tpreviewWindow?.focus();\r\n\t}\r\n\r\n\tpublic async publish() {\r\n\t\tnew UmbDeprecation({\r\n\t\t\tdeprecated: 'The Publish method on the UMB_DOCUMENT_WORKSPACE_CONTEXT is deprecated.',\r\n\t\t\tremoveInVersion: '17.0.0',\r\n\t\t\tsolution: 'Use the Publish method on the UMB_DOCUMENT_PUBLISHING_WORKSPACE_CONTEXT instead.',\r\n\t\t}).warn();\r\n\t\tif (!this.#publishingContext) throw new Error('Publishing context is missing');\r\n\t\tthis.#publishingContext.publish();\r\n\t}\r\n\r\n\t/**\r\n\t * Save the document and publish it.\r\n\t * @deprecated Will be removed in v17. Use the UMB_DOCUMENT_PUBLISHING_WORKSPACE_CONTEXT instead.\r\n\t */\r\n\tpublic async saveAndPublish(): Promise<void> {\r\n\t\tnew UmbDeprecation({\r\n\t\t\tdeprecated: 'The SaveAndPublish method on the UMB_DOCUMENT_WORKSPACE_CONTEXT is deprecated.',\r\n\t\t\tremoveInVersion: '17.0.0',\r\n\t\t\tsolution: 'Use the SaveAndPublish method on the UMB_DOCUMENT_PUBLISHING_WORKSPACE_CONTEXT instead.',\r\n\t\t}).warn();\r\n\t\tif (!this.#publishingContext) throw new Error('Publishing context is missing');\r\n\t\tthis.#publishingContext.saveAndPublish();\r\n\t}\r\n\r\n\t/**\r\n\t * Schedule the document to be published at a later date.\r\n\t * @deprecated Will be removed in v17. Use the UMB_DOCUMENT_PUBLISHING_WORKSPACE_CONTEXT instead.\r\n\t */\r\n\tpublic async schedule() {\r\n\t\tnew UmbDeprecation({\r\n\t\t\tdeprecated: 'The Schedule method on the UMB_DOCUMENT_WORKSPACE_CONTEXT is deprecated.',\r\n\t\t\tremoveInVersion: '17.0.0',\r\n\t\t\tsolution: 'Use the Schedule method on the UMB_DOCUMENT_PUBLISHING_WORKSPACE_CONTEXT instead.',\r\n\t\t}).warn();\r\n\t\tif (!this.#publishingContext) throw new Error('Publishing context is missing');\r\n\t\tthis.#publishingContext.schedule();\r\n\t}\r\n\r\n\t/**\r\n\t * Unpublish the document.\r\n\t * @deprecated Will be removed in v17. Use the UMB_DOCUMENT_PUBLISHING_WORKSPACE_CONTEXT instead.\r\n\t */\r\n\tpublic async unpublish() {\r\n\t\tnew UmbDeprecation({\r\n\t\t\tdeprecated: 'The Unpublish method on the UMB_DOCUMENT_WORKSPACE_CONTEXT is deprecated.',\r\n\t\t\tremoveInVersion: '17.0.0',\r\n\t\t\tsolution: 'Use the Unpublish method on the UMB_DOCUMENT_PUBLISHING_WORKSPACE_CONTEXT instead.',\r\n\t\t}).warn();\r\n\t\tif (!this.#publishingContext) throw new Error('Publishing context is missing');\r\n\t\tthis.#publishingContext.unpublish();\r\n\t}\r\n\r\n\t/**\r\n\t * Publish the document and all its descendants.\r\n\t * @deprecated Will be removed in v17. Use the UMB_DOCUMENT_PUBLISHING_WORKSPACE_CONTEXT instead.\r\n\t */\r\n\tpublic async publishWithDescendants() {\r\n\t\tnew UmbDeprecation({\r\n\t\t\tdeprecated: 'The PublishWithDescendants method on the UMB_DOCUMENT_WORKSPACE_CONTEXT is deprecated.',\r\n\t\t\tremoveInVersion: '17.0.0',\r\n\t\t\tsolution: 'Use the PublishWithDescendants method on the UMB_DOCUMENT_PUBLISHING_WORKSPACE_CONTEXT instead.',\r\n\t\t}).warn();\r\n\t\tif (!this.#publishingContext) throw new Error('Publishing context is missing');\r\n\t\tthis.#publishingContext.publishWithDescendants();\r\n\t}\r\n\r\n\tpublic createPropertyDatasetContext(\r\n\t\thost: UmbControllerHost,\r\n\t\tvariantId: UmbVariantId,\r\n\t): UmbDocumentPropertyDatasetContext {\r\n\t\treturn new UmbDocumentPropertyDatasetContext(host, this, variantId);\r\n\t}\r\n\r\n\tasync #setReadOnlyStateForUserPermission(identifier: string, permitted: boolean, message: string) {\r\n\t\tconst variants = this.getVariants();\r\n\t\tconst uniques = variants?.map((variant) => identifier + variant.culture) || [];\r\n\r\n\t\tif (permitted) {\r\n\t\t\tthis.readOnlyState?.removeStates(uniques);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst variantIds = variants?.map((variant) => new UmbVariantId(variant.culture, variant.segment)) || [];\r\n\r\n\t\tconst readOnlyStates = variantIds.map((variantId) => {\r\n\t\t\treturn {\r\n\t\t\t\tunique: identifier + variantId.culture,\r\n\t\t\t\tvariantId,\r\n\t\t\t\tmessage,\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\tthis.readOnlyState?.removeStates(uniques);\r\n\r\n\t\tthis.readOnlyState?.addStates(readOnlyStates);\r\n\t}\r\n}\r\n\r\nexport default UmbDocumentWorkspaceContext;\r\n"],"names":["UmbDocumentPropertyDatasetContext","UmbContentPropertyDatasetContext","UmbDocumentValidationServerDataSource","host","model","parentUnique","requestBody","tryExecute","DocumentService","variantIds","cultures","id","culture","UmbDocumentValidationRepository","UmbRepositoryBase","#validationDataSource","UmbDocumentWorkspaceContext","UmbContentDetailWorkspaceContextBase","UMB_DOCUMENT_ENTITY_TYPE","UMB_DOCUMENT_WORKSPACE_ALIAS","UMB_DOCUMENT_DETAIL_REPOSITORY_ALIAS","UmbDocumentTypeDetailRepository","UMB_DOCUMENT_DETAIL_MODEL_VARIANT_SCAFFOLD","UMB_DOCUMENT_SAVE_MODAL","UmbDocumentPublishingRepository","data","#isTrashedContext","UmbIsTrashedEntityContext","#userCanCreate","#userCanUpdate","unique","UMB_DOCUMENT_PUBLISHING_WORKSPACE_CONTEXT","context","#publishingContext","createExtensionApiByAlias","UMB_DOCUMENT_USER_PERMISSION_CONDITION_ALIAS","UMB_USER_PERMISSION_DOCUMENT_CREATE","permitted","UMB_USER_PERMISSION_DOCUMENT_UPDATE","UMB_CREATE_FROM_BLUEPRINT_DOCUMENT_WORKSPACE_PATH_PATTERN","_component","info","parentEntityType","documentTypeUnique","blueprintUnique","UmbWorkspaceIsNewRedirectController","UMB_CREATE_DOCUMENT_WORKSPACE_PATH_PATTERN","#setReadOnlyStateForUserPermission","UMB_EDIT_DOCUMENT_WORKSPACE_PATH_PATTERN","UmbWorkspaceIsNewRedirectControllerAlias","response","parent","blueprintRepository","UmbDocumentBlueprintDetailRepository","UMB_DOCUMENT_COLLECTION_ALIAS","templateUnique","#handleSaveAndPreview","UMB_INVARIANT_CULTURE","selected","UmbVariantId","saveData","UmbDocumentPreviewRepository","appContext","UMB_APP_CONTEXT","previewUrl","UmbDeprecation","variantId","identifier","message","variants","uniques","variant","readOnlyStates"],"mappings":"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"}