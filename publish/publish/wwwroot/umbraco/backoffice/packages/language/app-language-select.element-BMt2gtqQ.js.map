{"version":3,"file":"app-language-select.element-BMt2gtqQ.js","sources":["../../../src/packages/language/app-language-select/app-language-select.element.ts"],"sourcesContent":["import { UmbLanguageCollectionRepository } from '../collection/index.js';\r\nimport type { UmbLanguageDetailModel } from '../types.js';\r\nimport type { UmbAppLanguageContext } from '../global-contexts/index.js';\r\nimport { UMB_APP_LANGUAGE_CONTEXT } from '../constants.js';\r\nimport type { UUIPopoverContainerElement } from '@umbraco-cms/backoffice/external/uui';\r\nimport {\r\n\tcss,\r\n\thtml,\r\n\tcustomElement,\r\n\tstate,\r\n\trepeat,\r\n\tifDefined,\r\n\tquery,\r\n\tnothing,\r\n} from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UMB_CURRENT_USER_CONTEXT } from '@umbraco-cms/backoffice/current-user';\r\n\r\n@customElement('umb-app-language-select')\r\nexport class UmbAppLanguageSelectElement extends UmbLitElement {\r\n\t@query('#dropdown-popover')\r\n\tprivate _popoverElement?: UUIPopoverContainerElement;\r\n\r\n\t@state()\r\n\tprivate _languages: Array<UmbLanguageDetailModel> = [];\r\n\r\n\t@state()\r\n\tprivate _appLanguage?: UmbLanguageDetailModel;\r\n\r\n\t@state()\r\n\tprivate _appLanguageIsReadOnly = false;\r\n\r\n\t@state()\r\n\tprivate _isOpen = false;\r\n\r\n\t#collectionRepository = new UmbLanguageCollectionRepository(this);\r\n\t#appLanguageContext?: UmbAppLanguageContext;\r\n\t#languagesObserver?: any;\r\n\r\n\t#currentUserAllowedLanguages?: Array<string>;\r\n\t#currentUserHasAccessToAllLanguages?: boolean;\r\n\r\n\t@state()\r\n\t_disallowedLanguages: Array<UmbLanguageDetailModel> = [];\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.consumeContext(UMB_APP_LANGUAGE_CONTEXT, (instance) => {\r\n\t\t\tthis.#appLanguageContext = instance;\r\n\t\t\tthis.#observeAppLanguage();\r\n\t\t});\r\n\r\n\t\tthis.consumeContext(UMB_CURRENT_USER_CONTEXT, (context) => {\r\n\t\t\tthis.observe(context.languages, (languages) => {\r\n\t\t\t\tthis.#currentUserAllowedLanguages = languages;\r\n\t\t\t\tthis.#checkForLanguageAccess();\r\n\t\t\t});\r\n\r\n\t\t\tthis.observe(context.hasAccessToAllLanguages, (hasAccessToAllLanguages) => {\r\n\t\t\t\tthis.#currentUserHasAccessToAllLanguages = hasAccessToAllLanguages;\r\n\t\t\t\tthis.#checkForLanguageAccess();\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t#checkForLanguageAccess() {\r\n\t\t// find all disallowed languages\r\n\t\tthis._disallowedLanguages = this._languages?.filter((language) => {\r\n\t\t\tif (this.#currentUserHasAccessToAllLanguages) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn !this.#currentUserAllowedLanguages?.includes(language.unique);\r\n\t\t});\r\n\t}\r\n\r\n\tasync #observeAppLanguage() {\r\n\t\tif (!this.#appLanguageContext) return;\r\n\r\n\t\tthis.observe(this.#appLanguageContext.appLanguage, (language) => {\r\n\t\t\tthis._appLanguage = language;\r\n\t\t});\r\n\r\n\t\tthis.observe(this.#appLanguageContext.appLanguageReadOnlyState.isReadOnly, (isReadOnly) => {\r\n\t\t\tthis._appLanguageIsReadOnly = isReadOnly;\r\n\t\t});\r\n\t}\r\n\r\n\tasync #observeLanguages() {\r\n\t\tconst { data } = await this.#collectionRepository.requestCollection({});\r\n\r\n\t\t// TODO: listen to changes\r\n\t\tif (data) {\r\n\t\t\tthis._languages = data.items;\r\n\t\t\tthis.#checkForLanguageAccess();\r\n\t\t}\r\n\t}\r\n\r\n\t#onPopoverToggle(event: ToggleEvent) {\r\n\t\t// TODO: This ignorer is just neede for JSON SCHEMA TO WORK, As its not updated with latest TS jet.\r\n\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n\t\t// @ts-ignore\r\n\t\tthis._isOpen = event.newState === 'open';\r\n\t\tif (this._isOpen && !this.#languagesObserver) {\r\n\t\t\tif (this._popoverElement) {\r\n\t\t\t\tconst host = this.getBoundingClientRect();\r\n\t\t\t\tthis._popoverElement.style.width = `${host.width}px`;\r\n\t\t\t}\r\n\r\n\t\t\tthis.#observeLanguages();\r\n\t\t}\r\n\t}\r\n\r\n\t#chooseLanguage(unique: string) {\r\n\t\tthis.#appLanguageContext?.setLanguage(unique);\r\n\t\tthis._isOpen = false;\r\n\t\tthis._popoverElement?.hidePopover();\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn nothing;\r\n\t\t// return html`${this.#renderTrigger()} ${this.#renderContent()}`;\r\n\t}\r\n\r\n\t#renderTrigger() {\r\n\t\treturn html`<button id=\"toggle\" data-mark=\"action:open\" popovertarget=\"dropdown-popover\">\r\n\t\t\t<span\r\n\t\t\t\t>${this._appLanguage?.name}\r\n\t\t\t\t${this._appLanguageIsReadOnly ? this.#renderReadOnlyTag(this._appLanguage?.unique) : nothing}</span\r\n\t\t\t>\r\n\t\t\t<uui-symbol-expand .open=${this._isOpen}></uui-symbol-expand>\r\n\t\t</button>`;\r\n\t}\r\n\r\n\t#renderContent() {\r\n\t\treturn html` <uui-popover-container\r\n\t\t\tid=\"dropdown-popover\"\r\n\t\t\tdata-mark=\"app-language-menu\"\r\n\t\t\t@beforetoggle=${this.#onPopoverToggle}>\r\n\t\t\t<umb-popover-layout>\r\n\t\t\t\t${repeat(\r\n\t\t\t\t\tthis._languages,\r\n\t\t\t\t\t(language) => language.unique,\r\n\t\t\t\t\t(language) => html`\r\n\t\t\t\t\t\t<uui-menu-item\r\n\t\t\t\t\t\t\tlabel=${ifDefined(language.name)}\r\n\t\t\t\t\t\t\tdata-mark=\"${language.entityType}:${language.unique}\"\r\n\t\t\t\t\t\t\t?active=${language.unique === this._appLanguage?.unique}\r\n\t\t\t\t\t\t\t@click-label=${() => this.#chooseLanguage(language.unique)}>\r\n\t\t\t\t\t\t\t${this.#isLanguageReadOnly(language.unique) ? this.#renderReadOnlyTag(language.unique) : nothing}\r\n\t\t\t\t\t\t</uui-menu-item>\r\n\t\t\t\t\t`,\r\n\t\t\t\t)}\r\n\t\t\t</umb-popover-layout>\r\n\t\t</uui-popover-container>`;\r\n\t}\r\n\r\n\t#isLanguageReadOnly(culture?: string) {\r\n\t\tif (!culture) return false;\r\n\t\treturn this._disallowedLanguages.find((language) => language.unique === culture) ? true : false;\r\n\t}\r\n\r\n\t#renderReadOnlyTag(culture?: string) {\r\n\t\tif (!culture) return nothing;\r\n\t\treturn html`<uui-tag slot=\"badge\" look=\"secondary\">${this.localize.term('general_readOnly')}</uui-tag>`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\tposition: relative;\r\n\t\t\t\tz-index: 10;\r\n\t\t\t}\r\n\r\n\t\t\t#toggle {\r\n\t\t\t\tcolor: var(--uui-color-text);\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\ttext-align: left;\r\n\t\t\t\tbackground: none;\r\n\t\t\t\tborder: none;\r\n\t\t\t\theight: var(--umb-header-layout-height);\r\n\t\t\t\tpadding: 0 var(--uui-size-8);\r\n\t\t\t\tborder-bottom: 1px solid var(--uui-color-border);\r\n\t\t\t\tfont-size: 14px;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tjustify-content: space-between;\r\n\t\t\t\tcursor: pointer;\r\n\t\t\t\tfont-family: inherit;\r\n\t\t\t}\r\n\r\n\t\t\t#toggle:hover {\r\n\t\t\t\tbackground-color: var(--uui-color-surface-emphasis);\r\n\t\t\t}\r\n\r\n\t\t\tuui-menu-item {\r\n\t\t\t\tcolor: var(--uui-color-text);\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbAppLanguageSelectElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-app-language-select': UmbAppLanguageSelectElement;\r\n\t}\r\n}\r\n"],"names":["_collectionRepository","_appLanguageContext","_languagesObserver","_currentUserAllowedLanguages","_currentUserHasAccessToAllLanguages","_UmbAppLanguageSelectElement_instances","checkForLanguageAccess_fn","observeAppLanguage_fn","UmbAppLanguageSelectElement","UmbLitElement","__privateAdd","UmbLanguageCollectionRepository","UMB_APP_LANGUAGE_CONTEXT","instance","__privateSet","__privateMethod","UMB_CURRENT_USER_CONTEXT","context","languages","hasAccessToAllLanguages","nothing","language","__privateGet","isReadOnly","css","__decorateClass","query","state","customElement","UmbAppLanguageSelectElement$1"],"mappings":"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"}