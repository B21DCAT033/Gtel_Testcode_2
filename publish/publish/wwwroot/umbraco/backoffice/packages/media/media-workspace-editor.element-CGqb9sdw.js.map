{"version":3,"file":"media-workspace-editor.element-CGqb9sdw.js","sources":["../../../src/packages/media/media/workspace/media-workspace-split-view.element.ts","../../../src/packages/media/media/workspace/media-workspace-editor.element.ts"],"sourcesContent":["import { UMB_MEDIA_WORKSPACE_CONTEXT } from './media-workspace.context-token.js';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport { css, html, nothing, customElement, state, repeat } from '@umbraco-cms/backoffice/external/lit';\r\nimport type { ActiveVariant } from '@umbraco-cms/backoffice/workspace';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\n\r\n@customElement('umb-media-workspace-split-view')\r\nexport class UmbMediaWorkspaceSplitViewElement extends UmbLitElement {\r\n\t// TODO: Refactor: use the split view context token:\r\n\tprivate _workspaceContext?: typeof UMB_MEDIA_WORKSPACE_CONTEXT.TYPE;\r\n\r\n\t@state()\r\n\t_variants?: Array<ActiveVariant>;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\t// TODO: Refactor: use a split view workspace context token:\r\n\t\tthis.consumeContext(UMB_MEDIA_WORKSPACE_CONTEXT, (context) => {\r\n\t\t\tthis._workspaceContext = context;\r\n\t\t\tthis._observeActiveVariantInfo();\r\n\t\t});\r\n\t}\r\n\r\n\tprivate _observeActiveVariantInfo() {\r\n\t\tif (!this._workspaceContext) return;\r\n\t\tthis.observe(\r\n\t\t\tthis._workspaceContext.splitView.activeVariantsInfo,\r\n\t\t\t(variants) => {\r\n\t\t\t\tthis._variants = variants;\r\n\t\t\t},\r\n\t\t\t'_observeActiveVariantsInfo',\r\n\t\t);\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn this._variants\r\n\t\t\t? html`<div id=\"splitViews\">\r\n\t\t\t\t\t\t${repeat(\r\n\t\t\t\t\t\t\tthis._variants,\r\n\t\t\t\t\t\t\t(view) =>\r\n\t\t\t\t\t\t\t\tview.index + '_' + (view.culture ?? '') + '_' + (view.segment ?? '') + '_' + this._variants!.length,\r\n\t\t\t\t\t\t\t(view) => html`\r\n\t\t\t\t\t\t\t\t<umb-workspace-split-view\r\n\t\t\t\t\t\t\t\t\t.splitViewIndex=${view.index}\r\n\t\t\t\t\t\t\t\t\t.displayNavigation=${view.index === this._variants!.length - 1}></umb-workspace-split-view>\r\n\t\t\t\t\t\t\t`,\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<umb-workspace-footer alias=\"Umb.Workspace.Media\"></umb-workspace-footer>`\r\n\t\t\t: nothing;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\theight: 100%;\r\n\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex: 1;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t}\r\n\r\n\t\t\t#splitViews {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\theight: calc(100% - var(--umb-footer-layout-height));\r\n\t\t\t}\r\n\r\n\t\t\t#breadcrumbs {\r\n\t\t\t\tmargin: 0 var(--uui-size-layout-1);\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbMediaWorkspaceSplitViewElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-media-workspace-split-view': UmbMediaWorkspaceSplitViewElement;\r\n\t}\r\n}\r\n","import type { UmbMediaVariantOptionModel } from '../types.js';\r\nimport { UmbMediaWorkspaceSplitViewElement } from './media-workspace-split-view.element.js';\r\nimport { UMB_MEDIA_WORKSPACE_CONTEXT } from './media-workspace.context-token.js';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { customElement, state, css, html } from '@umbraco-cms/backoffice/external/lit';\r\nimport type { UmbRoute, UmbRouterSlotInitEvent } from '@umbraco-cms/backoffice/router';\r\n@customElement('umb-media-workspace-editor')\r\nexport class UmbMediaWorkspaceEditorElement extends UmbLitElement {\r\n\t//\r\n\t// TODO: Refactor: when having a split view/variants context token, we can rename the split view/variants component to a generic and make this component generic as well. [NL]\r\n\tprivate splitViewElement = new UmbMediaWorkspaceSplitViewElement();\r\n\r\n\t@state()\r\n\t_routes?: Array<UmbRoute>;\r\n\r\n\t#workspaceContext?: typeof UMB_MEDIA_WORKSPACE_CONTEXT.TYPE;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.consumeContext(UMB_MEDIA_WORKSPACE_CONTEXT, (instance) => {\r\n\t\t\tthis.#workspaceContext = instance;\r\n\t\t\tthis.#observeVariants();\r\n\t\t});\r\n\t}\r\n\r\n\t#observeVariants() {\r\n\t\tif (!this.#workspaceContext) return;\r\n\t\tthis.observe(this.#workspaceContext.variantOptions, (options) => this._generateRoutes(options), '_observeVariants');\r\n\t}\r\n\r\n\tprivate _handleVariantFolderPart(index: number, folderPart: string) {\r\n\t\tconst variantSplit = folderPart.split('_');\r\n\t\tconst culture = variantSplit[0];\r\n\t\tconst segment = variantSplit[1];\r\n\t\tthis.#workspaceContext?.splitView.setActiveVariant(index, culture, segment);\r\n\t}\r\n\r\n\tprivate async _generateRoutes(variants: Array<UmbMediaVariantOptionModel>) {\r\n\t\tif (!variants || variants.length === 0) return;\r\n\r\n\t\t// Generate split view routes for all available routes\r\n\t\tconst routes: Array<UmbRoute> = [];\r\n\r\n\t\t// Split view routes:\r\n\t\tvariants.forEach((variantA) => {\r\n\t\t\tvariants.forEach((variantB) => {\r\n\t\t\t\troutes.push({\r\n\t\t\t\t\t// TODO: When implementing Segments, be aware if using the unique is URL Safe... [NL]\r\n\t\t\t\t\tpath: variantA.unique + '_&_' + variantB.unique,\r\n\t\t\t\t\tcomponent: this.splitViewElement,\r\n\t\t\t\t\tsetup: (_component, info) => {\r\n\t\t\t\t\t\t// Set split view/active info..\r\n\t\t\t\t\t\tconst variantSplit = info.match.fragments.consumed.split('_&_');\r\n\t\t\t\t\t\tvariantSplit.forEach((part, index) => {\r\n\t\t\t\t\t\t\tthis._handleVariantFolderPart(index, part);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\t// Single view:\r\n\t\tvariants.forEach((variant) => {\r\n\t\t\troutes.push({\r\n\t\t\t\t// TODO: When implementing Segments, be aware if using the unique is URL Safe... [NL]\r\n\t\t\t\tpath: variant.unique,\r\n\t\t\t\tcomponent: this.splitViewElement,\r\n\t\t\t\tsetup: (_component, info) => {\r\n\t\t\t\t\t// cause we might come from a split-view, we need to reset index 1.\r\n\t\t\t\t\tthis.#workspaceContext?.splitView.removeActiveVariant(1);\r\n\t\t\t\t\tthis._handleVariantFolderPart(0, info.match.fragments.consumed);\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tif (routes.length !== 0) {\r\n\t\t\t// Using first single view as the default route for now (hence the math below):\r\n\t\t\troutes.push({\r\n\t\t\t\tpath: '',\r\n\t\t\t\tredirectTo: routes[variants.length * variants.length]?.path,\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\troutes.push({\r\n\t\t\tpath: `**`,\r\n\t\t\tcomponent: async () => (await import('@umbraco-cms/backoffice/router')).UmbRouteNotFoundElement,\r\n\t\t});\r\n\r\n\t\tthis._routes = routes;\r\n\t}\r\n\r\n\tprivate _gotWorkspaceRoute = (e: UmbRouterSlotInitEvent) => {\r\n\t\tthis.#workspaceContext?.splitView.setWorkspaceRoute(e.target.absoluteRouterPath);\r\n\t};\r\n\r\n\toverride render() {\r\n\t\treturn this._routes && this._routes.length > 0\r\n\t\t\t? html`<umb-router-slot .routes=${this._routes} @init=${this._gotWorkspaceRoute}></umb-router-slot>`\r\n\t\t\t: '';\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\theight: 100%;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbMediaWorkspaceEditorElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-media-workspace-editor': UmbMediaWorkspaceEditorElement;\r\n\t}\r\n}\r\n"],"names":["UmbMediaWorkspaceSplitViewElement","UmbLitElement","UMB_MEDIA_WORKSPACE_CONTEXT","context","variants","html","repeat","view","nothing","UmbTextStyles","css","__decorateClass","state","customElement","_workspaceContext","_UmbMediaWorkspaceEditorElement_instances","observeVariants_fn","UmbMediaWorkspaceEditorElement","__privateAdd","e","__privateGet","instance","__privateSet","__privateMethod","index","folderPart","variantSplit","culture","segment","routes","variantA","variantB","_component","info","part","variant","options","UmbMediaWorkspaceEditorElement$1"],"mappings":";;;;;;;;;AAOa,IAAAA,IAAN,cAAgDC,EAAc;AAAA,EAOpE,cAAc;AACP,UAAA,GAGD,KAAA,eAAeC,GAA6B,CAACC,MAAY;AAC7D,WAAK,oBAAoBA,GACzB,KAAK,0BAA0B;AAAA,IAAA,CAC/B;AAAA,EAAA;AAAA,EAGM,4BAA4B;AAC/B,IAAC,KAAK,qBACL,KAAA;AAAA,MACJ,KAAK,kBAAkB,UAAU;AAAA,MACjC,CAACC,MAAa;AACb,aAAK,YAAYA;AAAA,MAClB;AAAA,MACA;AAAA,IACD;AAAA,EAAA;AAAA,EAGQ,SAAS;AACjB,WAAO,KAAK,YACTC;AAAA,QACGC;AAAA,MACD,KAAK;AAAA,MACL,CAACC,MACAA,EAAK,QAAQ,OAAOA,EAAK,WAAW,MAAM,OAAOA,EAAK,WAAW,MAAM,MAAM,KAAK,UAAW;AAAA,MAC9F,CAACA,MAASF;AAAA;AAAA,2BAEUE,EAAK,KAAK;AAAA,8BACPA,EAAK,UAAU,KAAK,UAAW,SAAS,CAAC;AAAA;AAAA,IAEhE,CAAA;AAAA;AAAA;AAAA,kFAIFC;AAAA,EAAA;AA0BL;AAtEaR,EA+CI,SAAS;AAAA,EACxBS;AAAA,EACAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBD;AAhEAC,EAAA;AAAA,EADCC,EAAM;AAAA,GAJKZ,EAKZ,WAAA,aAAA,CAAA;AALYA,IAANW,EAAA;AAAA,EADNE,EAAc,gCAAgC;AAAA,GAClCb,CAAA;;;;;;;wXCPbc,GAAAC,GAAAC;AAQa,IAAAC,IAAN,cAA6ChB,EAAc;AAAA,EAUjE,cAAc;AACP,UAAA,GAXDiB,EAAA,MAAAH,CAAA,GAGE,KAAA,mBAAmB,IAAIf,EAAkC,GAKjEkB,EAAA,MAAAJ,CAAA,GA6EQ,KAAA,qBAAqB,CAACK,MAA8B;AAC3D,MAAAC,EAAA,MAAKN,CAAmB,GAAA,UAAU,kBAAkBK,EAAE,OAAO,kBAAkB;AAAA,IAChF,GA1EM,KAAA,eAAejB,GAA6B,CAACmB,MAAa;AAC9D,MAAAC,EAAA,MAAKR,GAAoBO,CAAA,GACzBE,EAAA,MAAKR,GAALC,CAAA,EAAA,KAAA,IAAA;AAAA,IAAA,CACA;AAAA,EAAA;AAAA,EAQM,yBAAyBQ,GAAeC,GAAoB;AAC7D,UAAAC,IAAeD,EAAW,MAAM,GAAG,GACnCE,IAAUD,EAAa,CAAC,GACxBE,IAAUF,EAAa,CAAC;AAC9B,IAAAN,EAAA,MAAKN,CAAmB,GAAA,UAAU,iBAAiBU,GAAOG,GAASC,CAAO;AAAA,EAAA;AAAA,EAG3E,MAAc,gBAAgBxB,GAA6C;AAC1E,QAAI,CAACA,KAAYA,EAAS,WAAW,EAAG;AAGxC,UAAMyB,IAA0B,CAAC;AAGxB,IAAAzB,EAAA,QAAQ,CAAC0B,MAAa;AACrB,MAAA1B,EAAA,QAAQ,CAAC2B,MAAa;AAC9B,QAAAF,EAAO,KAAK;AAAA;AAAA,UAEX,MAAMC,EAAS,SAAS,QAAQC,EAAS;AAAA,UACzC,WAAW,KAAK;AAAA,UAChB,OAAO,CAACC,GAAYC,MAAS;AAGf,YADQA,EAAK,MAAM,UAAU,SAAS,MAAM,KAAK,EACjD,QAAQ,CAACC,GAAMV,MAAU;AAChC,mBAAA,yBAAyBA,GAAOU,CAAI;AAAA,YAAA,CACzC;AAAA,UAAA;AAAA,QACF,CACA;AAAA,MAAA,CACD;AAAA,IAAA,CACD,GAGQ9B,EAAA,QAAQ,CAAC+B,MAAY;AAC7B,MAAAN,EAAO,KAAK;AAAA;AAAA,QAEX,MAAMM,EAAQ;AAAA,QACd,WAAW,KAAK;AAAA,QAChB,OAAO,CAACH,GAAYC,MAAS;AAEvB,UAAAb,EAAA,MAAAN,CAAA,GAAmB,UAAU,oBAAoB,CAAC,GACvD,KAAK,yBAAyB,GAAGmB,EAAK,MAAM,UAAU,QAAQ;AAAA,QAAA;AAAA,MAC/D,CACA;AAAA,IAAA,CACD,GAEGJ,EAAO,WAAW,KAErBA,EAAO,KAAK;AAAA,MACX,MAAM;AAAA,MACN,YAAYA,EAAOzB,EAAS,SAASA,EAAS,MAAM,GAAG;AAAA,IAAA,CACvD,GAGFyB,EAAO,KAAK;AAAA,MACX,MAAM;AAAA,MACN,WAAW,aAAa,MAAM,OAAO,gCAAgC,GAAG;AAAA,IAAA,CACxE,GAED,KAAK,UAAUA;AAAA,EAAA;AAAA,EAOP,SAAS;AACjB,WAAO,KAAK,WAAW,KAAK,QAAQ,SAAS,IAC1CxB,6BAAgC,KAAK,OAAO,UAAU,KAAK,kBAAkB,wBAC7E;AAAA,EAAA;AAaL;AAjGCS,IAAA,oBAAA,QAAA;AARMC,IAAA,oBAAA,QAAA;AAmBNC,IAAgB,WAAG;AACd,EAACI,QAAKN,CAAmB,KACxB,KAAA,QAAQM,EAAK,MAAAN,CAAA,EAAkB,gBAAgB,CAACsB,MAAY,KAAK,gBAAgBA,CAAO,GAAG,kBAAkB;AACnH;AAtBYnB,EA+FI,SAAS;AAAA,EACxBR;AAAA,EACAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOD;AAlGAC,EAAA;AAAA,EADCC,EAAM;AAAA,GALKK,EAMZ,WAAA,WAAA,CAAA;AANYA,IAANN,EAAA;AAAA,EADNE,EAAc,4BAA4B;AAAA,GAC9BI,CAAA;AA2Gb,MAAAoB,IAAepB;"}