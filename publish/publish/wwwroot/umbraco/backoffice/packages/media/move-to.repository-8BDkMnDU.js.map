{"version":3,"file":"move-to.repository-8BDkMnDU.js","sources":["../../../src/packages/media/media/entity-bulk-actions/move-to/repository/move-to.repository.ts"],"sourcesContent":["import { UmbMoveMediaServerDataSource } from '../../../entity-actions/move-to/repository/media-move.server.data-source.js';\r\nimport { UmbRepositoryBase } from '@umbraco-cms/backoffice/repository';\r\nimport { UMB_NOTIFICATION_CONTEXT } from '@umbraco-cms/backoffice/notification';\r\nimport type { UmbBulkMoveToRepository, UmbBulkMoveToRequestArgs } from '@umbraco-cms/backoffice/entity-bulk-action';\r\nimport type { UmbRepositoryErrorResponse } from '@umbraco-cms/backoffice/repository';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\n\r\nexport class UmbBulkMoveToMediaRepository extends UmbRepositoryBase implements UmbBulkMoveToRepository {\r\n\t#moveSource = new UmbMoveMediaServerDataSource(this);\r\n\t#notificationContext?: typeof UMB_NOTIFICATION_CONTEXT.TYPE;\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host);\r\n\r\n\t\tthis.consumeContext(UMB_NOTIFICATION_CONTEXT, (notificationContext) => {\r\n\t\t\tthis.#notificationContext = notificationContext;\r\n\t\t});\r\n\t}\r\n\r\n\tasync requestBulkMoveTo(args: UmbBulkMoveToRequestArgs): Promise<UmbRepositoryErrorResponse> {\r\n\t\tlet count = 0;\r\n\r\n\t\tconst destination = args.destination;\r\n\t\tfor (const unique of args.uniques) {\r\n\t\t\tconst { error } = await this.#moveSource.moveTo({ unique, destination });\r\n\r\n\t\t\tif (error) {\r\n\t\t\t\tconst notification = { data: { message: error.message } };\r\n\t\t\t\tthis.#notificationContext?.peek('danger', notification);\r\n\t\t\t} else {\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (count > 0) {\r\n\t\t\tconst notification = { data: { message: `Moved ${count} media ${count === 1 ? 'item' : 'items'}` } };\r\n\t\t\tthis.#notificationContext?.peek('positive', notification);\r\n\t\t}\r\n\r\n\t\treturn {};\r\n\t}\r\n}\r\n\r\nexport { UmbBulkMoveToMediaRepository as api };\r\n"],"names":["UmbBulkMoveToMediaRepository","UmbRepositoryBase","#moveSource","UmbMoveMediaServerDataSource","#notificationContext","host","UMB_NOTIFICATION_CONTEXT","notificationContext","args","count","destination","unique","error","notification"],"mappings":";;;AAOO,MAAMA,UAAqCC,EAAqD;AAAA,EACtGC,KAAc,IAAIC,EAA6B,IAAI;AAAA,EACnDC;AAAA,EAEA,YAAYC,GAAyB;AACpC,UAAMA,CAAI,GAEL,KAAA,eAAeC,GAA0B,CAACC,MAAwB;AACtE,WAAKH,KAAuBG;AAAA,IAAA,CAC5B;AAAA,EAAA;AAAA,EAGF,MAAM,kBAAkBC,GAAqE;AAC5F,QAAIC,IAAQ;AAEZ,UAAMC,IAAcF,EAAK;AACd,eAAAG,KAAUH,EAAK,SAAS;AAC5B,YAAA,EAAE,OAAAI,EAAM,IAAI,MAAM,KAAKV,GAAY,OAAO,EAAE,QAAAS,GAAQ,aAAAD,GAAa;AAEvE,UAAIE,GAAO;AACV,cAAMC,IAAe,EAAE,MAAM,EAAE,SAASD,EAAM,UAAU;AACnD,aAAAR,IAAsB,KAAK,UAAUS,CAAY;AAAA,MAAA;AAEtD,QAAAJ;AAAA,IACD;AAGD,QAAIA,IAAQ,GAAG;AACd,YAAMI,IAAe,EAAE,MAAM,EAAE,SAAS,SAASJ,CAAK,UAAUA,MAAU,IAAI,SAAS,OAAO,KAAK;AAC9F,WAAAL,IAAsB,KAAK,YAAYS,CAAY;AAAA,IAAA;AAGzD,WAAO,CAAC;AAAA,EAAA;AAEV;"}