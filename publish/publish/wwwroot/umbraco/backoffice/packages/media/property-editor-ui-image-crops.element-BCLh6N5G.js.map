{"version":3,"file":"property-editor-ui-image-crops.element-BCLh6N5G.js","sources":["../../../src/packages/media/media/property-editors/image-crops/property-editor-ui-image-crops.element.ts"],"sourcesContent":["import { html, customElement, property, css, repeat, state, query } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport type { UmbPropertyEditorUiElement } from '@umbraco-cms/backoffice/property-editor';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UmbPropertyValueChangeEvent } from '@umbraco-cms/backoffice/property-editor';\r\nimport { generateAlias } from '@umbraco-cms/backoffice/utils';\r\nimport { UmbSorterController } from '@umbraco-cms/backoffice/sorter';\r\n\r\nexport type UmbCrop = {\r\n\tlabel: string;\r\n\talias: string;\r\n\twidth: number;\r\n\theight: number;\r\n};\r\n\r\n/**\r\n * @element umb-property-editor-ui-image-crops\r\n */\r\n@customElement('umb-property-editor-ui-image-crops')\r\nexport class UmbPropertyEditorUIImageCropsElement extends UmbLitElement implements UmbPropertyEditorUiElement {\r\n\t@query('#label')\r\n\tprivate _labelInput!: HTMLInputElement;\r\n\r\n\t@state()\r\n\tprivate _value: Array<UmbCrop> = [];\r\n\r\n\t@property({ type: Array })\r\n\tpublic set value(value: Array<UmbCrop>) {\r\n\t\tthis._value = value ?? [];\r\n\t\tthis.#sorter.setModel(this.value);\r\n\t}\r\n\tpublic get value(): Array<UmbCrop> {\r\n\t\treturn this._value;\r\n\t}\r\n\r\n\t@state()\r\n\teditCropAlias = '';\r\n\r\n\t#oldInputValue = '';\r\n\r\n\t#sorter = new UmbSorterController(this, {\r\n\t\tgetUniqueOfElement: (element: HTMLElement) => {\r\n\t\t\tconst unique = element.dataset['alias'];\r\n\t\t\treturn unique;\r\n\t\t},\r\n\t\tgetUniqueOfModel: (modelEntry: UmbCrop) => {\r\n\t\t\treturn modelEntry.alias;\r\n\t\t},\r\n\t\tidentifier: 'Umb.SorterIdentifier.ImageCrops',\r\n\t\titemSelector: '.crop',\r\n\t\tcontainerSelector: '.crops',\r\n\t\tonChange: ({ model }) => {\r\n\t\t\tconst oldValue = this._value;\r\n\t\t\tthis._value = model;\r\n\t\t\tthis.requestUpdate('_value', oldValue);\r\n\t\t\tthis.dispatchEvent(new UmbPropertyValueChangeEvent());\r\n\t\t},\r\n\t});\r\n\r\n\t#onRemove(alias: string) {\r\n\t\tthis.value = [...this.value.filter((item) => item.alias !== alias)];\r\n\t\tthis.dispatchEvent(new UmbPropertyValueChangeEvent());\r\n\t}\r\n\r\n\t#onEdit(crop: UmbCrop) {\r\n\t\tthis.editCropAlias = crop.alias;\r\n\r\n\t\tconst form = this.shadowRoot?.querySelector('form') as HTMLFormElement;\r\n\t\tif (!form) return;\r\n\r\n\t\tconst label = form.querySelector('#label') as HTMLInputElement;\r\n\t\tconst alias = form.querySelector('#alias') as HTMLInputElement;\r\n\t\tconst width = form.querySelector('#width') as HTMLInputElement;\r\n\t\tconst height = form.querySelector('#height') as HTMLInputElement;\r\n\r\n\t\tif (!alias || !width || !height) return;\r\n\r\n\t\tlabel.value = crop.label;\r\n\t\talias.value = crop.alias;\r\n\t\twidth.value = crop.width.toString();\r\n\t\theight.value = crop.height.toString();\r\n\t}\r\n\r\n\t#onEditCancel() {\r\n\t\tthis.editCropAlias = '';\r\n\t}\r\n\r\n\t#onSubmit(event: Event) {\r\n\t\tevent.preventDefault();\r\n\t\tconst form = event.target as HTMLFormElement;\r\n\t\tif (!form) return;\r\n\r\n\t\tif (!form.checkValidity()) return;\r\n\r\n\t\tconst formData = new FormData(form);\r\n\r\n\t\tconst label = formData.get('label') as string;\r\n\t\tconst alias = formData.get('alias') as string;\r\n\t\tconst width = formData.get('width') as string;\r\n\t\tconst height = formData.get('height') as string;\r\n\r\n\t\tif (!label || !alias || !width || !height) return;\r\n\t\tif (!this.value) this.value = [];\r\n\r\n\t\tconst newCrop = {\r\n\t\t\tlabel,\r\n\t\t\talias,\r\n\t\t\twidth: parseInt(width),\r\n\t\t\theight: parseInt(height),\r\n\t\t};\r\n\r\n\t\tif (this.editCropAlias) {\r\n\t\t\tconst index = this.value.findIndex((item) => item.alias === this.editCropAlias);\r\n\t\t\tif (index === -1) return;\r\n\r\n\t\t\tconst temp = [...this.value];\r\n\t\t\ttemp[index] = newCrop;\r\n\t\t\tthis.value = [...temp];\r\n\t\t\tthis.editCropAlias = '';\r\n\t\t} else {\r\n\t\t\tthis.value = [...this.value, newCrop];\r\n\t\t}\r\n\t\tthis.dispatchEvent(new UmbPropertyValueChangeEvent());\r\n\r\n\t\tform.reset();\r\n\t\tthis._labelInput.focus();\r\n\t}\r\n\r\n\t#renderActions() {\r\n\t\treturn this.editCropAlias\r\n\t\t\t? html`<uui-button @click=${this.#onEditCancel}>Cancel</uui-button>\r\n\t\t\t\t\t<uui-button look=\"secondary\" type=\"submit\" label=\"Save\"></uui-button>`\r\n\t\t\t: html`<uui-button look=\"secondary\" type=\"submit\" label=\"Add\"></uui-button>`;\r\n\t}\r\n\r\n\t#onLabelInput() {\r\n\t\tconst value = this._labelInput.value ?? '';\r\n\r\n\t\tconst aliasValue = generateAlias(value);\r\n\r\n\t\tconst alias = this.shadowRoot?.querySelector('#alias') as HTMLInputElement;\r\n\r\n\t\tif (!alias) return;\r\n\r\n\t\tconst oldAliasValue = generateAlias(this.#oldInputValue);\r\n\r\n\t\tif (alias.value === oldAliasValue || !alias.value) {\r\n\t\t\talias.value = aliasValue;\r\n\t\t}\r\n\r\n\t\tthis.#oldInputValue = value;\r\n\t}\r\n\r\n\toverride render() {\r\n\t\tif (!this.value) this.value = [];\r\n\r\n\t\treturn html`\r\n\t\t\t<uui-form>\r\n\t\t\t\t<form @submit=${this.#onSubmit}>\r\n\t\t\t\t\t<div class=\"input\">\r\n\t\t\t\t\t\t<uui-label for=\"label\">Label</uui-label>\r\n\t\t\t\t\t\t<uui-input\r\n\t\t\t\t\t\t\t@input=${this.#onLabelInput}\r\n\t\t\t\t\t\t\tlabel=\"Label\"\r\n\t\t\t\t\t\t\tid=\"label\"\r\n\t\t\t\t\t\t\tname=\"label\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tautocomplete=\"false\"\r\n\t\t\t\t\t\t\tvalue=\"\"></uui-input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"input\">\r\n\t\t\t\t\t\t<uui-label for=\"alias\">Alias</uui-label>\r\n\t\t\t\t\t\t<uui-input label=\"Alias\" id=\"alias\" name=\"alias\" type=\"text\" autocomplete=\"false\" value=\"\"></uui-input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"input\">\r\n\t\t\t\t\t\t<uui-label for=\"width\">Width</uui-label>\r\n\t\t\t\t\t\t<uui-input label=\"Width\" id=\"width\" name=\"width\" type=\"number\" autocomplete=\"false\" value=\"\" min=\"0\">\r\n\t\t\t\t\t\t\t<span class=\"append\" slot=\"append\">px</span>\r\n\t\t\t\t\t\t</uui-input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"input\">\r\n\t\t\t\t\t\t<uui-label for=\"height\">Height</uui-label>\r\n\t\t\t\t\t\t<uui-input label=\"Height\" id=\"height\" name=\"height\" type=\"number\" autocomplete=\"false\" value=\"\" min=\"0\">\r\n\t\t\t\t\t\t\t<span class=\"append\" slot=\"append\">px</span>\r\n\t\t\t\t\t\t</uui-input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"action-wrapper\">${this.#renderActions()}</div>\r\n\t\t\t\t</form>\r\n\t\t\t</uui-form>\r\n\t\t\t<div class=\"crops\">\r\n\t\t\t\t${repeat(\r\n\t\t\t\t\tthis.value,\r\n\t\t\t\t\t(item) => item.alias,\r\n\t\t\t\t\t(item) => html`\r\n\t\t\t\t\t\t<div class=\"crop\" data-alias=\"${item.alias}\">\r\n\t\t\t\t\t\t\t<span class=\"crop-drag\">+</span>\r\n\t\t\t\t\t\t\t<span><strong>${item.label}</strong> <em>(${item.alias})</em></span>\r\n\t\t\t\t\t\t\t<span class=\"crop-size\">(${item.width} x ${item.height}px)</span>\r\n\t\t\t\t\t\t\t<div class=\"crop-actions\">\r\n\t\t\t\t\t\t\t\t<uui-button\r\n\t\t\t\t\t\t\t\t\tlabel=${this.localize.term('general_edit')}\r\n\t\t\t\t\t\t\t\t\tcolor=\"default\"\r\n\t\t\t\t\t\t\t\t\t@click=${() => this.#onEdit(item)}></uui-button>\r\n\t\t\t\t\t\t\t\t<uui-button\r\n\t\t\t\t\t\t\t\t\tlabel=${this.localize.term('general_remove')}\r\n\t\t\t\t\t\t\t\t\tcolor=\"danger\"\r\n\t\t\t\t\t\t\t\t\t@click=${() => this.#onRemove(item.alias)}></uui-button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t`,\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override readonly styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t}\r\n\t\t\t.crops {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t\tgap: var(--uui-size-space-2);\r\n\t\t\t\tmargin-top: var(--uui-size-space-4);\r\n\t\t\t}\r\n\t\t\t.crop {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tbackground: var(--uui-color-background);\r\n\t\t\t}\r\n\t\t\t.crop-drag {\r\n\t\t\t\tcursor: grab;\r\n\t\t\t\tpadding-inline: var(--uui-size-space-4);\r\n\t\t\t\tcolor: var(--uui-color-disabled-contrast);\r\n\t\t\t\tfont-weight: bold;\r\n\t\t\t}\r\n\t\t\t.crop-size {\r\n\t\t\t\tfont-size: 0.9em;\r\n\t\t\t\tpadding-inline: var(--uui-size-space-4);\r\n\t\t\t}\r\n\t\t\t.crop-actions {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tmargin-left: auto;\r\n\t\t\t}\r\n\t\t\tform {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tgap: var(--uui-size-space-2);\r\n\t\t\t}\r\n\t\t\t.input {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t}\r\n\t\t\t.append {\r\n\t\t\t\tpadding-inline: var(--uui-size-space-4);\r\n\t\t\t\tbackground: var(--uui-color-disabled);\r\n\t\t\t\tborder-left: 1px solid var(--uui-color-border);\r\n\t\t\t\tcolor: var(--uui-color-disabled-contrast);\r\n\t\t\t\tfont-size: 0.8em;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: center;\r\n\t\t\t}\r\n\t\t\t.action-wrapper {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: flex-end;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbPropertyEditorUIImageCropsElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-property-editor-ui-image-crops': UmbPropertyEditorUIImageCropsElement;\r\n\t}\r\n}\r\n"],"names":["_oldInputValue","_sorter","_UmbPropertyEditorUIImageCropsElement_instances","onRemove_fn","onEdit_fn","onEditCancel_fn","onSubmit_fn","renderActions_fn","onLabelInput_fn","UmbPropertyEditorUIImageCropsElement","UmbLitElement","__privateAdd","UmbSorterController","element","modelEntry","model","oldValue","UmbPropertyValueChangeEvent","value","__privateGet","html","__privateMethod","repeat","item","alias","crop","form","label","width","height","event","formData","newCrop","index","temp","aliasValue","generateAlias","oldAliasValue","__privateSet","UmbTextStyles","css","__decorateClass","query","state","property","customElement","UmbPropertyEditorUIImageCropsElement$1"],"mappings":"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"}