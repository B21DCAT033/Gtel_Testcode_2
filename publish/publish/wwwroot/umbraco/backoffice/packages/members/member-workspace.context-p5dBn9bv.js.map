{"version":3,"file":"member-workspace.context-p5dBn9bv.js","sources":["../../../src/packages/members/member/property-dataset-context/member-property-dataset.context.ts","../../../src/packages/members/member/workspace/member/member-workspace-split-view.element.ts","../../../src/packages/members/member/workspace/member/member-workspace-editor.element.ts","../../../src/packages/members/member/workspace/member/member-workspace.context.ts"],"sourcesContent":["import type { UmbMemberDetailModel, UmbMemberVariantModel } from '../types.js';\r\nimport { UmbContentPropertyDatasetContext } from '@umbraco-cms/backoffice/content';\r\nimport type { UmbMemberTypeDetailModel } from '@umbraco-cms/backoffice/member-type';\r\n\r\nexport class UmbMemberPropertyDatasetContext extends UmbContentPropertyDatasetContext<\r\n\tUmbMemberDetailModel,\r\n\tUmbMemberTypeDetailModel,\r\n\tUmbMemberVariantModel\r\n> {}\r\n","import { UMB_MEMBER_ROOT_WORKSPACE_PATH } from '../../paths.js';\r\nimport { UMB_MEMBER_WORKSPACE_CONTEXT } from './member-workspace.context-token.js';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport { css, html, nothing, customElement, state, repeat } from '@umbraco-cms/backoffice/external/lit';\r\nimport type { ActiveVariant } from '@umbraco-cms/backoffice/workspace';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\n\r\n@customElement('umb-member-workspace-split-view')\r\nexport class UmbMemberWorkspaceSplitViewElement extends UmbLitElement {\r\n\t// TODO: Refactor: use the split view context token:\r\n\tprivate _workspaceContext?: typeof UMB_MEMBER_WORKSPACE_CONTEXT.TYPE;\r\n\r\n\t@state()\r\n\t_variants?: Array<ActiveVariant>;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\t// TODO: Refactor: use a split view workspace context token:\r\n\t\tthis.consumeContext(UMB_MEMBER_WORKSPACE_CONTEXT, (context) => {\r\n\t\t\tthis._workspaceContext = context;\r\n\t\t\tthis._observeActiveVariantInfo();\r\n\t\t});\r\n\t}\r\n\r\n\tprivate _observeActiveVariantInfo() {\r\n\t\tif (!this._workspaceContext) return;\r\n\t\tthis.observe(\r\n\t\t\tthis._workspaceContext.splitView.activeVariantsInfo,\r\n\t\t\t(variants) => {\r\n\t\t\t\tthis._variants = variants;\r\n\t\t\t},\r\n\t\t\t'_observeActiveVariantsInfo',\r\n\t\t);\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn this._variants\r\n\t\t\t? html`<div id=\"splitViews\">\r\n\t\t\t\t\t\t${repeat(\r\n\t\t\t\t\t\t\tthis._variants,\r\n\t\t\t\t\t\t\t(view) =>\r\n\t\t\t\t\t\t\t\tview.index + '_' + (view.culture ?? '') + '_' + (view.segment ?? '') + '_' + this._variants!.length,\r\n\t\t\t\t\t\t\t(view) => html`\r\n\t\t\t\t\t\t\t\t<umb-workspace-split-view\r\n\t\t\t\t\t\t\t\t\tback-path=${UMB_MEMBER_ROOT_WORKSPACE_PATH}\r\n\t\t\t\t\t\t\t\t\t.splitViewIndex=${view.index}\r\n\t\t\t\t\t\t\t\t\t.displayNavigation=${view.index === this._variants!.length - 1}>\r\n\t\t\t\t\t\t\t\t</umb-workspace-split-view>\r\n\t\t\t\t\t\t\t`,\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<umb-workspace-footer alias=\"Umb.Workspace.Member\"></umb-workspace-footer>`\r\n\t\t\t: nothing;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\theight: 100%;\r\n\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex: 1;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t}\r\n\r\n\t\t\t#splitViews {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\theight: calc(100% - var(--umb-footer-layout-height));\r\n\t\t\t}\r\n\r\n\t\t\t#breadcrumbs {\r\n\t\t\t\tmargin: 0 var(--uui-size-layout-1);\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbMemberWorkspaceSplitViewElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-member-workspace-split-view': UmbMemberWorkspaceSplitViewElement;\r\n\t}\r\n}\r\n","import type { UmbMemberVariantOptionModel } from '../../types.js';\r\nimport { UMB_MEMBER_WORKSPACE_CONTEXT } from './member-workspace.context-token.js';\r\nimport { UmbMemberWorkspaceSplitViewElement } from './member-workspace-split-view.element.js';\r\nimport { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport { css, html, customElement, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport type { UmbRoute, UmbRouterSlotInitEvent } from '@umbraco-cms/backoffice/router';\r\n\r\n@customElement('umb-member-workspace-editor')\r\nexport class UmbMemberWorkspaceEditorElement extends UmbLitElement {\r\n\t//\r\n\t// TODO: Refactor: when having a split view/variants context token, we can rename the split view/variants component to a generic and make this component generic as well. [NL]\r\n\tprivate splitViewElement = new UmbMemberWorkspaceSplitViewElement();\r\n\r\n\t#workspaceContext?: typeof UMB_MEMBER_WORKSPACE_CONTEXT.TYPE;\r\n\r\n\t@state()\r\n\t_routes?: Array<UmbRoute>;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.consumeContext(UMB_MEMBER_WORKSPACE_CONTEXT, (instance) => {\r\n\t\t\tthis.#workspaceContext = instance;\r\n\t\t\tthis.#observeVariants();\r\n\t\t});\r\n\t}\r\n\r\n\t#observeVariants() {\r\n\t\tif (!this.#workspaceContext) return;\r\n\t\t// TODO: the variantOptions observable is like too broad as this will be triggered then there is any change in the variant options, we need to only update routes when there is a relevant change to them. [NL]\r\n\t\tthis.observe(this.#workspaceContext.variantOptions, (options) => this._generateRoutes(options), '_observeVariants');\r\n\t}\r\n\r\n\tprivate _handleVariantFolderPart(index: number, folderPart: string) {\r\n\t\tconst variantSplit = folderPart.split('_');\r\n\t\tconst culture = variantSplit[0];\r\n\t\tconst segment = variantSplit[1];\r\n\t\tthis.#workspaceContext?.splitView.setActiveVariant(index, culture, segment);\r\n\t}\r\n\r\n\tprivate async _generateRoutes(options: Array<UmbMemberVariantOptionModel>) {\r\n\t\tif (!options || options.length === 0) return;\r\n\r\n\t\t// Generate split view routes for all available routes\r\n\t\tconst routes: Array<UmbRoute> = [];\r\n\r\n\t\t// Split view routes:\r\n\t\toptions.forEach((variantA) => {\r\n\t\t\toptions.forEach((variantB) => {\r\n\t\t\t\troutes.push({\r\n\t\t\t\t\t// TODO: When implementing Segments, be aware if using the unique is URL Safe... [NL]\r\n\t\t\t\t\tpath: variantA.unique + '_&_' + variantB.unique,\r\n\t\t\t\t\tcomponent: this.splitViewElement,\r\n\t\t\t\t\tsetup: (_component, info) => {\r\n\t\t\t\t\t\t// Set split view/active info..\r\n\t\t\t\t\t\tconst variantSplit = info.match.fragments.consumed.split('_&_');\r\n\t\t\t\t\t\tvariantSplit.forEach((part, index) => {\r\n\t\t\t\t\t\t\tthis._handleVariantFolderPart(index, part);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\t// Single view:\r\n\t\toptions.forEach((variant) => {\r\n\t\t\troutes.push({\r\n\t\t\t\t// TODO: When implementing Segments, be aware if using the unique is URL Safe... [NL]\r\n\t\t\t\tpath: variant.unique,\r\n\t\t\t\tcomponent: this.splitViewElement,\r\n\t\t\t\tsetup: (_component, info) => {\r\n\t\t\t\t\t// cause we might come from a split-view, we need to reset index 1.\r\n\t\t\t\t\tthis.#workspaceContext?.splitView.removeActiveVariant(1);\r\n\t\t\t\t\tthis._handleVariantFolderPart(0, info.match.fragments.consumed);\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tif (routes.length !== 0) {\r\n\t\t\t// Using first single view as the default route for now (hence the math below):\r\n\t\t\troutes.push({\r\n\t\t\t\tpath: '',\r\n\t\t\t\tredirectTo: routes[options.length * options.length]?.path,\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\troutes.push({\r\n\t\t\tpath: `**`,\r\n\t\t\tcomponent: async () => (await import('@umbraco-cms/backoffice/router')).UmbRouteNotFoundElement,\r\n\t\t});\r\n\r\n\t\tthis._routes = routes;\r\n\t}\r\n\r\n\tprivate _gotWorkspaceRoute = (e: UmbRouterSlotInitEvent) => {\r\n\t\tthis.#workspaceContext?.splitView.setWorkspaceRoute(e.target.absoluteRouterPath);\r\n\t};\r\n\r\n\toverride render() {\r\n\t\treturn this._routes && this._routes.length > 0\r\n\t\t\t? html`<umb-router-slot .routes=${this._routes} @init=${this._gotWorkspaceRoute}></umb-router-slot>`\r\n\t\t\t: '';\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\theight: 100%;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default UmbMemberWorkspaceEditorElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'umb-member-workspace-editor': UmbMemberWorkspaceEditorElement;\r\n\t}\r\n}\r\n","import type { UmbMemberDetailRepository } from '../../repository/index.js';\r\nimport type { UmbMemberDetailModel, UmbMemberVariantModel } from '../../types.js';\r\nimport { UmbMemberPropertyDatasetContext } from '../../property-dataset-context/member-property-dataset.context.js';\r\nimport { UMB_MEMBER_ENTITY_TYPE, UMB_MEMBER_ROOT_ENTITY_TYPE } from '../../entity.js';\r\nimport { UMB_MEMBER_DETAIL_REPOSITORY_ALIAS } from '../../repository/detail/manifests.js';\r\nimport { UMB_MEMBER_WORKSPACE_ALIAS } from './manifests.js';\r\nimport { UmbMemberWorkspaceEditorElement } from './member-workspace-editor.element.js';\r\nimport { UMB_MEMBER_DETAIL_MODEL_VARIANT_SCAFFOLD } from './constants.js';\r\nimport { UmbMemberTypeDetailRepository, type UmbMemberTypeDetailModel } from '@umbraco-cms/backoffice/member-type';\r\nimport {\r\n\tUmbWorkspaceIsNewRedirectController,\r\n\tUmbWorkspaceIsNewRedirectControllerAlias,\r\n} from '@umbraco-cms/backoffice/workspace';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport type { UmbVariantId } from '@umbraco-cms/backoffice/variant';\r\nimport { UmbContentDetailWorkspaceContextBase, type UmbContentWorkspaceContext } from '@umbraco-cms/backoffice/content';\r\n\r\ntype ContentModel = UmbMemberDetailModel;\r\ntype ContentTypeModel = UmbMemberTypeDetailModel;\r\n\r\nexport class UmbMemberWorkspaceContext\r\n\textends UmbContentDetailWorkspaceContextBase<\r\n\t\tContentModel,\r\n\t\tUmbMemberDetailRepository,\r\n\t\tContentTypeModel,\r\n\t\tUmbMemberVariantModel\r\n\t>\r\n\timplements UmbContentWorkspaceContext<ContentModel, ContentTypeModel, UmbMemberVariantModel>\r\n{\r\n\treadonly contentTypeUnique = this._data.createObservablePartOfCurrent((data) => data?.memberType.unique);\r\n\treadonly kind = this._data.createObservablePartOfCurrent((data) => data?.kind);\r\n\treadonly createDate = this._data.createObservablePartOfCurrent((data) => data?.variants[0].createDate);\r\n\treadonly updateDate = this._data.createObservablePartOfCurrent((data) => data?.variants[0].updateDate);\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host, {\r\n\t\t\tentityType: UMB_MEMBER_ENTITY_TYPE,\r\n\t\t\tworkspaceAlias: UMB_MEMBER_WORKSPACE_ALIAS,\r\n\t\t\tdetailRepositoryAlias: UMB_MEMBER_DETAIL_REPOSITORY_ALIAS,\r\n\t\t\tcontentTypeDetailRepository: UmbMemberTypeDetailRepository,\r\n\t\t\t// TODO: Enable Validation Repository when we have UI for showing validation issues on other tabs. [NL]\r\n\t\t\t//contentValidationRepository: UmbMemberValidationRepository,\r\n\t\t\tcontentVariantScaffold: UMB_MEMBER_DETAIL_MODEL_VARIANT_SCAFFOLD,\r\n\t\t\tcontentTypePropertyName: 'memberType',\r\n\t\t});\r\n\r\n\t\tthis.observe(this.contentTypeUnique, (unique) => this.structure.loadType(unique), null);\r\n\r\n\t\tthis.routes.setRoutes([\r\n\t\t\t{\r\n\t\t\t\tpath: 'create/:memberTypeUnique',\r\n\t\t\t\tcomponent: () => new UmbMemberWorkspaceEditorElement(),\r\n\t\t\t\tsetup: async (_component, info) => {\r\n\t\t\t\t\tconst memberTypeUnique = info.match.params.memberTypeUnique;\r\n\t\t\t\t\tawait this.create(memberTypeUnique);\r\n\r\n\t\t\t\t\tnew UmbWorkspaceIsNewRedirectController(\r\n\t\t\t\t\t\tthis,\r\n\t\t\t\t\t\tthis,\r\n\t\t\t\t\t\tthis.getHostElement().shadowRoot!.querySelector('umb-router-slot')!,\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'edit/:unique',\r\n\t\t\t\tcomponent: () => new UmbMemberWorkspaceEditorElement(),\r\n\t\t\t\tsetup: (_component, info) => {\r\n\t\t\t\t\tthis.removeUmbControllerByAlias(UmbWorkspaceIsNewRedirectControllerAlias);\r\n\t\t\t\t\tconst unique = info.match.params.unique;\r\n\t\t\t\t\tthis.load(unique);\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t]);\r\n\t}\r\n\r\n\tasync create(memberTypeUnique: string) {\r\n\t\treturn this.createScaffold({\r\n\t\t\tparent: { entityType: UMB_MEMBER_ROOT_ENTITY_TYPE, unique: null },\r\n\t\t\tpreset: {\r\n\t\t\t\tmemberType: {\r\n\t\t\t\t\tunique: memberTypeUnique,\r\n\t\t\t\t\ticon: 'icon-user',\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the unique identifier of the content type.\r\n\t * @deprecated Use `getContentTypeUnique` instead.\r\n\t * @returns { string | undefined} The unique identifier of the content type.\r\n\t * @memberof UmbMemberWorkspaceContext\r\n\t */\r\n\tgetContentTypeId(): string | undefined {\r\n\t\treturn this.getContentTypeUnique();\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the unique identifier of the content type.\r\n\t * @returns { string | undefined} The unique identifier of the content type.\r\n\t * @memberof UmbMemberWorkspaceContext\r\n\t */\r\n\tgetContentTypeUnique(): string | undefined {\r\n\t\treturn this.getData()?.memberType.unique;\r\n\t}\r\n\r\n\tpublic createPropertyDatasetContext(\r\n\t\thost: UmbControllerHost,\r\n\t\tvariantId: UmbVariantId,\r\n\t): UmbMemberPropertyDatasetContext {\r\n\t\treturn new UmbMemberPropertyDatasetContext(host, this, variantId);\r\n\t}\r\n\r\n\tset<PropertyName extends keyof UmbMemberDetailModel>(\r\n\t\tpropertyName: PropertyName,\r\n\t\tvalue: UmbMemberDetailModel[PropertyName],\r\n\t) {\r\n\t\tthis._data.updateCurrent({ [propertyName]: value });\r\n\t}\r\n\r\n\t// Only for CRUD demonstration purposes\r\n\tupdateData(data: Partial<ContentModel>) {\r\n\t\tconst currentData = this._data.getCurrent();\r\n\t\tif (!currentData) throw new Error('No data to update');\r\n\t\tthis._data.setCurrent({ ...currentData, ...data });\r\n\t}\r\n\r\n\tget email(): string {\r\n\t\treturn this.#get('email') || '';\r\n\t}\r\n\r\n\tget username(): string {\r\n\t\treturn this.#get('username') || '';\r\n\t}\r\n\r\n\tget isLockedOut(): boolean {\r\n\t\treturn this.#get('isLockedOut') || false;\r\n\t}\r\n\r\n\tget isTwoFactorEnabled(): boolean {\r\n\t\treturn this.#get('isTwoFactorEnabled') || false;\r\n\t}\r\n\r\n\tget isApproved(): boolean {\r\n\t\treturn this.#get('isApproved') || false;\r\n\t}\r\n\r\n\tget failedPasswordAttempts(): number {\r\n\t\treturn this.#get('failedPasswordAttempts') || 0;\r\n\t}\r\n\r\n\tget lastLockOutDate(): string | null {\r\n\t\treturn this.#get('lastLockoutDate') ?? null;\r\n\t}\r\n\r\n\tget lastLoginDate(): string | null {\r\n\t\treturn this.#get('lastLoginDate') ?? null;\r\n\t}\r\n\r\n\tget lastPasswordChangeDate(): string | null {\r\n\t\treturn this.#get('lastPasswordChangeDate') ?? null;\r\n\t}\r\n\r\n\tget memberGroups() {\r\n\t\treturn this.#get('groups') || [];\r\n\t}\r\n\r\n\t#get<PropertyName extends keyof UmbMemberDetailModel>(propertyName: PropertyName) {\r\n\t\treturn this._data.getCurrent()?.[propertyName];\r\n\t}\r\n}\r\n\r\nexport { UmbMemberWorkspaceContext as api };\r\n"],"names":["UmbMemberPropertyDatasetContext","UmbContentPropertyDatasetContext","UmbMemberWorkspaceSplitViewElement","UmbLitElement","UMB_MEMBER_WORKSPACE_CONTEXT","context","variants","html","repeat","view","UMB_MEMBER_ROOT_WORKSPACE_PATH","nothing","UmbTextStyles","css","__decorateClass","state","customElement","_workspaceContext","_UmbMemberWorkspaceEditorElement_instances","observeVariants_fn","UmbMemberWorkspaceEditorElement","__privateAdd","e","__privateGet","instance","__privateSet","__privateMethod","index","folderPart","variantSplit","culture","segment","options","routes","variantA","variantB","_component","info","part","variant","UmbMemberWorkspaceContext","UmbContentDetailWorkspaceContextBase","host","UMB_MEMBER_ENTITY_TYPE","UMB_MEMBER_WORKSPACE_ALIAS","UMB_MEMBER_DETAIL_REPOSITORY_ALIAS","UmbMemberTypeDetailRepository","UMB_MEMBER_DETAIL_MODEL_VARIANT_SCAFFOLD","data","unique","memberTypeUnique","UmbWorkspaceIsNewRedirectController","UmbWorkspaceIsNewRedirectControllerAlias","UMB_MEMBER_ROOT_ENTITY_TYPE","variantId","propertyName","value","currentData","#get"],"mappings":"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"}