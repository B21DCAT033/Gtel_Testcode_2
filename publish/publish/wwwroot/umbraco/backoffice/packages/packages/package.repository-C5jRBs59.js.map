{"version":3,"file":"package.repository-C5jRBs59.js","sources":["../../../src/packages/packages/package/repository/sources/package.server.data.ts","../../../src/packages/packages/package/repository/package.repository.ts"],"sourcesContent":["import { tryExecuteAndNotify } from '@umbraco-cms/backoffice/resources';\r\nimport { ManifestService, PackageService } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport type {\r\n\tCreatePackageRequestModel,\r\n\tUpdatePackageRequestModel,\r\n} from '@umbraco-cms/backoffice/external/backend-api';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\n\r\n/**\r\n * Data source for packages from the server\r\n \r\n */\r\nexport class UmbPackageServerDataSource {\r\n\tconstructor(private readonly host: UmbControllerHost) {}\r\n\r\n\tasync deleteCreatedPackage(unique: string) {\r\n\t\treturn await tryExecuteAndNotify(this.host, PackageService.deletePackageCreatedById({ id: unique }));\r\n\t}\r\n\r\n\tgetCreatedPackage(unique: string) {\r\n\t\treturn tryExecuteAndNotify(this.host, PackageService.getPackageCreatedById({ id: unique }));\r\n\t}\r\n\r\n\tgetCreatedPackages({ skip, take }: { skip: number; take: number }) {\r\n\t\treturn tryExecuteAndNotify(this.host, PackageService.getPackageCreated({ skip, take }));\r\n\t}\r\n\r\n\tgetCreatePackageDownload(unique: string) {\r\n\t\treturn tryExecuteAndNotify(this.host, PackageService.getPackageCreatedByIdDownload({ id: unique }));\r\n\t}\r\n\r\n\t/**\r\n\t * Get the root items from the server\r\n\t * @memberof UmbPackageServerDataSource\r\n\t */\r\n\tgetRootItems() {\r\n\t\treturn tryExecuteAndNotify(this.host, ManifestService.getManifestManifest());\r\n\t}\r\n\r\n\t/**\r\n\t * Get the package configuration from the server\r\n\t * @memberof UmbPackageServerDataSource\r\n\t */\r\n\tgetPackageConfiguration() {\r\n\t\treturn tryExecuteAndNotify(this.host, PackageService.getPackageConfiguration());\r\n\t}\r\n\r\n\t/**\r\n\t * Get the package migrations from the server\r\n\t * @memberof UmbPackageServerDataSource\r\n\t */\r\n\tgetPackageMigrations() {\r\n\t\treturn tryExecuteAndNotify(this.host, PackageService.getPackageMigrationStatus({ skip: 0, take: 9999 }));\r\n\t}\r\n\r\n\tasync saveCreatedPackage(requestBody: CreatePackageRequestModel) {\r\n\t\treturn await tryExecuteAndNotify(this.host, PackageService.postPackageCreated({ requestBody }));\r\n\t}\r\n\r\n\tasync updateCreatedPackage(id: string, requestBody: UpdatePackageRequestModel) {\r\n\t\treturn await tryExecuteAndNotify(this.host, PackageService.putPackageCreatedById({ id, requestBody }));\r\n\t}\r\n}\r\n","import type { UmbCreatedPackageDefinition, UmbCreatedPackages } from '../../types.js';\r\nimport { UMB_PACKAGE_STORE_TOKEN } from './package.store.context-token.js';\r\nimport { UmbPackageServerDataSource } from './sources/package.server.data.js';\r\nimport type { UmbPackageStore } from './package.store.js';\r\nimport { isManifestBaseType } from '@umbraco-cms/backoffice/extension-api';\r\nimport { OpenAPI } from '@umbraco-cms/backoffice/external/backend-api';\r\nimport { UmbControllerBase } from '@umbraco-cms/backoffice/class-api';\r\nimport type { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport type { UmbApi, ManifestBase } from '@umbraco-cms/backoffice/extension-api';\r\n\r\n/**\r\n * A repository for Packages which mimics a tree store.\r\n \r\n */\r\nexport class UmbPackageRepository extends UmbControllerBase implements UmbApi {\r\n\t#init!: Promise<void>;\r\n\t#packageStore?: UmbPackageStore;\r\n\t#packageSource: UmbPackageServerDataSource;\r\n\t#apiBaseUrl = OpenAPI.BASE;\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host);\r\n\t\tthis.#packageSource = new UmbPackageServerDataSource(this);\r\n\t\tthis.#init = new Promise((resolve) => {\r\n\t\t\tthis.consumeContext(UMB_PACKAGE_STORE_TOKEN, (instance) => {\r\n\t\t\t\tthis.#packageStore = instance;\r\n\t\t\t\tthis.requestConfiguration(instance);\r\n\t\t\t\tthis.requestRootItems(instance);\r\n\t\t\t\tthis.requestPackageMigrations(instance);\r\n\t\t\t\tresolve();\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tasync getCreatedPackage(unique: string | undefined): Promise<UmbCreatedPackageDefinition> {\r\n\t\tif (!unique) {\r\n\t\t\treturn this.#getEmptyCreatedPackage();\r\n\t\t}\r\n\r\n\t\tconst { data } = await this.#packageSource.getCreatedPackage(unique);\r\n\r\n\t\tif (!data) {\r\n\t\t\treturn this.#getEmptyCreatedPackage();\r\n\t\t}\r\n\r\n\t\tconst { id, ...model } = data;\r\n\t\treturn { unique: id, ...model };\r\n\t}\r\n\r\n\tasync getCreatedPackages({ skip, take }: { skip: number; take: number }): Promise<UmbCreatedPackages | undefined> {\r\n\t\tconst { data } = await this.#packageSource.getCreatedPackages({ skip, take });\r\n\t\tif (!data) return undefined;\r\n\t\treturn {\r\n\t\t\titems: data.items?.map((item) => ({ unique: item.id, name: item.name })),\r\n\t\t\ttotal: data.total,\r\n\t\t};\r\n\t}\r\n\r\n\tasync getCreatePackageDownload(unique: string): Promise<Blob | undefined> {\r\n\t\tconst { data } = await this.#packageSource.getCreatePackageDownload(unique);\r\n\t\treturn data;\r\n\t}\r\n\r\n\t#getEmptyCreatedPackage(): UmbCreatedPackageDefinition {\r\n\t\treturn {\r\n\t\t\tunique: '',\r\n\t\t\tname: '',\r\n\t\t\tpackagePath: '',\r\n\t\t\tcontentNodeId: undefined,\r\n\t\t\tcontentLoadChildNodes: false,\r\n\t\t\tmediaIds: [],\r\n\t\t\tmediaLoadChildNodes: false,\r\n\t\t\tdocumentTypes: [],\r\n\t\t\tmediaTypes: [],\r\n\t\t\tdataTypes: [],\r\n\t\t\ttemplates: [],\r\n\t\t\tpartialViews: [],\r\n\t\t\tstylesheets: [],\r\n\t\t\tscripts: [],\r\n\t\t\tlanguages: [],\r\n\t\t\tdictionaryItems: [],\r\n\t\t};\r\n\t}\r\n\r\n\tasync deleteCreatedPackage(unique: string) {\r\n\t\tconst { error } = await this.#packageSource.deleteCreatedPackage(unique);\r\n\t\treturn !error;\r\n\t}\r\n\r\n\tasync requestConfiguration(store: UmbPackageStore) {\r\n\t\tconst { data } = await this.#packageSource.getPackageConfiguration();\r\n\t\tif (data) {\r\n\t\t\tstore.setConfiguration(data);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Request the root items from the Data Source\r\n\t * @param store\r\n\t * @memberOf UmbPackageRepository\r\n\t */\r\n\tasync requestRootItems(store: UmbPackageStore) {\r\n\t\tif (store.isPackagesLoaded) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst { data: packages } = await this.#packageSource.getRootItems();\r\n\r\n\t\tif (packages) {\r\n\t\t\t// Append packages to the store but only if they have a name\r\n\t\t\tstore.appendItems(packages.filter((p) => p.name?.length));\r\n\t\t\tconst extensions: ManifestBase[] = [];\r\n\r\n\t\t\tpackages.forEach((p) => {\r\n\t\t\t\tp.extensions?.forEach((e) => {\r\n\t\t\t\t\t// Crudely validate that the extension at least follows a basic manifest structure\r\n\t\t\t\t\t// Idea: Use `Zod` to validate the manifest\r\n\t\t\t\t\tif (isManifestBaseType(e)) {\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * Crude check to see if extension is of type \"js\" since it is safe to assume we do not\r\n\t\t\t\t\t\t * need to load any other types of extensions in the backoffice (we need a js file to load)\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\t// Add base url if the js path is relative\r\n\t\t\t\t\t\tif ('js' in e && typeof e.js === 'string' && !e.js.startsWith('http')) {\r\n\t\t\t\t\t\t\te.js = `${this.#apiBaseUrl}${e.js}`;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Add base url if the element path is relative\r\n\t\t\t\t\t\tif ('element' in e && typeof e.element === 'string' && !e.element.startsWith('http')) {\r\n\t\t\t\t\t\t\te.element = `${this.#apiBaseUrl}${e.element}`;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Add base url if the element path api relative\r\n\t\t\t\t\t\tif ('api' in e && typeof e.api === 'string' && !e.api.startsWith('http')) {\r\n\t\t\t\t\t\t\te.api = `${this.#apiBaseUrl}${e.api}`;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\textensions.push(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\tstore.appendExtensions(extensions);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Request the package migrations from the Data Source\r\n\t * @param store\r\n\t * @memberOf UmbPackageRepository\r\n\t */\r\n\tasync requestPackageMigrations(store: UmbPackageStore) {\r\n\t\tconst { data: migrations } = await this.#packageSource.getPackageMigrations();\r\n\r\n\t\tif (migrations) {\r\n\t\t\tstore.appendMigrations(migrations.items);\r\n\t\t}\r\n\t}\r\n\r\n\tasync saveCreatedPackage(pkg: UmbCreatedPackageDefinition) {\r\n\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n\t\tconst { unique: _, ...model } = pkg;\r\n\t\tconst { data } = await this.#packageSource.saveCreatedPackage(model);\r\n\t\treturn data;\r\n\t}\r\n\r\n\tasync updateCreatedPackage(pkg: UmbCreatedPackageDefinition): Promise<boolean> {\r\n\t\tconst { unique, ...model } = pkg;\r\n\t\tconst { error } = await this.#packageSource.updateCreatedPackage(unique, model);\r\n\t\treturn !error;\r\n\t}\r\n\r\n\tasync configuration() {\r\n\t\tawait this.#init;\r\n\t\treturn this.#packageStore!.configuration;\r\n\t}\r\n\r\n\t/**\r\n\t * Observable of root items\r\n\t * @memberOf UmbPackageRepository\r\n\t */\r\n\tasync rootItems() {\r\n\t\tawait this.#init;\r\n\t\treturn this.#packageStore!.rootItems;\r\n\t}\r\n\r\n\t/**\r\n\t * Observable of extensions\r\n\t * @memberOf UmbPackageRepository\r\n\t */\r\n\tasync extensions() {\r\n\t\tawait this.#init;\r\n\t\treturn this.#packageStore!.extensions;\r\n\t}\r\n\r\n\t/**\r\n\t * Observable of migrations\r\n\t * @memberOf UmbPackageRepository\r\n\t */\r\n\tasync migrations() {\r\n\t\tawait this.#init;\r\n\t\treturn this.#packageStore!.migrations;\r\n\t}\r\n}\r\n\r\nexport default UmbPackageRepository;\r\n"],"names":["UmbPackageServerDataSource","host","unique","tryExecuteAndNotify","PackageService","skip","take","ManifestService","requestBody","id","UmbPackageRepository","UmbControllerBase","#init","#packageStore","#packageSource","#apiBaseUrl","OpenAPI","resolve","UMB_PACKAGE_STORE_TOKEN","instance","#getEmptyCreatedPackage","data","model","item","error","store","packages","p","extensions","e","isManifestBaseType","migrations","pkg","_"],"mappings":"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"}