{"version":3,"file":"input-content.element-B1BDh2NT.js","sources":["../../../src/packages/property-editors/content-picker/components/input-content/input-content.element.ts"],"sourcesContent":["import type { UmbContentPickerSource } from '../../types.js';\r\nimport { css, html, customElement, property } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbChangeEvent } from '@umbraco-cms/backoffice/event';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport type { UmbReferenceByUniqueAndType } from '@umbraco-cms/backoffice/models';\r\nimport type { UmbTreeStartNode } from '@umbraco-cms/backoffice/tree';\r\nimport { splitStringToArray } from '@umbraco-cms/backoffice/utils';\r\nimport { UmbFormControlMixin } from '@umbraco-cms/backoffice/validation';\r\n\r\nconst elementName = 'umb-input-content';\r\n@customElement(elementName)\r\nexport class UmbInputContentElement extends UmbFormControlMixin<string | undefined, typeof UmbLitElement>(\r\n\tUmbLitElement,\r\n) {\r\n\t@property()\r\n\tpublic set type(newType: UmbContentPickerSource['type']) {\r\n\t\tconst oldType = this.#type;\r\n\t\tif (newType?.toLowerCase() !== this.#type) {\r\n\t\t\tthis.#type = newType?.toLowerCase() as UmbContentPickerSource['type'];\r\n\t\t\tthis.requestUpdate('type', oldType);\r\n\t\t}\r\n\t}\r\n\tpublic get type(): UmbContentPickerSource['type'] {\r\n\t\treturn this.#type;\r\n\t}\r\n\t#type: UmbContentPickerSource['type'] = 'content';\r\n\r\n\t@property({ type: Number })\r\n\tmin = 0;\r\n\r\n\t@property({ type: String, attribute: 'min-message' })\r\n\tminMessage = 'This field need more items';\r\n\r\n\t@property({ type: Number })\r\n\tmax = 0;\r\n\r\n\t@property({ type: String, attribute: 'max-message' })\r\n\tmaxMessage = 'This field exceeds the allowed amount of items';\r\n\r\n\t@property({ type: Object, attribute: false })\r\n\tstartNode?: UmbTreeStartNode;\r\n\r\n\t@property()\r\n\tpublic set allowedContentTypeIds(value: string) {\r\n\t\tthis.#allowedContentTypeIds = value ? value.split(',') : [];\r\n\t}\r\n\tpublic get allowedContentTypeIds(): string {\r\n\t\treturn this.#allowedContentTypeIds.join(',');\r\n\t}\r\n\t#allowedContentTypeIds: Array<string> = [];\r\n\r\n\t@property({ type: Boolean })\r\n\tshowOpenButton?: boolean;\r\n\r\n\t@property({ type: Array })\r\n\tpublic set selection(values: Array<UmbReferenceByUniqueAndType>) {\r\n\t\tthis.#selection = values?.map((item) => item.unique) ?? [];\r\n\t}\r\n\tpublic get selection(): Array<UmbReferenceByUniqueAndType> {\r\n\t\treturn this.#selection.map((id) => ({ type: this.#entityTypeLookup[this.#type], unique: id }));\r\n\t}\r\n\r\n\t/** @deprecated Please use `selection` instead. This property will be removed in Umbraco 15. */\r\n\t@property({ type: Array })\r\n\tpublic set items(items: Array<UmbReferenceByUniqueAndType>) {\r\n\t\tthis.selection = items;\r\n\t}\r\n\t/** @deprecated Please use `selection` instead. This property will be removed in Umbraco 15. */\r\n\tpublic get items(): Array<UmbReferenceByUniqueAndType> {\r\n\t\treturn this.selection;\r\n\t}\r\n\r\n\t@property({ type: String })\r\n\tpublic override set value(selectionString: string | undefined) {\r\n\t\tthis.#selection = splitStringToArray(selectionString);\r\n\t}\r\n\tpublic override get value(): string | undefined {\r\n\t\treturn this.#selection.length > 0 ? this.#selection.join(',') : undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the input to readonly mode, meaning value cannot be changed but still able to read and select its content.\r\n\t * @type {boolean}\r\n\t * @attr\r\n\t * @default false\r\n\t */\r\n\t@property({ type: Boolean, reflect: true })\r\n\treadonly = false;\r\n\r\n\t#entityTypeLookup = { content: 'document', media: 'media', member: 'member' };\r\n\r\n\t#selection: Array<string> = [];\r\n\r\n\toverride firstUpdated() {\r\n\t\tthis.addFormControlElement(this.shadowRoot!.querySelector(`umb-input-${this.#entityTypeLookup[this.#type]}`)!);\r\n\t}\r\n\r\n\t#onChange(event: CustomEvent & { target: { selection: string[] | undefined } }) {\r\n\t\tthis.#selection = event.target.selection ?? [];\r\n\t\tthis.value = this.#selection.join(',');\r\n\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t}\r\n\r\n\toverride render() {\r\n\t\tswitch (this.#type) {\r\n\t\t\tcase 'content':\r\n\t\t\t\treturn this.#renderDocumentPicker();\r\n\t\t\tcase 'media':\r\n\t\t\t\treturn this.#renderMediaPicker();\r\n\t\t\tcase 'member':\r\n\t\t\t\treturn this.#renderMemberPicker();\r\n\t\t\tdefault:\r\n\t\t\t\treturn html`<p>Type could not be found.</p>`;\r\n\t\t}\r\n\t}\r\n\r\n\t#renderDocumentPicker() {\r\n\t\treturn html`\r\n\t\t\t<umb-input-document\r\n\t\t\t\t.selection=${this.#selection}\r\n\t\t\t\t.startNode=${this.startNode}\r\n\t\t\t\t.allowedContentTypeIds=${this.#allowedContentTypeIds}\r\n\t\t\t\t.min=${this.min}\r\n\t\t\t\t.minMessage=${this.minMessage}\r\n\t\t\t\t.max=${this.max}\r\n\t\t\t\t.maxMessage=${this.maxMessage}\r\n\t\t\t\t?showOpenButton=${this.showOpenButton}\r\n\t\t\t\t?readonly=${this.readonly}\r\n\t\t\t\t@change=${this.#onChange}></umb-input-document>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderMediaPicker() {\r\n\t\treturn html`\r\n\t\t\t<umb-input-media\r\n\t\t\t\t.selection=${this.#selection}\r\n\t\t\t\t.allowedContentTypeIds=${this.#allowedContentTypeIds}\r\n\t\t\t\t.min=${this.min}\r\n\t\t\t\t.minMessage=${this.minMessage}\r\n\t\t\t\t.max=${this.max}\r\n\t\t\t\t.maxMessage=${this.maxMessage}\r\n\t\t\t\t?showOpenButton=${this.showOpenButton}\r\n\t\t\t\t?readonly=${this.readonly}\r\n\t\t\t\t@change=${this.#onChange}></umb-input-media>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderMemberPicker() {\r\n\t\treturn html`\r\n\t\t\t<umb-input-member\r\n\t\t\t\t.selection=${this.#selection}\r\n\t\t\t\t.allowedContentTypeIds=${this.#allowedContentTypeIds}\r\n\t\t\t\t.min=${this.min}\r\n\t\t\t\t.minMessage=${this.minMessage}\r\n\t\t\t\t.max=${this.max}\r\n\t\t\t\t.maxMessage=${this.maxMessage}\r\n\t\t\t\t?showOpenButton=${this.showOpenButton}\r\n\t\t\t\t?readonly=${this.readonly}\r\n\t\t\t\t@change=${this.#onChange}></umb-input-member>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tcss`\r\n\t\t\tp {\r\n\t\t\t\tmargin: 0;\r\n\t\t\t\tcolor: var(--uui-color-border-emphasis);\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport { UmbInputContentElement as element };\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t[elementName]: UmbInputContentElement;\r\n\t}\r\n}\r\n"],"names":["_type","_allowedContentTypeIds","_entityTypeLookup","_selection","_UmbInputContentElement_instances","onChange_fn","renderDocumentPicker_fn","renderMediaPicker_fn","renderMemberPicker_fn","elementName","UmbInputContentElement","UmbFormControlMixin","UmbLitElement","__privateAdd","newType","oldType","__privateGet","__privateSet","value","values","item","id","items","selectionString","splitStringToArray","__privateMethod","html","event","UmbChangeEvent","css","__decorateClass","property","customElement"],"mappings":"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"}