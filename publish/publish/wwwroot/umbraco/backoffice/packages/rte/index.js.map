{"version":3,"file":"index.js","sources":["../../../src/packages/rte/components/rte-base.element.ts"],"sourcesContent":["import type { UmbPropertyEditorRteValueType } from '../types.js';\r\nimport { UMB_BLOCK_RTE_PROPERTY_EDITOR_SCHEMA_ALIAS } from '../constants.js';\r\nimport { property, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { observeMultiple } from '@umbraco-cms/backoffice/observable-api';\r\nimport { UmbBlockRteEntriesContext, UmbBlockRteManagerContext } from '@umbraco-cms/backoffice/block-rte';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UmbPropertyValueChangeEvent } from '@umbraco-cms/backoffice/property-editor';\r\nimport { UMB_PROPERTY_CONTEXT, UMB_PROPERTY_DATASET_CONTEXT } from '@umbraco-cms/backoffice/property';\r\nimport type { UmbBlockRteTypeModel } from '@umbraco-cms/backoffice/block-rte';\r\nimport type {\r\n\tUmbPropertyEditorUiElement,\r\n\tUmbPropertyEditorConfigCollection,\r\n} from '@umbraco-cms/backoffice/property-editor';\r\nimport {\r\n\tUMB_VALIDATION_EMPTY_LOCALIZATION_KEY,\r\n\tUmbFormControlMixin,\r\n\tUmbValidationContext,\r\n} from '@umbraco-cms/backoffice/validation';\r\nimport { UmbBlockElementDataValidationPathTranslator } from '@umbraco-cms/backoffice/block';\r\n\r\nexport abstract class UmbPropertyEditorUiRteElementBase\r\n\textends UmbFormControlMixin<UmbPropertyEditorRteValueType | undefined, typeof UmbLitElement, undefined>(UmbLitElement)\r\n\timplements UmbPropertyEditorUiElement\r\n{\r\n\tpublic set config(config: UmbPropertyEditorConfigCollection | undefined) {\r\n\t\tif (!config) return;\r\n\r\n\t\tthis._config = config;\r\n\r\n\t\tconst blocks = config.getValueByAlias<Array<UmbBlockRteTypeModel>>('blocks') ?? [];\r\n\t\tthis.#managerContext.setBlockTypes(blocks);\r\n\r\n\t\tthis.#managerContext.setEditorConfiguration(config);\r\n\t}\r\n\r\n\t@property({\r\n\t\tattribute: false,\r\n\t\ttype: Object,\r\n\t\thasChanged(value?: UmbPropertyEditorRteValueType, oldValue?: UmbPropertyEditorRteValueType) {\r\n\t\t\treturn value?.markup !== oldValue?.markup;\r\n\t\t},\r\n\t})\r\n\tpublic override set value(value: UmbPropertyEditorRteValueType | undefined) {\r\n\t\tif (!value) {\r\n\t\t\tsuper.value = undefined;\r\n\t\t\tthis._markup = '';\r\n\t\t\tthis.#managerContext.setLayouts([]);\r\n\t\t\tthis.#managerContext.setContents([]);\r\n\t\t\tthis.#managerContext.setSettings([]);\r\n\t\t\tthis.#managerContext.setExposes([]);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst buildUpValue: Partial<UmbPropertyEditorRteValueType> = value ? { ...value } : {};\r\n\t\tbuildUpValue.markup ??= '';\r\n\t\tbuildUpValue.blocks ??= { layout: {}, contentData: [], settingsData: [], expose: [] };\r\n\t\tbuildUpValue.blocks.layout ??= {};\r\n\t\tbuildUpValue.blocks.contentData ??= [];\r\n\t\tbuildUpValue.blocks.settingsData ??= [];\r\n\t\tbuildUpValue.blocks.expose ??= [];\r\n\t\tsuper.value = buildUpValue as UmbPropertyEditorRteValueType;\r\n\r\n\t\t// Only update the actual editor markup if it is not the same as the value.\r\n\t\tif (this._markup !== super.value.markup) {\r\n\t\t\tthis._markup = super.value.markup;\r\n\t\t}\r\n\r\n\t\tthis.#managerContext.setLayouts(buildUpValue.blocks.layout[UMB_BLOCK_RTE_PROPERTY_EDITOR_SCHEMA_ALIAS] ?? []);\r\n\t\tthis.#managerContext.setContents(buildUpValue.blocks.contentData);\r\n\t\tthis.#managerContext.setSettings(buildUpValue.blocks.settingsData);\r\n\t\tthis.#managerContext.setExposes(buildUpValue.blocks.expose);\r\n\t}\r\n\tpublic override get value(): UmbPropertyEditorRteValueType | undefined {\r\n\t\treturn super.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the input to readonly mode, meaning value cannot be changed but still able to read and select its content.\r\n\t * @default false\r\n\t */\r\n\t@property({ type: Boolean, reflect: true })\r\n\treadonly = false;\r\n\r\n\t@property({ type: Boolean })\r\n\tmandatory?: boolean;\r\n\r\n\t@property({ type: String })\r\n\tmandatoryMessage?: string | undefined;\r\n\r\n\t@state()\r\n\tprotected _config?: UmbPropertyEditorConfigCollection;\r\n\r\n\t/**\r\n\t * @deprecated _value is depreacated, use `super.value` instead.\r\n\t */\r\n\t@state()\r\n\tprotected get _value(): UmbPropertyEditorRteValueType | undefined {\r\n\t\treturn super.value;\r\n\t}\r\n\tprotected set _value(value: UmbPropertyEditorRteValueType | undefined) {\r\n\t\tsuper.value = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Separate state for markup, to avoid re-rendering/re-setting the value of the Tiptap editor when the value does not really change.\r\n\t */\r\n\t@state()\r\n\tprotected _markup = '';\r\n\r\n\treadonly #managerContext = new UmbBlockRteManagerContext(this);\r\n\treadonly #entriesContext = new UmbBlockRteEntriesContext(this);\r\n\r\n\treadonly #validationContext = new UmbValidationContext(this);\r\n\t#contentDataPathTranslator?: UmbBlockElementDataValidationPathTranslator;\r\n\t#settingsDataPathTranslator?: UmbBlockElementDataValidationPathTranslator;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.consumeContext(UMB_PROPERTY_CONTEXT, (context) => {\r\n\t\t\tthis.#gotPropertyContext(context);\r\n\t\t});\r\n\r\n\t\tthis.consumeContext(UMB_PROPERTY_DATASET_CONTEXT, (context) => {\r\n\t\t\tthis.#managerContext.setVariantId(context.getVariantId());\r\n\t\t});\r\n\r\n\t\tthis.observe(\r\n\t\t\tthis.#entriesContext.layoutEntries,\r\n\t\t\t(layouts) => {\r\n\t\t\t\t// Update manager:\r\n\t\t\t\tthis.#managerContext.setLayouts(layouts);\r\n\t\t\t},\r\n\t\t\tnull,\r\n\t\t);\r\n\r\n\t\tthis.addValidator(\r\n\t\t\t'valueMissing',\r\n\t\t\t() => this.mandatoryMessage ?? UMB_VALIDATION_EMPTY_LOCALIZATION_KEY,\r\n\t\t\t() => !!this.mandatory && this.value === undefined,\r\n\t\t);\r\n\t}\r\n\r\n\t#gotPropertyContext(context: typeof UMB_PROPERTY_CONTEXT.TYPE) {\r\n\t\tthis.observe(\r\n\t\t\tcontext.dataPath,\r\n\t\t\t(dataPath) => {\r\n\t\t\t\t// Translate paths for content/settings:\r\n\t\t\t\tthis.#contentDataPathTranslator?.destroy();\r\n\t\t\t\tthis.#settingsDataPathTranslator?.destroy();\r\n\t\t\t\tif (dataPath) {\r\n\t\t\t\t\t// Set the data path for the local validation context:\r\n\t\t\t\t\tthis.#validationContext.setDataPath(dataPath + '.blocks');\r\n\r\n\t\t\t\t\tthis.#contentDataPathTranslator = new UmbBlockElementDataValidationPathTranslator(this, 'contentData');\r\n\t\t\t\t\tthis.#settingsDataPathTranslator = new UmbBlockElementDataValidationPathTranslator(this, 'settingsData');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'observeDataPath',\r\n\t\t);\r\n\r\n\t\tthis.observe(\r\n\t\t\tcontext?.alias,\r\n\t\t\t(alias) => {\r\n\t\t\t\tthis.#managerContext.setPropertyAlias(alias);\r\n\t\t\t},\r\n\t\t\t'observePropertyAlias',\r\n\t\t);\r\n\r\n\t\tthis.observe(\r\n\t\t\tobserveMultiple([\r\n\t\t\t\tthis.#managerContext.layouts,\r\n\t\t\t\tthis.#managerContext.contents,\r\n\t\t\t\tthis.#managerContext.settings,\r\n\t\t\t\tthis.#managerContext.exposes,\r\n\t\t\t]),\r\n\t\t\t([layouts, contents, settings, exposes]) => {\r\n\t\t\t\tif (layouts.length === 0) {\r\n\t\t\t\t\tif (super.value?.markup === undefined) {\r\n\t\t\t\t\t\tsuper.value = undefined;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsuper.value = {\r\n\t\t\t\t\t\t\t...super.value,\r\n\t\t\t\t\t\t\tblocks: {\r\n\t\t\t\t\t\t\t\tlayout: {},\r\n\t\t\t\t\t\t\t\tcontentData: [],\r\n\t\t\t\t\t\t\t\tsettingsData: [],\r\n\t\t\t\t\t\t\t\texpose: [],\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsuper.value = {\r\n\t\t\t\t\t\tmarkup: this._markup,\r\n\t\t\t\t\t\tblocks: {\r\n\t\t\t\t\t\t\tlayout: { [UMB_BLOCK_RTE_PROPERTY_EDITOR_SCHEMA_ALIAS]: layouts },\r\n\t\t\t\t\t\t\tcontentData: contents,\r\n\t\t\t\t\t\t\tsettingsData: settings,\r\n\t\t\t\t\t\t\texpose: exposes,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If we don't have a value set from the outside or an internal value, we don't want to set the value.\r\n\t\t\t\t// This is added to prevent the block list from setting an empty value on startup.\r\n\t\t\t\tif (super.value?.markup === undefined) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcontext.setValue(super.value);\r\n\t\t\t},\r\n\t\t\t'motherObserver',\r\n\t\t);\r\n\t}\r\n\r\n\tprotected _filterUnusedBlocks(usedContentKeys: (string | null)[]) {\r\n\t\tconst unusedLayouts = this.#managerContext.getLayouts().filter((x) => usedContentKeys.indexOf(x.contentKey) === -1);\r\n\r\n\t\tconst unusedContentKeys = unusedLayouts.map((x) => x.contentKey);\r\n\r\n\t\tconst unusedSettingsKeys = unusedLayouts\r\n\t\t\t.map((x) => x.settingsKey)\r\n\t\t\t.filter((x) => typeof x === 'string') as Array<string>;\r\n\r\n\t\tthis.#managerContext.removeManyContent(unusedContentKeys);\r\n\t\tthis.#managerContext.removeManySettings(unusedSettingsKeys);\r\n\t\tthis.#managerContext.removeManyLayouts(unusedContentKeys);\r\n\t}\r\n\r\n\tprotected _fireChangeEvent() {\r\n\t\tthis.dispatchEvent(new UmbPropertyValueChangeEvent());\r\n\t}\r\n}\r\n"],"names":["UmbPropertyEditorUiRteElementBase","UmbFormControlMixin","UmbLitElement","#managerContext","UmbBlockRteManagerContext","#entriesContext","UmbBlockRteEntriesContext","#validationContext","UmbValidationContext","UMB_PROPERTY_CONTEXT","context","#gotPropertyContext","UMB_PROPERTY_DATASET_CONTEXT","layouts","UMB_VALIDATION_EMPTY_LOCALIZATION_KEY","config","blocks","value","buildUpValue","UMB_BLOCK_RTE_PROPERTY_EDITOR_SCHEMA_ALIAS","#contentDataPathTranslator","#settingsDataPathTranslator","dataPath","UmbBlockElementDataValidationPathTranslator","alias","observeMultiple","contents","settings","exposes","usedContentKeys","unusedLayouts","x","unusedContentKeys","unusedSettingsKeys","UmbPropertyValueChangeEvent","__decorateClass","property","oldValue","state"],"mappings":"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"}