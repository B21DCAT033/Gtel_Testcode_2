{"version":3,"file":"tiny-mce-block-picker.plugin-B9rjhi1w.js","sources":["../../../src/packages/tiny-mce/plugins/tiny-mce-block-picker.plugin.ts"],"sourcesContent":["import { UMB_BLOCK_RTE_DATA_CONTENT_KEY } from '@umbraco-cms/backoffice/rte';\r\nimport { type TinyMcePluginArguments, UmbTinyMcePluginBase } from '@umbraco-cms/backoffice/tiny-mce';\r\nimport { UmbLocalizationController } from '@umbraco-cms/backoffice/localization-api';\r\nimport type { UmbBlockTypeBaseModel } from '@umbraco-cms/backoffice/block-type';\r\nimport type { Editor } from '@umbraco-cms/backoffice/external/tinymce';\r\nimport type { UmbBlockDataModel } from '@umbraco-cms/backoffice/block';\r\nimport {\r\n\tUMB_BLOCK_RTE_ENTRIES_CONTEXT,\r\n\tUMB_BLOCK_RTE_MANAGER_CONTEXT,\r\n\ttype UmbBlockRteLayoutModel,\r\n} from '@umbraco-cms/backoffice/block-rte';\r\n\r\nexport default class UmbTinyMceMultiUrlPickerPlugin extends UmbTinyMcePluginBase {\r\n\treadonly #localize = new UmbLocalizationController(this._host);\r\n\treadonly #editor: Editor;\r\n\t#blocks?: Array<UmbBlockTypeBaseModel>;\r\n\t#entriesContext?: typeof UMB_BLOCK_RTE_ENTRIES_CONTEXT.TYPE;\r\n\r\n\tconstructor(args: TinyMcePluginArguments) {\r\n\t\tsuper(args);\r\n\r\n\t\tthis.#editor = args.editor;\r\n\r\n\t\targs.editor.ui.registry.addToggleButton('umbblockpicker', {\r\n\t\t\ticon: 'visualblocks',\r\n\t\t\ttooltip: this.#localize.term('blockEditor_insertBlock'),\r\n\t\t\tonAction: () => this.showDialog(),\r\n\t\t\tonSetup: function (api) {\r\n\t\t\t\tconst changed = args.editor.selection.selectorChangedWithUnbind(\r\n\t\t\t\t\t'umb-rte-block[data-content-key], umb-rte-block-inline[data-content-key]',\r\n\t\t\t\t\t(state) => api.setActive(state),\r\n\t\t\t\t);\r\n\t\t\t\treturn () => changed.unbind();\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tthis.consumeContext(UMB_BLOCK_RTE_MANAGER_CONTEXT, (context) => {\r\n\t\t\tthis.observe(\r\n\t\t\t\tcontext.blockTypes,\r\n\t\t\t\t(blockTypes) => {\r\n\t\t\t\t\tthis.#blocks = blockTypes;\r\n\t\t\t\t},\r\n\t\t\t\t'blockType',\r\n\t\t\t);\r\n\r\n\t\t\tthis.observe(\r\n\t\t\t\tcontext.contents,\r\n\t\t\t\t(contents) => {\r\n\t\t\t\t\tthis.#updateBlocks(contents, context.getLayouts());\r\n\t\t\t\t},\r\n\t\t\t\t'contents',\r\n\t\t\t);\r\n\t\t});\r\n\t\tthis.consumeContext(UMB_BLOCK_RTE_ENTRIES_CONTEXT, (context) => {\r\n\t\t\tthis.#entriesContext = context;\r\n\t\t});\r\n\t}\r\n\r\n\tasync showDialog() {\r\n\t\t//const blockEl = this.editor.selection.getNode();\r\n\r\n\t\t/*if (blockEl.nodeName === 'UMB-RTE-BLOCK' || blockEl.nodeName === 'UMB-RTE-BLOCK-INLINE') {\r\n\t\t\tconst blockkey = blockEl.getAttribute('data-content-key') ?? undefined;\r\n\t\t\tif (blockkey) {\r\n\t\t\t\t// TODO: Missing a solution to edit a block from this scope. [NL]\r\n\t\t\t\tthis.#editBlock(blockkey);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}*/\r\n\r\n\t\t// If no block is selected, open the block picker:\r\n\t\tthis.#createBlock();\r\n\t}\r\n\r\n\t#createBlock() {\r\n\t\tif (!this.#entriesContext) {\r\n\t\t\tconsole.error('[Block Picker] No entries context available.');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet createPath: string | undefined = undefined;\r\n\r\n\t\tif (this.#blocks?.length === 1) {\r\n\t\t\tconst elementKey = this.#blocks[0].contentElementTypeKey;\r\n\t\t\tcreatePath = this.#entriesContext.getPathForCreateBlock() + 'modal/umb-modal-workspace/create/' + elementKey;\r\n\t\t} else {\r\n\t\t\tcreatePath = this.#entriesContext.getPathForCreateBlock();\r\n\t\t}\r\n\r\n\t\tif (createPath) {\r\n\t\t\twindow.history.pushState({}, '', createPath);\r\n\t\t}\r\n\t}\r\n\r\n\t#updateBlocks(blocks: UmbBlockDataModel[], layouts: Array<UmbBlockRteLayoutModel>) {\r\n\t\tconst editor = this.#editor;\r\n\t\tif (!editor?.dom) return;\r\n\r\n\t\tconst existingBlocks = editor.dom\r\n\t\t\t.select('umb-rte-block, umb-rte-block-inline')\r\n\t\t\t.map((x) => x.getAttribute(UMB_BLOCK_RTE_DATA_CONTENT_KEY));\r\n\t\tconst newBlocks = blocks.filter((x) => !existingBlocks.find((contentKey) => contentKey === x.key));\r\n\r\n\t\tnewBlocks.forEach((block) => {\r\n\t\t\t// Find layout for block\r\n\t\t\tconst layout = layouts.find((x) => x.contentKey === block.key);\r\n\t\t\tconst inline = layout?.displayInline ?? false;\r\n\r\n\t\t\tlet blockTag = 'umb-rte-block';\r\n\r\n\t\t\tif (inline) {\r\n\t\t\t\tblockTag = 'umb-rte-block-inline';\r\n\t\t\t}\r\n\r\n\t\t\tconst blockEl = `<${blockTag} ${UMB_BLOCK_RTE_DATA_CONTENT_KEY}=\"${block.key}\"></${blockTag}>`;\r\n\r\n\t\t\teditor.selection.setContent(blockEl);\r\n\t\t\teditor.setDirty(true);\r\n\t\t\teditor.dispatch('Change');\r\n\t\t});\r\n\t}\r\n}\r\n"],"names":["UmbTinyMceMultiUrlPickerPlugin","UmbTinyMcePluginBase","#localize","UmbLocalizationController","#editor","#blocks","#entriesContext","args","api","changed","state","UMB_BLOCK_RTE_MANAGER_CONTEXT","context","blockTypes","contents","#updateBlocks","UMB_BLOCK_RTE_ENTRIES_CONTEXT","#createBlock","createPath","elementKey","blocks","layouts","editor","existingBlocks","x","UMB_BLOCK_RTE_DATA_CONTENT_KEY","contentKey","block","inline","blockTag","blockEl"],"mappings":";;;;AAYA,MAAqBA,UAAuCC,EAAqB;AAAA,EACvEC,KAAY,IAAIC,EAA0B,KAAK,KAAK;AAAA,EACpDC;AAAA,EACTC;AAAA,EACAC;AAAA,EAEA,YAAYC,GAA8B;AACzC,UAAMA,CAAI,GAEV,KAAKH,KAAUG,EAAK,QAEpBA,EAAK,OAAO,GAAG,SAAS,gBAAgB,kBAAkB;AAAA,MACzD,MAAM;AAAA,MACN,SAAS,KAAKL,GAAU,KAAK,yBAAyB;AAAA,MACtD,UAAU,MAAM,KAAK,WAAW;AAAA,MAChC,SAAS,SAAUM,GAAK;AACjB,cAAAC,IAAUF,EAAK,OAAO,UAAU;AAAA,UACrC;AAAA,UACA,CAACG,MAAUF,EAAI,UAAUE,CAAK;AAAA,QAC/B;AACO,eAAA,MAAMD,EAAQ,OAAO;AAAA,MAAA;AAAA,IAC7B,CACA,GAEI,KAAA,eAAeE,GAA+B,CAACC,MAAY;AAC1D,WAAA;AAAA,QACJA,EAAQ;AAAA,QACR,CAACC,MAAe;AACf,eAAKR,KAAUQ;AAAA,QAChB;AAAA,QACA;AAAA,MACD,GAEK,KAAA;AAAA,QACJD,EAAQ;AAAA,QACR,CAACE,MAAa;AACb,eAAKC,GAAcD,GAAUF,EAAQ,WAAA,CAAY;AAAA,QAClD;AAAA,QACA;AAAA,MACD;AAAA,IAAA,CACA,GACI,KAAA,eAAeI,GAA+B,CAACJ,MAAY;AAC/D,WAAKN,KAAkBM;AAAA,IAAA,CACvB;AAAA,EAAA;AAAA,EAGF,MAAM,aAAa;AAalB,SAAKK,GAAa;AAAA,EAAA;AAAA,EAGnBA,KAAe;AACV,QAAA,CAAC,KAAKX,IAAiB;AAC1B,cAAQ,MAAM,8CAA8C;AAC5D;AAAA,IAAA;AAGD,QAAIY;AAEA,QAAA,KAAKb,IAAS,WAAW,GAAG;AAC/B,YAAMc,IAAa,KAAKd,GAAQ,CAAC,EAAE;AACnC,MAAAa,IAAa,KAAKZ,GAAgB,sBAAsB,IAAI,sCAAsCa;AAAA,IAAA;AAErF,MAAAD,IAAA,KAAKZ,GAAgB,sBAAsB;AAGzD,IAAIY,KACH,OAAO,QAAQ,UAAU,CAAA,GAAI,IAAIA,CAAU;AAAA,EAC5C;AAAA,EAGDH,GAAcK,GAA6BC,GAAwC;AAClF,UAAMC,IAAS,KAAKlB;AAChB,QAAA,CAACkB,GAAQ,IAAK;AAElB,UAAMC,IAAiBD,EAAO,IAC5B,OAAO,qCAAqC,EAC5C,IAAI,CAACE,MAAMA,EAAE,aAAaC,CAA8B,CAAC;AAGjD,IAFQL,EAAO,OAAO,CAACI,MAAM,CAACD,EAAe,KAAK,CAACG,MAAeA,MAAeF,EAAE,GAAG,CAAC,EAEvF,QAAQ,CAACG,MAAU;AAGtB,YAAAC,IADSP,EAAQ,KAAK,CAACG,MAAMA,EAAE,eAAeG,EAAM,GAAG,GACtC,iBAAiB;AAExC,UAAIE,IAAW;AAEf,MAAID,MACQC,IAAA;AAGN,YAAAC,IAAU,IAAID,CAAQ,IAAIJ,CAA8B,KAAKE,EAAM,GAAG,OAAOE,CAAQ;AAEpF,MAAAP,EAAA,UAAU,WAAWQ,CAAO,GACnCR,EAAO,SAAS,EAAI,GACpBA,EAAO,SAAS,QAAQ;AAAA,IAAA,CACxB;AAAA,EAAA;AAEH;"}