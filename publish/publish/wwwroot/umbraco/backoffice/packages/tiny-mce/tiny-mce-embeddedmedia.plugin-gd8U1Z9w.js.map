{"version":3,"file":"tiny-mce-embeddedmedia.plugin-gd8U1Z9w.js","sources":["../../../src/packages/tiny-mce/plugins/tiny-mce-embeddedmedia.plugin.ts"],"sourcesContent":["import { type TinyMcePluginArguments, UmbTinyMcePluginBase } from '../components/input-tiny-mce/tiny-mce-plugin.js';\r\nimport { UmbLocalizationController } from '@umbraco-cms/backoffice/localization-api';\r\nimport type { UmbEmbeddedMediaModalData, UmbEmbeddedMediaModalValue } from '@umbraco-cms/backoffice/embedded-media';\r\nimport { UMB_MODAL_MANAGER_CONTEXT } from '@umbraco-cms/backoffice/modal';\r\nimport { UMB_EMBEDDED_MEDIA_MODAL } from '@umbraco-cms/backoffice/embedded-media';\r\n\r\nexport default class UmbTinyMceEmbeddedMediaPlugin extends UmbTinyMcePluginBase {\r\n\tconstructor(args: TinyMcePluginArguments) {\r\n\t\tsuper(args);\r\n\t\tconst localize = new UmbLocalizationController(args.host);\r\n\r\n\t\tthis.editor.ui.registry.addToggleButton('umbembeddialog', {\r\n\t\t\ticon: 'embed',\r\n\t\t\ttooltip: localize.term('general_embed'),\r\n\t\t\tonAction: () => this.#onAction(),\r\n\t\t\tonSetup: function (api) {\r\n\t\t\t\tconst changed = args.editor.selection.selectorChangedWithUnbind('div.umb-embed-holder', (state) =>\r\n\t\t\t\t\tapi.setActive(state),\r\n\t\t\t\t);\r\n\t\t\t\treturn () => changed.unbind();\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\t#onAction() {\r\n\t\t// Get the selected element\r\n\t\t// Check nodename is a DIV and the claslist contains 'umb-embed-holder'\r\n\t\tconst selectedElm = this.editor.selection.getNode();\r\n\r\n\t\tlet modify: UmbEmbeddedMediaModalData = {\r\n\t\t\twidth: 360,\r\n\t\t\theight: 240,\r\n\t\t};\r\n\r\n\t\tif (selectedElm.nodeName.toUpperCase() === 'DIV' && selectedElm.classList.contains('umb-embed-holder')) {\r\n\t\t\t// See if we can go and get the attributes\r\n\t\t\tconst url = this.editor.dom.getAttrib(selectedElm, 'data-embed-url');\r\n\t\t\tconst embedWidth = this.editor.dom.getAttrib(selectedElm, 'data-embed-width');\r\n\t\t\tconst embedHeight = this.editor.dom.getAttrib(selectedElm, 'data-embed-height');\r\n\t\t\tconst constrain = this.editor.dom.getAttrib(selectedElm, 'data-embed-constrain') === 'true';\r\n\r\n\t\t\tmodify = {\r\n\t\t\t\turl,\r\n\t\t\t\tconstrain,\r\n\t\t\t\twidth: parseInt(embedWidth) || modify.width,\r\n\t\t\t\theight: parseInt(embedHeight) || modify.height,\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tthis.#showModal(selectedElm, modify);\r\n\t}\r\n\r\n\t#insertInEditor(embed: UmbEmbeddedMediaModalValue, activeElement: HTMLElement) {\r\n\t\t// Wrap HTML preview content here in a DIV with non-editable class of .mceNonEditable\r\n\t\t// This turns it into a selectable/cutable block to move about\r\n\r\n\t\tconst wrapper = this.editor.dom.create(\r\n\t\t\t'div',\r\n\t\t\t{\r\n\t\t\t\tclass: 'mceNonEditable umb-embed-holder',\r\n\t\t\t\t'data-embed-url': embed.url ?? '',\r\n\t\t\t\t'data-embed-height': embed.height!,\r\n\t\t\t\t'data-embed-width': embed.width!,\r\n\t\t\t\t'data-embed-constrain': embed.constrain ?? false,\r\n\t\t\t\tcontenteditable: false,\r\n\t\t\t},\r\n\t\t\tembed.markup,\r\n\t\t);\r\n\r\n\t\t// Only replace if activeElement is an Embed element.\r\n\t\tif (activeElement?.nodeName.toUpperCase() === 'DIV' && activeElement.classList.contains('umb-embed-holder')) {\r\n\t\t\tactiveElement.replaceWith(wrapper); // directly replaces the html node\r\n\t\t} else {\r\n\t\t\tthis.editor.selection.setNode(wrapper);\r\n\t\t}\r\n\t}\r\n\r\n\tasync #showModal(selectedElm: HTMLElement, embeddedMediaModalData: UmbEmbeddedMediaModalData) {\r\n\t\tconst modalManager = await this.getContext(UMB_MODAL_MANAGER_CONTEXT);\r\n\t\tconst modalHandler = modalManager.open(this, UMB_EMBEDDED_MEDIA_MODAL, { data: embeddedMediaModalData });\r\n\r\n\t\tif (!modalHandler) return;\r\n\r\n\t\tconst result = await modalHandler.onSubmit();\r\n\t\tif (!result) return;\r\n\r\n\t\tthis.#insertInEditor(result, selectedElm);\r\n\t\tthis.editor.dispatch('Change');\r\n\t}\r\n}\r\n"],"names":["UmbTinyMceEmbeddedMediaPlugin","UmbTinyMcePluginBase","args","localize","UmbLocalizationController","#onAction","api","changed","state","selectedElm","modify","url","embedWidth","embedHeight","constrain","#showModal","#insertInEditor","embed","activeElement","wrapper","embeddedMediaModalData","modalHandler","UMB_MODAL_MANAGER_CONTEXT","UMB_EMBEDDED_MEDIA_MODAL","result"],"mappings":";;;;AAMA,MAAqBA,UAAsCC,EAAqB;AAAA,EAC/E,YAAYC,GAA8B;AACzC,UAAMA,CAAI;AACV,UAAMC,IAAW,IAAIC,EAA0BF,EAAK,IAAI;AAExD,SAAK,OAAO,GAAG,SAAS,gBAAgB,kBAAkB;AAAA,MACzD,MAAM;AAAA,MACN,SAASC,EAAS,KAAK,eAAe;AAAA,MACtC,UAAU,MAAM,KAAKE,GAAU;AAAA,MAC/B,SAAS,SAAUC,GAAK;AACjB,cAAAC,IAAUL,EAAK,OAAO,UAAU;AAAA,UAA0B;AAAA,UAAwB,CAACM,MACxFF,EAAI,UAAUE,CAAK;AAAA,QACpB;AACO,eAAA,MAAMD,EAAQ,OAAO;AAAA,MAAA;AAAA,IAC7B,CACA;AAAA,EAAA;AAAA,EAGFF,KAAY;AAGX,UAAMI,IAAc,KAAK,OAAO,UAAU,QAAQ;AAElD,QAAIC,IAAoC;AAAA,MACvC,OAAO;AAAA,MACP,QAAQ;AAAA,IACT;AAEI,QAAAD,EAAY,SAAS,kBAAkB,SAASA,EAAY,UAAU,SAAS,kBAAkB,GAAG;AAEvG,YAAME,IAAM,KAAK,OAAO,IAAI,UAAUF,GAAa,gBAAgB,GAC7DG,IAAa,KAAK,OAAO,IAAI,UAAUH,GAAa,kBAAkB,GACtEI,IAAc,KAAK,OAAO,IAAI,UAAUJ,GAAa,mBAAmB,GACxEK,IAAY,KAAK,OAAO,IAAI,UAAUL,GAAa,sBAAsB,MAAM;AAE5E,MAAAC,IAAA;AAAA,QACR,KAAAC;AAAA,QACA,WAAAG;AAAA,QACA,OAAO,SAASF,CAAU,KAAKF,EAAO;AAAA,QACtC,QAAQ,SAASG,CAAW,KAAKH,EAAO;AAAA,MACzC;AAAA,IAAA;AAGI,SAAAK,GAAWN,GAAaC,CAAM;AAAA,EAAA;AAAA,EAGpCM,GAAgBC,GAAmCC,GAA4B;AAIxE,UAAAC,IAAU,KAAK,OAAO,IAAI;AAAA,MAC/B;AAAA,MACA;AAAA,QACC,OAAO;AAAA,QACP,kBAAkBF,EAAM,OAAO;AAAA,QAC/B,qBAAqBA,EAAM;AAAA,QAC3B,oBAAoBA,EAAM;AAAA,QAC1B,wBAAwBA,EAAM,aAAa;AAAA,QAC3C,iBAAiB;AAAA,MAClB;AAAA,MACAA,EAAM;AAAA,IACP;AAGI,IAAAC,GAAe,SAAS,kBAAkB,SAASA,EAAc,UAAU,SAAS,kBAAkB,IACzGA,EAAc,YAAYC,CAAO,IAE5B,KAAA,OAAO,UAAU,QAAQA,CAAO;AAAA,EACtC;AAAA,EAGD,MAAMJ,GAAWN,GAA0BW,GAAmD;AAEvF,UAAAC,KADe,MAAM,KAAK,WAAWC,CAAyB,GAClC,KAAK,MAAMC,GAA0B,EAAE,MAAMH,GAAwB;AAEvG,QAAI,CAACC,EAAc;AAEb,UAAAG,IAAS,MAAMH,EAAa,SAAS;AAC3C,IAAKG,MAEA,KAAAR,GAAgBQ,GAAQf,CAAW,GACnC,KAAA,OAAO,SAAS,QAAQ;AAAA,EAAA;AAE/B;"}